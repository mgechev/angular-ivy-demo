{"version":3,"file":"core-testing.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../../packages/core/esm5/testing/src/async_fallback.js","../../../packages/core/esm5/testing/src/async.js","../../../packages/core/esm5/testing/src/component_fixture.js","../../../packages/core/esm5/testing/src/fake_async_fallback.js","../../../packages/core/esm5/testing/src/fake_async.js","../../../packages/core/esm5/testing/src/async_test_completer.js","../../../packages/core/esm5/testing/src/metadata_overrider.js","../../../packages/core/esm5/testing/src/resolvers.js","../../../packages/core/esm5/testing/src/test_bed_common.js","../../../packages/core/esm5/testing/src/r3_test_bed.js","../../../packages/core/esm5/testing/src/test_compiler.js","../../../packages/core/esm5/testing/src/test_bed.js","../../../packages/core/esm5/testing/src/before_each.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nvar _global = /** @type {?} */ ((typeof window === 'undefined' ? global : window));\n/**\n * Wraps a test function in an asynchronous test zone. The test will automatically\n * complete when all asynchronous calls within this zone are done. Can be used\n * to wrap an {\\@link inject} call.\n *\n * Example:\n *\n * ```\n * it('...', async(inject([AClass], (object) => {\n *   object.doSomething.then(() => {\n *     expect(...);\n *   })\n * });\n * ```\n *\n *\n * @param {?} fn\n * @return {?}\n */\nexport function asyncFallback(fn) {\n    // If we're running using the Jasmine test framework, adapt to call the 'done'\n    // function when asynchronous activity is finished.\n    if (_global.jasmine) {\n        // Not using an arrow function to preserve context passed from call site\n        return function (done) {\n            if (!done) {\n                // if we run beforeEach in @angular/core/testing/testing_internal then we get no done\n                // fake it here and assume sync.\n                done = function () { };\n                done.fail = function (e) { throw e; };\n            }\n            runInTestZone(fn, this, done, function (err) {\n                if (typeof err === 'string') {\n                    return done.fail(new Error(/** @type {?} */ (err)));\n                }\n                else {\n                    done.fail(err);\n                }\n            });\n        };\n    }\n    // Otherwise, return a promise which will resolve when asynchronous activity\n    // is finished. This will be correctly consumed by the Mocha framework with\n    // it('...', async(myFn)); or can be used in a custom framework.\n    // Not using an arrow function to preserve context passed from call site\n    return function () {\n        var _this = this;\n        return new Promise(function (finishCallback, failCallback) {\n            runInTestZone(fn, _this, finishCallback, failCallback);\n        });\n    };\n}\n/**\n * @param {?} fn\n * @param {?} context\n * @param {?} finishCallback\n * @param {?} failCallback\n * @return {?}\n */\nfunction runInTestZone(fn, context, finishCallback, failCallback) {\n    /** @type {?} */\n    var currentZone = Zone.current;\n    /** @type {?} */\n    var AsyncTestZoneSpec = (/** @type {?} */ (Zone))['AsyncTestZoneSpec'];\n    if (AsyncTestZoneSpec === undefined) {\n        throw new Error('AsyncTestZoneSpec is needed for the async() test helper but could not be found. ' +\n            'Please make sure that your environment includes zone.js/dist/async-test.js');\n    }\n    /** @type {?} */\n    var ProxyZoneSpec = /** @type {?} */ ((/** @type {?} */ (Zone))['ProxyZoneSpec']);\n    if (ProxyZoneSpec === undefined) {\n        throw new Error('ProxyZoneSpec is needed for the async() test helper but could not be found. ' +\n            'Please make sure that your environment includes zone.js/dist/proxy.js');\n    }\n    /** @type {?} */\n    var proxyZoneSpec = ProxyZoneSpec.get();\n    ProxyZoneSpec.assertPresent();\n    /** @type {?} */\n    var proxyZone = Zone.current.getZoneWith('ProxyZoneSpec');\n    /** @type {?} */\n    var previousDelegate = proxyZoneSpec.getDelegate();\n    proxyZone.parent.run(function () {\n        /** @type {?} */\n        var testZoneSpec = new AsyncTestZoneSpec(function () {\n            // Need to restore the original zone.\n            currentZone.run(function () {\n                if (proxyZoneSpec.getDelegate() == testZoneSpec) {\n                    // Only reset the zone spec if it's sill this one. Otherwise, assume it's OK.\n                    proxyZoneSpec.setDelegate(previousDelegate);\n                }\n                finishCallback();\n            });\n        }, function (error) {\n            // Need to restore the original zone.\n            currentZone.run(function () {\n                if (proxyZoneSpec.getDelegate() == testZoneSpec) {\n                    // Only reset the zone spec if it's sill this one. Otherwise, assume it's OK.\n                    proxyZoneSpec.setDelegate(previousDelegate);\n                }\n                failCallback(error);\n            });\n        }, 'test');\n        proxyZoneSpec.setDelegate(testZoneSpec);\n    });\n    return Zone.current.runGuarded(fn, context);\n}\n//# sourceMappingURL=async_fallback.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { asyncFallback } from './async_fallback';\n/**\n * Wraps a test function in an asynchronous test zone. The test will automatically\n * complete when all asynchronous calls within this zone are done. Can be used\n * to wrap an {\\@link inject} call.\n *\n * Example:\n *\n * ```\n * it('...', async(inject([AClass], (object) => {\n *   object.doSomething.then(() => {\n *     expect(...);\n *   })\n * });\n * ```\n *\n * \\@publicApi\n * @param {?} fn\n * @return {?}\n */\nexport function async(fn) {\n    /** @type {?} */\n    var _Zone = typeof Zone !== 'undefined' ? Zone : null;\n    if (!_Zone) {\n        return function () {\n            return Promise.reject('Zone is needed for the async() test helper but could not be found. ' +\n                'Please make sure that your environment includes zone.js/dist/zone.js');\n        };\n    }\n    /** @type {?} */\n    var asyncTest = _Zone && _Zone[_Zone.__symbol__('asyncTest')];\n    if (typeof asyncTest === 'function') {\n        return asyncTest(fn);\n    }\n    // not using new version of zone.js\n    // TODO @JiaLiPassion, remove this after all library updated to\n    // newest version of zone.js(0.8.25)\n    return asyncFallback(fn);\n}\n//# sourceMappingURL=async.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { RendererFactory2, getDebugNode } from '@angular/core';\n/**\n * Fixture for debugging and testing a component.\n *\n * \\@publicApi\n * @template T\n */\nvar /**\n * Fixture for debugging and testing a component.\n *\n * \\@publicApi\n * @template T\n */\nComponentFixture = /** @class */ (function () {\n    function ComponentFixture(componentRef, ngZone, _autoDetect) {\n        var _this = this;\n        this.componentRef = componentRef;\n        this.ngZone = ngZone;\n        this._autoDetect = _autoDetect;\n        this._isStable = true;\n        this._isDestroyed = false;\n        this._resolve = null;\n        this._promise = null;\n        this._onUnstableSubscription = null;\n        this._onStableSubscription = null;\n        this._onMicrotaskEmptySubscription = null;\n        this._onErrorSubscription = null;\n        this.changeDetectorRef = componentRef.changeDetectorRef;\n        this.elementRef = componentRef.location;\n        this.debugElement = /** @type {?} */ (getDebugNode(this.elementRef.nativeElement));\n        this.componentInstance = componentRef.instance;\n        this.nativeElement = this.elementRef.nativeElement;\n        this.componentRef = componentRef;\n        this.ngZone = ngZone;\n        if (ngZone) {\n            // Create subscriptions outside the NgZone so that the callbacks run oustide\n            // of NgZone.\n            ngZone.runOutsideAngular(function () {\n                _this._onUnstableSubscription =\n                    ngZone.onUnstable.subscribe({ next: function () { _this._isStable = false; } });\n                _this._onMicrotaskEmptySubscription = ngZone.onMicrotaskEmpty.subscribe({\n                    next: function () {\n                        if (_this._autoDetect) {\n                            // Do a change detection run with checkNoChanges set to true to check\n                            // there are no changes on the second run.\n                            _this.detectChanges(true);\n                        }\n                    }\n                });\n                _this._onStableSubscription = ngZone.onStable.subscribe({\n                    next: function () {\n                        _this._isStable = true;\n                        // Check whether there is a pending whenStable() completer to resolve.\n                        if (_this._promise !== null) {\n                            // If so check whether there are no pending macrotasks before resolving.\n                            // Do this check in the next tick so that ngZone gets a chance to update the state of\n                            // pending macrotasks.\n                            scheduleMicroTask(function () {\n                                if (!ngZone.hasPendingMacrotasks) {\n                                    if (_this._promise !== null) {\n                                        /** @type {?} */ ((_this._resolve))(true);\n                                        _this._resolve = null;\n                                        _this._promise = null;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                });\n                _this._onErrorSubscription =\n                    ngZone.onError.subscribe({ next: function (error) { throw error; } });\n            });\n        }\n    }\n    /**\n     * @param {?} checkNoChanges\n     * @return {?}\n     */\n    ComponentFixture.prototype._tick = /**\n     * @param {?} checkNoChanges\n     * @return {?}\n     */\n    function (checkNoChanges) {\n        this.changeDetectorRef.detectChanges();\n        if (checkNoChanges) {\n            this.checkNoChanges();\n        }\n    };\n    /**\n     * Trigger a change detection cycle for the component.\n     */\n    /**\n     * Trigger a change detection cycle for the component.\n     * @param {?=} checkNoChanges\n     * @return {?}\n     */\n    ComponentFixture.prototype.detectChanges = /**\n     * Trigger a change detection cycle for the component.\n     * @param {?=} checkNoChanges\n     * @return {?}\n     */\n    function (checkNoChanges) {\n        var _this = this;\n        if (checkNoChanges === void 0) { checkNoChanges = true; }\n        if (this.ngZone != null) {\n            // Run the change detection inside the NgZone so that any async tasks as part of the change\n            // detection are captured by the zone and can be waited for in isStable.\n            this.ngZone.run(function () { _this._tick(checkNoChanges); });\n        }\n        else {\n            // Running without zone. Just do the change detection.\n            this._tick(checkNoChanges);\n        }\n    };\n    /**\n     * Do a change detection run to make sure there were no changes.\n     */\n    /**\n     * Do a change detection run to make sure there were no changes.\n     * @return {?}\n     */\n    ComponentFixture.prototype.checkNoChanges = /**\n     * Do a change detection run to make sure there were no changes.\n     * @return {?}\n     */\n    function () { this.changeDetectorRef.checkNoChanges(); };\n    /**\n     * Set whether the fixture should autodetect changes.\n     *\n     * Also runs detectChanges once so that any existing change is detected.\n     */\n    /**\n     * Set whether the fixture should autodetect changes.\n     *\n     * Also runs detectChanges once so that any existing change is detected.\n     * @param {?=} autoDetect\n     * @return {?}\n     */\n    ComponentFixture.prototype.autoDetectChanges = /**\n     * Set whether the fixture should autodetect changes.\n     *\n     * Also runs detectChanges once so that any existing change is detected.\n     * @param {?=} autoDetect\n     * @return {?}\n     */\n    function (autoDetect) {\n        if (autoDetect === void 0) { autoDetect = true; }\n        if (this.ngZone == null) {\n            throw new Error('Cannot call autoDetectChanges when ComponentFixtureNoNgZone is set');\n        }\n        this._autoDetect = autoDetect;\n        this.detectChanges();\n    };\n    /**\n     * Return whether the fixture is currently stable or has async tasks that have not been completed\n     * yet.\n     */\n    /**\n     * Return whether the fixture is currently stable or has async tasks that have not been completed\n     * yet.\n     * @return {?}\n     */\n    ComponentFixture.prototype.isStable = /**\n     * Return whether the fixture is currently stable or has async tasks that have not been completed\n     * yet.\n     * @return {?}\n     */\n    function () { return this._isStable && !/** @type {?} */ ((this.ngZone)).hasPendingMacrotasks; };\n    /**\n     * Get a promise that resolves when the fixture is stable.\n     *\n     * This can be used to resume testing after events have triggered asynchronous activity or\n     * asynchronous change detection.\n     */\n    /**\n     * Get a promise that resolves when the fixture is stable.\n     *\n     * This can be used to resume testing after events have triggered asynchronous activity or\n     * asynchronous change detection.\n     * @return {?}\n     */\n    ComponentFixture.prototype.whenStable = /**\n     * Get a promise that resolves when the fixture is stable.\n     *\n     * This can be used to resume testing after events have triggered asynchronous activity or\n     * asynchronous change detection.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.isStable()) {\n            return Promise.resolve(false);\n        }\n        else if (this._promise !== null) {\n            return this._promise;\n        }\n        else {\n            this._promise = new Promise(function (res) { _this._resolve = res; });\n            return this._promise;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ComponentFixture.prototype._getRenderer = /**\n     * @return {?}\n     */\n    function () {\n        if (this._renderer === undefined) {\n            this._renderer = this.componentRef.injector.get(RendererFactory2, null);\n        }\n        return /** @type {?} */ (this._renderer);\n    };\n    /**\n      * Get a promise that resolves when the ui state is stable following animations.\n      */\n    /**\n     * Get a promise that resolves when the ui state is stable following animations.\n     * @return {?}\n     */\n    ComponentFixture.prototype.whenRenderingDone = /**\n     * Get a promise that resolves when the ui state is stable following animations.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var renderer = this._getRenderer();\n        if (renderer && renderer.whenRenderingDone) {\n            return renderer.whenRenderingDone();\n        }\n        return this.whenStable();\n    };\n    /**\n     * Trigger component destruction.\n     */\n    /**\n     * Trigger component destruction.\n     * @return {?}\n     */\n    ComponentFixture.prototype.destroy = /**\n     * Trigger component destruction.\n     * @return {?}\n     */\n    function () {\n        if (!this._isDestroyed) {\n            this.componentRef.destroy();\n            if (this._onUnstableSubscription != null) {\n                this._onUnstableSubscription.unsubscribe();\n                this._onUnstableSubscription = null;\n            }\n            if (this._onStableSubscription != null) {\n                this._onStableSubscription.unsubscribe();\n                this._onStableSubscription = null;\n            }\n            if (this._onMicrotaskEmptySubscription != null) {\n                this._onMicrotaskEmptySubscription.unsubscribe();\n                this._onMicrotaskEmptySubscription = null;\n            }\n            if (this._onErrorSubscription != null) {\n                this._onErrorSubscription.unsubscribe();\n                this._onErrorSubscription = null;\n            }\n            this._isDestroyed = true;\n        }\n    };\n    return ComponentFixture;\n}());\n/**\n * Fixture for debugging and testing a component.\n *\n * \\@publicApi\n * @template T\n */\nexport { ComponentFixture };\nif (false) {\n    /**\n     * The DebugElement associated with the root element of this component.\n     * @type {?}\n     */\n    ComponentFixture.prototype.debugElement;\n    /**\n     * The instance of the root component class.\n     * @type {?}\n     */\n    ComponentFixture.prototype.componentInstance;\n    /**\n     * The native element at the root of the component.\n     * @type {?}\n     */\n    ComponentFixture.prototype.nativeElement;\n    /**\n     * The ElementRef for the element at the root of the component.\n     * @type {?}\n     */\n    ComponentFixture.prototype.elementRef;\n    /**\n     * The ChangeDetectorRef for the component\n     * @type {?}\n     */\n    ComponentFixture.prototype.changeDetectorRef;\n    /** @type {?} */\n    ComponentFixture.prototype._renderer;\n    /** @type {?} */\n    ComponentFixture.prototype._isStable;\n    /** @type {?} */\n    ComponentFixture.prototype._isDestroyed;\n    /** @type {?} */\n    ComponentFixture.prototype._resolve;\n    /** @type {?} */\n    ComponentFixture.prototype._promise;\n    /** @type {?} */\n    ComponentFixture.prototype._onUnstableSubscription;\n    /** @type {?} */\n    ComponentFixture.prototype._onStableSubscription;\n    /** @type {?} */\n    ComponentFixture.prototype._onMicrotaskEmptySubscription;\n    /** @type {?} */\n    ComponentFixture.prototype._onErrorSubscription;\n    /** @type {?} */\n    ComponentFixture.prototype.componentRef;\n    /** @type {?} */\n    ComponentFixture.prototype.ngZone;\n    /** @type {?} */\n    ComponentFixture.prototype._autoDetect;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction scheduleMicroTask(fn) {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n//# sourceMappingURL=component_fixture.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** *\n * fakeAsync has been moved to zone.js\n * this file is for fallback in case old version of zone.js is used\n  @type {?} */\nvar _Zone = typeof Zone !== 'undefined' ? Zone : null;\n/** @type {?} */\nvar FakeAsyncTestZoneSpec = _Zone && _Zone['FakeAsyncTestZoneSpec'];\n/** @type {?} */\nvar ProxyZoneSpec = _Zone && _Zone['ProxyZoneSpec'];\n/** @type {?} */\nvar _fakeAsyncTestZoneSpec = null;\n/**\n * Clears out the shared fake async zone for a test.\n * To be called in a global `beforeEach`.\n *\n * \\@publicApi\n * @return {?}\n */\nexport function resetFakeAsyncZoneFallback() {\n    _fakeAsyncTestZoneSpec = null;\n    // in node.js testing we may not have ProxyZoneSpec in which case there is nothing to reset.\n    ProxyZoneSpec && ProxyZoneSpec.assertPresent().resetDelegate();\n}\n/** @type {?} */\nvar _inFakeAsyncCall = false;\n/**\n * Wraps a function to be executed in the fakeAsync zone:\n * - microtasks are manually executed by calling `flushMicrotasks()`,\n * - timers are synchronous, `tick()` simulates the asynchronous passage of time.\n *\n * If there are any pending timers at the end of the function, an exception will be thrown.\n *\n * Can be used to wrap inject() calls.\n *\n * \\@usageNotes\n * ### Example\n *\n * {\\@example core/testing/ts/fake_async.ts region='basic'}\n *\n * \\@publicApi\n * @param {?} fn\n * @return {?} The function wrapped to be executed in the fakeAsync zone\n *\n */\nexport function fakeAsyncFallback(fn) {\n    // Not using an arrow function to preserve context passed from call site\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        /** @type {?} */\n        var proxyZoneSpec = ProxyZoneSpec.assertPresent();\n        if (_inFakeAsyncCall) {\n            throw new Error('fakeAsync() calls can not be nested');\n        }\n        _inFakeAsyncCall = true;\n        try {\n            if (!_fakeAsyncTestZoneSpec) {\n                if (proxyZoneSpec.getDelegate() instanceof FakeAsyncTestZoneSpec) {\n                    throw new Error('fakeAsync() calls can not be nested');\n                }\n                _fakeAsyncTestZoneSpec = new FakeAsyncTestZoneSpec();\n            }\n            /** @type {?} */\n            var res = void 0;\n            /** @type {?} */\n            var lastProxyZoneSpec = proxyZoneSpec.getDelegate();\n            proxyZoneSpec.setDelegate(_fakeAsyncTestZoneSpec);\n            try {\n                res = fn.apply(this, args);\n                flushMicrotasksFallback();\n            }\n            finally {\n                proxyZoneSpec.setDelegate(lastProxyZoneSpec);\n            }\n            if (_fakeAsyncTestZoneSpec.pendingPeriodicTimers.length > 0) {\n                throw new Error(_fakeAsyncTestZoneSpec.pendingPeriodicTimers.length + \" \" +\n                    \"periodic timer(s) still in the queue.\");\n            }\n            if (_fakeAsyncTestZoneSpec.pendingTimers.length > 0) {\n                throw new Error(_fakeAsyncTestZoneSpec.pendingTimers.length + \" timer(s) still in the queue.\");\n            }\n            return res;\n        }\n        finally {\n            _inFakeAsyncCall = false;\n            resetFakeAsyncZoneFallback();\n        }\n    };\n}\n/**\n * @return {?}\n */\nfunction _getFakeAsyncZoneSpec() {\n    if (_fakeAsyncTestZoneSpec == null) {\n        throw new Error('The code should be running in the fakeAsync zone to call this function');\n    }\n    return _fakeAsyncTestZoneSpec;\n}\n/**\n * Simulates the asynchronous passage of time for the timers in the fakeAsync zone.\n *\n * The microtasks queue is drained at the very start of this function and after any timer callback\n * has been executed.\n *\n * \\@usageNotes\n * ### Example\n *\n * {\\@example core/testing/ts/fake_async.ts region='basic'}\n *\n * \\@publicApi\n * @param {?=} millis\n * @return {?}\n */\nexport function tickFallback(millis) {\n    if (millis === void 0) { millis = 0; }\n    _getFakeAsyncZoneSpec().tick(millis);\n}\n/**\n * Simulates the asynchronous passage of time for the timers in the fakeAsync zone by\n * draining the macrotask queue until it is empty. The returned value is the milliseconds\n * of time that would have been elapsed.\n *\n * \\@publicApi\n * @param {?=} maxTurns\n * @return {?} The simulated time elapsed, in millis.\n *\n */\nexport function flushFallback(maxTurns) {\n    return _getFakeAsyncZoneSpec().flush(maxTurns);\n}\n/**\n * Discard all remaining periodic tasks.\n *\n * \\@publicApi\n * @return {?}\n */\nexport function discardPeriodicTasksFallback() {\n    /** @type {?} */\n    var zoneSpec = _getFakeAsyncZoneSpec();\n    zoneSpec.pendingPeriodicTimers.length = 0;\n}\n/**\n * Flush any pending microtasks.\n *\n * \\@publicApi\n * @return {?}\n */\nexport function flushMicrotasksFallback() {\n    _getFakeAsyncZoneSpec().flushMicrotasks();\n}\n//# sourceMappingURL=fake_async_fallback.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nimport { discardPeriodicTasksFallback, fakeAsyncFallback, flushFallback, flushMicrotasksFallback, resetFakeAsyncZoneFallback, tickFallback } from './fake_async_fallback';\n/** @type {?} */\nvar _Zone = typeof Zone !== 'undefined' ? Zone : null;\n/** @type {?} */\nvar fakeAsyncTestModule = _Zone && _Zone[_Zone.__symbol__('fakeAsyncTest')];\n/**\n * Clears out the shared fake async zone for a test.\n * To be called in a global `beforeEach`.\n *\n * \\@publicApi\n * @return {?}\n */\nexport function resetFakeAsyncZone() {\n    if (fakeAsyncTestModule) {\n        return fakeAsyncTestModule.resetFakeAsyncZone();\n    }\n    else {\n        return resetFakeAsyncZoneFallback();\n    }\n}\n/**\n * Wraps a function to be executed in the fakeAsync zone:\n * - microtasks are manually executed by calling `flushMicrotasks()`,\n * - timers are synchronous, `tick()` simulates the asynchronous passage of time.\n *\n * If there are any pending timers at the end of the function, an exception will be thrown.\n *\n * Can be used to wrap inject() calls.\n *\n * \\@usageNotes\n * ### Example\n *\n * {\\@example core/testing/ts/fake_async.ts region='basic'}\n *\n * \\@publicApi\n * @param {?} fn\n * @return {?} The function wrapped to be executed in the fakeAsync zone\n *\n */\nexport function fakeAsync(fn) {\n    if (fakeAsyncTestModule) {\n        return fakeAsyncTestModule.fakeAsync(fn);\n    }\n    else {\n        return fakeAsyncFallback(fn);\n    }\n}\n/**\n * Simulates the asynchronous passage of time for the timers in the fakeAsync zone.\n *\n * The microtasks queue is drained at the very start of this function and after any timer callback\n * has been executed.\n *\n * \\@usageNotes\n * ### Example\n *\n * {\\@example core/testing/ts/fake_async.ts region='basic'}\n *\n * \\@publicApi\n * @param {?=} millis\n * @return {?}\n */\nexport function tick(millis) {\n    if (millis === void 0) { millis = 0; }\n    if (fakeAsyncTestModule) {\n        return fakeAsyncTestModule.tick(millis);\n    }\n    else {\n        return tickFallback(millis);\n    }\n}\n/**\n * Simulates the asynchronous passage of time for the timers in the fakeAsync zone by\n * draining the macrotask queue until it is empty. The returned value is the milliseconds\n * of time that would have been elapsed.\n *\n * \\@publicApi\n * @param {?=} maxTurns\n * @return {?} The simulated time elapsed, in millis.\n *\n */\nexport function flush(maxTurns) {\n    if (fakeAsyncTestModule) {\n        return fakeAsyncTestModule.flush(maxTurns);\n    }\n    else {\n        return flushFallback(maxTurns);\n    }\n}\n/**\n * Discard all remaining periodic tasks.\n *\n * \\@publicApi\n * @return {?}\n */\nexport function discardPeriodicTasks() {\n    if (fakeAsyncTestModule) {\n        return fakeAsyncTestModule.discardPeriodicTasks();\n    }\n    else {\n        discardPeriodicTasksFallback();\n    }\n}\n/**\n * Flush any pending microtasks.\n *\n * \\@publicApi\n * @return {?}\n */\nexport function flushMicrotasks() {\n    if (fakeAsyncTestModule) {\n        return fakeAsyncTestModule.flushMicrotasks();\n    }\n    else {\n        return flushMicrotasksFallback();\n    }\n}\n//# sourceMappingURL=fake_async.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injectable completer that allows signaling completion of an asynchronous test. Used internally.\n */\nvar /**\n * Injectable completer that allows signaling completion of an asynchronous test. Used internally.\n */\nAsyncTestCompleter = /** @class */ (function () {\n    function AsyncTestCompleter() {\n        var _this = this;\n        this._promise = new Promise(function (res, rej) {\n            _this._resolve = res;\n            _this._reject = rej;\n        });\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    AsyncTestCompleter.prototype.done = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) { this._resolve(value); };\n    /**\n     * @param {?=} error\n     * @param {?=} stackTrace\n     * @return {?}\n     */\n    AsyncTestCompleter.prototype.fail = /**\n     * @param {?=} error\n     * @param {?=} stackTrace\n     * @return {?}\n     */\n    function (error, stackTrace) { this._reject(error); };\n    Object.defineProperty(AsyncTestCompleter.prototype, \"promise\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._promise; },\n        enumerable: true,\n        configurable: true\n    });\n    return AsyncTestCompleter;\n}());\n/**\n * Injectable completer that allows signaling completion of an asynchronous test. Used internally.\n */\nexport { AsyncTestCompleter };\nif (false) {\n    /** @type {?} */\n    AsyncTestCompleter.prototype._resolve;\n    /** @type {?} */\n    AsyncTestCompleter.prototype._reject;\n    /** @type {?} */\n    AsyncTestCompleter.prototype._promise;\n}\n//# sourceMappingURL=async_test_completer.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ɵstringify as stringify } from '@angular/core';\n/** @typedef {?} */\nvar StringMap;\n/** @type {?} */\nvar _nextReferenceId = 0;\nvar MetadataOverrider = /** @class */ (function () {\n    function MetadataOverrider() {\n        this._references = new Map();\n    }\n    /**\n     * Creates a new instance for the given metadata class\n     * based on an old instance and overrides.\n     */\n    /**\n     * Creates a new instance for the given metadata class\n     * based on an old instance and overrides.\n     * @template C, T\n     * @param {?} metadataClass\n     * @param {?} oldMetadata\n     * @param {?} override\n     * @return {?}\n     */\n    MetadataOverrider.prototype.overrideMetadata = /**\n     * Creates a new instance for the given metadata class\n     * based on an old instance and overrides.\n     * @template C, T\n     * @param {?} metadataClass\n     * @param {?} oldMetadata\n     * @param {?} override\n     * @return {?}\n     */\n    function (metadataClass, oldMetadata, override) {\n        /** @type {?} */\n        var props = {};\n        if (oldMetadata) {\n            _valueProps(oldMetadata).forEach(function (prop) { return props[prop] = (/** @type {?} */ (oldMetadata))[prop]; });\n        }\n        if (override.set) {\n            if (override.remove || override.add) {\n                throw new Error(\"Cannot set and add/remove \" + stringify(metadataClass) + \" at the same time!\");\n            }\n            setMetadata(props, override.set);\n        }\n        if (override.remove) {\n            removeMetadata(props, override.remove, this._references);\n        }\n        if (override.add) {\n            addMetadata(props, override.add);\n        }\n        return new metadataClass(/** @type {?} */ (props));\n    };\n    return MetadataOverrider;\n}());\nexport { MetadataOverrider };\nif (false) {\n    /** @type {?} */\n    MetadataOverrider.prototype._references;\n}\n/**\n * @param {?} metadata\n * @param {?} remove\n * @param {?} references\n * @return {?}\n */\nfunction removeMetadata(metadata, remove, references) {\n    /** @type {?} */\n    var removeObjects = new Set();\n    var _loop_1 = function (prop) {\n        /** @type {?} */\n        var removeValue = remove[prop];\n        if (removeValue instanceof Array) {\n            removeValue.forEach(function (value) { removeObjects.add(_propHashKey(prop, value, references)); });\n        }\n        else {\n            removeObjects.add(_propHashKey(prop, removeValue, references));\n        }\n    };\n    for (var prop in remove) {\n        _loop_1(prop);\n    }\n    var _loop_2 = function (prop) {\n        /** @type {?} */\n        var propValue = metadata[prop];\n        if (propValue instanceof Array) {\n            metadata[prop] = propValue.filter(function (value) { return !removeObjects.has(_propHashKey(prop, value, references)); });\n        }\n        else {\n            if (removeObjects.has(_propHashKey(prop, propValue, references))) {\n                metadata[prop] = undefined;\n            }\n        }\n    };\n    for (var prop in metadata) {\n        _loop_2(prop);\n    }\n}\n/**\n * @param {?} metadata\n * @param {?} add\n * @return {?}\n */\nfunction addMetadata(metadata, add) {\n    for (var prop in add) {\n        /** @type {?} */\n        var addValue = add[prop];\n        /** @type {?} */\n        var propValue = metadata[prop];\n        if (propValue != null && propValue instanceof Array) {\n            metadata[prop] = propValue.concat(addValue);\n        }\n        else {\n            metadata[prop] = addValue;\n        }\n    }\n}\n/**\n * @param {?} metadata\n * @param {?} set\n * @return {?}\n */\nfunction setMetadata(metadata, set) {\n    for (var prop in set) {\n        metadata[prop] = set[prop];\n    }\n}\n/**\n * @param {?} propName\n * @param {?} propValue\n * @param {?} references\n * @return {?}\n */\nfunction _propHashKey(propName, propValue, references) {\n    /** @type {?} */\n    var replacer = function (key, value) {\n        if (typeof value === 'function') {\n            value = _serializeReference(value, references);\n        }\n        return value;\n    };\n    return propName + \":\" + JSON.stringify(propValue, replacer);\n}\n/**\n * @param {?} ref\n * @param {?} references\n * @return {?}\n */\nfunction _serializeReference(ref, references) {\n    /** @type {?} */\n    var id = references.get(ref);\n    if (!id) {\n        id = \"\" + stringify(ref) + _nextReferenceId++;\n        references.set(ref, id);\n    }\n    return id;\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _valueProps(obj) {\n    /** @type {?} */\n    var props = [];\n    // regular public props\n    Object.keys(obj).forEach(function (prop) {\n        if (!prop.startsWith('_')) {\n            props.push(prop);\n        }\n    });\n    /** @type {?} */\n    var proto = obj;\n    while (proto = Object.getPrototypeOf(proto)) {\n        Object.keys(proto).forEach(function (protoProp) {\n            /** @type {?} */\n            var desc = Object.getOwnPropertyDescriptor(proto, protoProp);\n            if (!protoProp.startsWith('_') && desc && 'get' in desc) {\n                props.push(protoProp);\n            }\n        });\n    }\n    return props;\n}\n//# sourceMappingURL=metadata_overrider.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Component, Directive, NgModule, Pipe, ɵReflectionCapabilities as ReflectionCapabilities } from '@angular/core';\nimport { MetadataOverrider } from './metadata_overrider';\n/** @type {?} */\nvar reflection = new ReflectionCapabilities();\n/**\n * Base interface to resolve `\\@Component`, `\\@Directive`, `\\@Pipe` and `\\@NgModule`.\n * @record\n * @template T\n */\nexport function Resolver() { }\n/** @type {?} */\nResolver.prototype.resolve;\n/**\n * Allows to override ivy metadata for tests (via the `TestBed`).\n * @abstract\n * @template T\n */\nvar /**\n * Allows to override ivy metadata for tests (via the `TestBed`).\n * @abstract\n * @template T\n */\nOverrideResolver = /** @class */ (function () {\n    function OverrideResolver() {\n        this.overrides = new Map();\n        this.resolved = new Map();\n    }\n    /**\n     * @param {?} overrides\n     * @return {?}\n     */\n    OverrideResolver.prototype.setOverrides = /**\n     * @param {?} overrides\n     * @return {?}\n     */\n    function (overrides) {\n        var _this = this;\n        this.overrides.clear();\n        overrides.forEach(function (_a) {\n            var type = _a[0], override = _a[1];\n            return _this.overrides.set(type, override);\n        });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    OverrideResolver.prototype.getAnnotation = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        return reflection.annotations(type).find(function (a) { return a instanceof _this.type; }) || null;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    OverrideResolver.prototype.resolve = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        /** @type {?} */\n        var resolved = this.resolved.get(type) || null;\n        if (!resolved) {\n            resolved = this.getAnnotation(type);\n            if (resolved) {\n                /** @type {?} */\n                var override = this.overrides.get(type);\n                if (override) {\n                    /** @type {?} */\n                    var overrider = new MetadataOverrider();\n                    resolved = overrider.overrideMetadata(this.type, resolved, override);\n                }\n            }\n            this.resolved.set(type, resolved);\n        }\n        return resolved;\n    };\n    return OverrideResolver;\n}());\nif (false) {\n    /** @type {?} */\n    OverrideResolver.prototype.overrides;\n    /** @type {?} */\n    OverrideResolver.prototype.resolved;\n    /**\n     * @abstract\n     * @return {?}\n     */\n    OverrideResolver.prototype.type = function () { };\n}\nvar DirectiveResolver = /** @class */ (function (_super) {\n    tslib_1.__extends(DirectiveResolver, _super);\n    function DirectiveResolver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(DirectiveResolver.prototype, \"type\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return Directive; },\n        enumerable: true,\n        configurable: true\n    });\n    return DirectiveResolver;\n}(OverrideResolver));\nexport { DirectiveResolver };\nvar ComponentResolver = /** @class */ (function (_super) {\n    tslib_1.__extends(ComponentResolver, _super);\n    function ComponentResolver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ComponentResolver.prototype, \"type\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return Component; },\n        enumerable: true,\n        configurable: true\n    });\n    return ComponentResolver;\n}(OverrideResolver));\nexport { ComponentResolver };\nvar PipeResolver = /** @class */ (function (_super) {\n    tslib_1.__extends(PipeResolver, _super);\n    function PipeResolver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PipeResolver.prototype, \"type\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return Pipe; },\n        enumerable: true,\n        configurable: true\n    });\n    return PipeResolver;\n}(OverrideResolver));\nexport { PipeResolver };\nvar NgModuleResolver = /** @class */ (function (_super) {\n    tslib_1.__extends(NgModuleResolver, _super);\n    function NgModuleResolver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(NgModuleResolver.prototype, \"type\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return NgModule; },\n        enumerable: true,\n        configurable: true\n    });\n    return NgModuleResolver;\n}(OverrideResolver));\nexport { NgModuleResolver };\n//# sourceMappingURL=resolvers.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken } from '@angular/core';\n/**\n * An abstract class for inserting the root test component element in a platform independent way.\n *\n * \\@publicApi\n */\nvar /**\n * An abstract class for inserting the root test component element in a platform independent way.\n *\n * \\@publicApi\n */\nTestComponentRenderer = /** @class */ (function () {\n    function TestComponentRenderer() {\n    }\n    /**\n     * @param {?} rootElementId\n     * @return {?}\n     */\n    TestComponentRenderer.prototype.insertRootElement = /**\n     * @param {?} rootElementId\n     * @return {?}\n     */\n    function (rootElementId) { };\n    return TestComponentRenderer;\n}());\n/**\n * An abstract class for inserting the root test component element in a platform independent way.\n *\n * \\@publicApi\n */\nexport { TestComponentRenderer };\n/** *\n * \\@publicApi\n  @type {?} */\nexport var ComponentFixtureAutoDetect = new InjectionToken('ComponentFixtureAutoDetect');\n/** *\n * \\@publicApi\n  @type {?} */\nexport var ComponentFixtureNoNgZone = new InjectionToken('ComponentFixtureNoNgZone');\n/** @typedef {?} */\nvar TestModuleMetadata;\nexport { TestModuleMetadata };\n/**\n * Static methods implemented by the `TestBedViewEngine` and `TestBedRender3`\n *\n * \\@publicApi\n * @record\n */\nexport function TestBedStatic() { }\n/* TODO: handle strange member:\nnew (...args: any[]): TestBed;\n*/\n/** @type {?} */\nTestBedStatic.prototype.initTestEnvironment;\n/**\n * Reset the providers for the test injector.\n * @type {?}\n */\nTestBedStatic.prototype.resetTestEnvironment;\n/** @type {?} */\nTestBedStatic.prototype.resetTestingModule;\n/**\n * Allows overriding default compiler providers and settings\n * which are defined in test_injector.js\n * @type {?}\n */\nTestBedStatic.prototype.configureCompiler;\n/**\n * Allows overriding default providers, directives, pipes, modules of the test injector,\n * which are defined in test_injector.js\n * @type {?}\n */\nTestBedStatic.prototype.configureTestingModule;\n/**\n * Compile components with a `templateUrl` for the test's NgModule.\n * It is necessary to call this function\n * as fetching urls is asynchronous.\n * @type {?}\n */\nTestBedStatic.prototype.compileComponents;\n/** @type {?} */\nTestBedStatic.prototype.overrideModule;\n/** @type {?} */\nTestBedStatic.prototype.overrideComponent;\n/** @type {?} */\nTestBedStatic.prototype.overrideDirective;\n/** @type {?} */\nTestBedStatic.prototype.overridePipe;\n/** @type {?} */\nTestBedStatic.prototype.overrideTemplate;\n/**\n * Overrides the template of the given component, compiling the template\n * in the context of the TestingModule.\n *\n * Note: This works for JIT and AOTed components as well.\n * @type {?}\n */\nTestBedStatic.prototype.overrideTemplateUsingTestingModule;\n/**\n * Overwrites all providers for the given token with the given provider definition.\n *\n * Note: This works for JIT and AOTed components as well.\n * @type {?}\n */\nTestBedStatic.prototype.overrideProvider;\n/** @type {?} */\nTestBedStatic.prototype.overrideProvider;\n/** @type {?} */\nTestBedStatic.prototype.overrideProvider;\n/**\n * Overwrites all providers for the given token with the given provider definition.\n *\n * @deprecated as it makes all NgModules lazy. Introduced only for migrating off of it.\n * @type {?}\n */\nTestBedStatic.prototype.deprecatedOverrideProvider;\n/** @type {?} */\nTestBedStatic.prototype.deprecatedOverrideProvider;\n/** @type {?} */\nTestBedStatic.prototype.deprecatedOverrideProvider;\n/** @type {?} */\nTestBedStatic.prototype.get;\n/** @type {?} */\nTestBedStatic.prototype.createComponent;\n//# sourceMappingURL=test_bed_common.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injector, NgModule, NgZone, ɵRender3ComponentFactory as ComponentFactory, ɵRender3NgModuleRef as NgModuleRef, ɵcompileComponent as compileComponent, ɵcompileDirective as compileDirective, ɵcompileNgModuleDefs as compileNgModuleDefs, ɵcompilePipe as compilePipe, ɵgetInjectableDef as getInjectableDef, ɵpatchComponentDefWithScope as patchComponentDefWithScope, ɵstringify as stringify } from '@angular/core';\nimport { ComponentFixture } from './component_fixture';\nimport { ComponentResolver, DirectiveResolver, NgModuleResolver, PipeResolver } from './resolvers';\nimport { ComponentFixtureAutoDetect, ComponentFixtureNoNgZone, TestComponentRenderer } from './test_bed_common';\n/** @type {?} */\nvar _nextRootElementId = 0;\n/**\n * \\@description\n * Configures and initializes environment for unit testing and provides methods for\n * creating components and services in unit tests.\n *\n * TestBed is the primary api for writing unit tests for Angular applications and libraries.\n *\n * Note: Use `TestBed` in tests. It will be set to either `TestBedViewEngine` or `TestBedRender3`\n * according to the compiler used.\n */\nvar /**\n * \\@description\n * Configures and initializes environment for unit testing and provides methods for\n * creating components and services in unit tests.\n *\n * TestBed is the primary api for writing unit tests for Angular applications and libraries.\n *\n * Note: Use `TestBed` in tests. It will be set to either `TestBedViewEngine` or `TestBedRender3`\n * according to the compiler used.\n */\nTestBedRender3 = /** @class */ (function () {\n    function TestBedRender3() {\n        // Properties\n        this.platform = /** @type {?} */ ((null));\n        this.ngModule = /** @type {?} */ ((null));\n        this._moduleOverrides = [];\n        this._componentOverrides = [];\n        this._directiveOverrides = [];\n        this._pipeOverrides = [];\n        this._providerOverrides = [];\n        this._rootProviderOverrides = [];\n        this._providers = [];\n        this._declarations = [];\n        this._imports = [];\n        this._schemas = [];\n        this._activeFixtures = [];\n        this._moduleRef = /** @type {?} */ ((null));\n        this._instantiated = false;\n    }\n    /**\n     * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n     * angular module. These are common to every test in the suite.\n     *\n     * This may only be called once, to set up the common providers for the current test\n     * suite on the current platform. If you absolutely need to change the providers,\n     * first use `resetTestEnvironment`.\n     *\n     * Test modules and platforms for individual platforms are available from\n     * '@angular/<platform_name>/testing'.\n     *\n     * @publicApi\n     */\n    /**\n     * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n     * angular module. These are common to every test in the suite.\n     *\n     * This may only be called once, to set up the common providers for the current test\n     * suite on the current platform. If you absolutely need to change the providers,\n     * first use `resetTestEnvironment`.\n     *\n     * Test modules and platforms for individual platforms are available from\n     * '\\@angular/<platform_name>/testing'.\n     *\n     * \\@publicApi\n     * @param {?} ngModule\n     * @param {?} platform\n     * @param {?=} aotSummaries\n     * @return {?}\n     */\n    TestBedRender3.initTestEnvironment = /**\n     * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n     * angular module. These are common to every test in the suite.\n     *\n     * This may only be called once, to set up the common providers for the current test\n     * suite on the current platform. If you absolutely need to change the providers,\n     * first use `resetTestEnvironment`.\n     *\n     * Test modules and platforms for individual platforms are available from\n     * '\\@angular/<platform_name>/testing'.\n     *\n     * \\@publicApi\n     * @param {?} ngModule\n     * @param {?} platform\n     * @param {?=} aotSummaries\n     * @return {?}\n     */\n    function (ngModule, platform, aotSummaries) {\n        /** @type {?} */\n        var testBed = _getTestBedRender3();\n        testBed.initTestEnvironment(ngModule, platform, aotSummaries);\n        return testBed;\n    };\n    /**\n     * Reset the providers for the test injector.\n     *\n     * @publicApi\n     */\n    /**\n     * Reset the providers for the test injector.\n     *\n     * \\@publicApi\n     * @return {?}\n     */\n    TestBedRender3.resetTestEnvironment = /**\n     * Reset the providers for the test injector.\n     *\n     * \\@publicApi\n     * @return {?}\n     */\n    function () { _getTestBedRender3().resetTestEnvironment(); };\n    /**\n     * @param {?} config\n     * @return {?}\n     */\n    TestBedRender3.configureCompiler = /**\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        _getTestBedRender3().configureCompiler(config);\n        return /** @type {?} */ ((TestBedRender3));\n    };\n    /**\n     * Allows overriding default providers, directives, pipes, modules of the test injector,\n     * which are defined in test_injector.js\n     */\n    /**\n     * Allows overriding default providers, directives, pipes, modules of the test injector,\n     * which are defined in test_injector.js\n     * @param {?} moduleDef\n     * @return {?}\n     */\n    TestBedRender3.configureTestingModule = /**\n     * Allows overriding default providers, directives, pipes, modules of the test injector,\n     * which are defined in test_injector.js\n     * @param {?} moduleDef\n     * @return {?}\n     */\n    function (moduleDef) {\n        _getTestBedRender3().configureTestingModule(moduleDef);\n        return /** @type {?} */ ((TestBedRender3));\n    };\n    /**\n     * Compile components with a `templateUrl` for the test's NgModule.\n     * It is necessary to call this function\n     * as fetching urls is asynchronous.\n     */\n    /**\n     * Compile components with a `templateUrl` for the test's NgModule.\n     * It is necessary to call this function\n     * as fetching urls is asynchronous.\n     * @return {?}\n     */\n    TestBedRender3.compileComponents = /**\n     * Compile components with a `templateUrl` for the test's NgModule.\n     * It is necessary to call this function\n     * as fetching urls is asynchronous.\n     * @return {?}\n     */\n    function () { return _getTestBedRender3().compileComponents(); };\n    /**\n     * @param {?} ngModule\n     * @param {?} override\n     * @return {?}\n     */\n    TestBedRender3.overrideModule = /**\n     * @param {?} ngModule\n     * @param {?} override\n     * @return {?}\n     */\n    function (ngModule, override) {\n        _getTestBedRender3().overrideModule(ngModule, override);\n        return /** @type {?} */ ((TestBedRender3));\n    };\n    /**\n     * @param {?} component\n     * @param {?} override\n     * @return {?}\n     */\n    TestBedRender3.overrideComponent = /**\n     * @param {?} component\n     * @param {?} override\n     * @return {?}\n     */\n    function (component, override) {\n        _getTestBedRender3().overrideComponent(component, override);\n        return /** @type {?} */ ((TestBedRender3));\n    };\n    /**\n     * @param {?} directive\n     * @param {?} override\n     * @return {?}\n     */\n    TestBedRender3.overrideDirective = /**\n     * @param {?} directive\n     * @param {?} override\n     * @return {?}\n     */\n    function (directive, override) {\n        _getTestBedRender3().overrideDirective(directive, override);\n        return /** @type {?} */ ((TestBedRender3));\n    };\n    /**\n     * @param {?} pipe\n     * @param {?} override\n     * @return {?}\n     */\n    TestBedRender3.overridePipe = /**\n     * @param {?} pipe\n     * @param {?} override\n     * @return {?}\n     */\n    function (pipe, override) {\n        _getTestBedRender3().overridePipe(pipe, override);\n        return /** @type {?} */ ((TestBedRender3));\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @return {?}\n     */\n    TestBedRender3.overrideTemplate = /**\n     * @param {?} component\n     * @param {?} template\n     * @return {?}\n     */\n    function (component, template) {\n        _getTestBedRender3().overrideComponent(component, { set: { template: template, templateUrl: /** @type {?} */ ((null)) } });\n        return /** @type {?} */ ((TestBedRender3));\n    };\n    /**\n     * Overrides the template of the given component, compiling the template\n     * in the context of the TestingModule.\n     *\n     * Note: This works for JIT and AOTed components as well.\n     */\n    /**\n     * Overrides the template of the given component, compiling the template\n     * in the context of the TestingModule.\n     *\n     * Note: This works for JIT and AOTed components as well.\n     * @param {?} component\n     * @param {?} template\n     * @return {?}\n     */\n    TestBedRender3.overrideTemplateUsingTestingModule = /**\n     * Overrides the template of the given component, compiling the template\n     * in the context of the TestingModule.\n     *\n     * Note: This works for JIT and AOTed components as well.\n     * @param {?} component\n     * @param {?} template\n     * @return {?}\n     */\n    function (component, template) {\n        _getTestBedRender3().overrideTemplateUsingTestingModule(component, template);\n        return /** @type {?} */ ((TestBedRender3));\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @return {?}\n     */\n    TestBedRender3.prototype.overrideTemplateUsingTestingModule = /**\n     * @param {?} component\n     * @param {?} template\n     * @return {?}\n     */\n    function (component, template) {\n        throw new Error('Render3TestBed.overrideTemplateUsingTestingModule is not implemented yet');\n    };\n    /**\n     * @param {?} token\n     * @param {?} provider\n     * @return {?}\n     */\n    TestBedRender3.overrideProvider = /**\n     * @param {?} token\n     * @param {?} provider\n     * @return {?}\n     */\n    function (token, provider) {\n        _getTestBedRender3().overrideProvider(token, provider);\n        return /** @type {?} */ ((TestBedRender3));\n    };\n    /**\n     * @param {?} token\n     * @param {?} provider\n     * @return {?}\n     */\n    TestBedRender3.deprecatedOverrideProvider = /**\n     * @param {?} token\n     * @param {?} provider\n     * @return {?}\n     */\n    function (token, provider) {\n        throw new Error('Render3TestBed.deprecatedOverrideProvider is not implemented');\n    };\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    TestBedRender3.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        return _getTestBedRender3().get(token, notFoundValue);\n    };\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    TestBedRender3.createComponent = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        return _getTestBedRender3().createComponent(component);\n    };\n    /**\n     * @return {?}\n     */\n    TestBedRender3.resetTestingModule = /**\n     * @return {?}\n     */\n    function () {\n        _getTestBedRender3().resetTestingModule();\n        return /** @type {?} */ ((TestBedRender3));\n    };\n    /**\n     * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n     * angular module. These are common to every test in the suite.\n     *\n     * This may only be called once, to set up the common providers for the current test\n     * suite on the current platform. If you absolutely need to change the providers,\n     * first use `resetTestEnvironment`.\n     *\n     * Test modules and platforms for individual platforms are available from\n     * '@angular/<platform_name>/testing'.\n     *\n     * @publicApi\n     */\n    /**\n     * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n     * angular module. These are common to every test in the suite.\n     *\n     * This may only be called once, to set up the common providers for the current test\n     * suite on the current platform. If you absolutely need to change the providers,\n     * first use `resetTestEnvironment`.\n     *\n     * Test modules and platforms for individual platforms are available from\n     * '\\@angular/<platform_name>/testing'.\n     *\n     * \\@publicApi\n     * @param {?} ngModule\n     * @param {?} platform\n     * @param {?=} aotSummaries\n     * @return {?}\n     */\n    TestBedRender3.prototype.initTestEnvironment = /**\n     * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n     * angular module. These are common to every test in the suite.\n     *\n     * This may only be called once, to set up the common providers for the current test\n     * suite on the current platform. If you absolutely need to change the providers,\n     * first use `resetTestEnvironment`.\n     *\n     * Test modules and platforms for individual platforms are available from\n     * '\\@angular/<platform_name>/testing'.\n     *\n     * \\@publicApi\n     * @param {?} ngModule\n     * @param {?} platform\n     * @param {?=} aotSummaries\n     * @return {?}\n     */\n    function (ngModule, platform, aotSummaries) {\n        if (this.platform || this.ngModule) {\n            throw new Error('Cannot set base providers because it has already been called');\n        }\n        this.platform = platform;\n        this.ngModule = ngModule;\n    };\n    /**\n     * Reset the providers for the test injector.\n     *\n     * @publicApi\n     */\n    /**\n     * Reset the providers for the test injector.\n     *\n     * \\@publicApi\n     * @return {?}\n     */\n    TestBedRender3.prototype.resetTestEnvironment = /**\n     * Reset the providers for the test injector.\n     *\n     * \\@publicApi\n     * @return {?}\n     */\n    function () {\n        this.resetTestingModule();\n        this.platform = /** @type {?} */ ((null));\n        this.ngModule = /** @type {?} */ ((null));\n    };\n    /**\n     * @return {?}\n     */\n    TestBedRender3.prototype.resetTestingModule = /**\n     * @return {?}\n     */\n    function () {\n        // reset metadata overrides\n        this._moduleOverrides = [];\n        this._componentOverrides = [];\n        this._directiveOverrides = [];\n        this._pipeOverrides = [];\n        this._providerOverrides = [];\n        this._rootProviderOverrides = [];\n        // reset test module config\n        this._providers = [];\n        this._declarations = [];\n        this._imports = [];\n        this._schemas = [];\n        this._moduleRef = /** @type {?} */ ((null));\n        this._instantiated = false;\n        this._activeFixtures.forEach(function (fixture) {\n            try {\n                fixture.destroy();\n            }\n            catch (e) {\n                console.error('Error during cleanup of component', {\n                    component: fixture.componentInstance,\n                    stacktrace: e,\n                });\n            }\n        });\n        this._activeFixtures = [];\n    };\n    /**\n     * @param {?} config\n     * @return {?}\n     */\n    TestBedRender3.prototype.configureCompiler = /**\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        var _a;\n        if (config.useJit != null) {\n            throw new Error('the Render3 compiler JiT mode is not configurable !');\n        }\n        if (config.providers) {\n            (_a = this._providerOverrides).push.apply(_a, config.providers);\n        }\n    };\n    /**\n     * @param {?} moduleDef\n     * @return {?}\n     */\n    TestBedRender3.prototype.configureTestingModule = /**\n     * @param {?} moduleDef\n     * @return {?}\n     */\n    function (moduleDef) {\n        var _a, _b, _c, _d;\n        this._assertNotInstantiated('R3TestBed.configureTestingModule', 'configure the test module');\n        if (moduleDef.providers) {\n            (_a = this._providers).push.apply(_a, moduleDef.providers);\n        }\n        if (moduleDef.declarations) {\n            (_b = this._declarations).push.apply(_b, moduleDef.declarations);\n        }\n        if (moduleDef.imports) {\n            (_c = this._imports).push.apply(_c, moduleDef.imports);\n        }\n        if (moduleDef.schemas) {\n            (_d = this._schemas).push.apply(_d, moduleDef.schemas);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TestBedRender3.prototype.compileComponents = /**\n     * @return {?}\n     */\n    function () {\n        // assume for now that components don't use templateUrl / stylesUrl to unblock further testing\n        // TODO(pk): plug into the ivy's resource fetching pipeline\n        return Promise.resolve();\n    };\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    TestBedRender3.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        this._initIfNeeded();\n        if (token === TestBedRender3) {\n            return this;\n        }\n        return this._moduleRef.injector.get(token, notFoundValue);\n    };\n    /**\n     * @param {?} tokens\n     * @param {?} fn\n     * @param {?=} context\n     * @return {?}\n     */\n    TestBedRender3.prototype.execute = /**\n     * @param {?} tokens\n     * @param {?} fn\n     * @param {?=} context\n     * @return {?}\n     */\n    function (tokens, fn, context) {\n        var _this = this;\n        this._initIfNeeded();\n        /** @type {?} */\n        var params = tokens.map(function (t) { return _this.get(t); });\n        return fn.apply(context, params);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} override\n     * @return {?}\n     */\n    TestBedRender3.prototype.overrideModule = /**\n     * @param {?} ngModule\n     * @param {?} override\n     * @return {?}\n     */\n    function (ngModule, override) {\n        this._assertNotInstantiated('overrideModule', 'override module metadata');\n        this._moduleOverrides.push([ngModule, override]);\n    };\n    /**\n     * @param {?} component\n     * @param {?} override\n     * @return {?}\n     */\n    TestBedRender3.prototype.overrideComponent = /**\n     * @param {?} component\n     * @param {?} override\n     * @return {?}\n     */\n    function (component, override) {\n        this._assertNotInstantiated('overrideComponent', 'override component metadata');\n        this._componentOverrides.push([component, override]);\n    };\n    /**\n     * @param {?} directive\n     * @param {?} override\n     * @return {?}\n     */\n    TestBedRender3.prototype.overrideDirective = /**\n     * @param {?} directive\n     * @param {?} override\n     * @return {?}\n     */\n    function (directive, override) {\n        this._assertNotInstantiated('overrideDirective', 'override directive metadata');\n        this._directiveOverrides.push([directive, override]);\n    };\n    /**\n     * @param {?} pipe\n     * @param {?} override\n     * @return {?}\n     */\n    TestBedRender3.prototype.overridePipe = /**\n     * @param {?} pipe\n     * @param {?} override\n     * @return {?}\n     */\n    function (pipe, override) {\n        this._assertNotInstantiated('overridePipe', 'override pipe metadata');\n        this._pipeOverrides.push([pipe, override]);\n    };\n    /**\n     * Overwrites all providers for the given token with the given provider definition.\n     */\n    /**\n     * Overwrites all providers for the given token with the given provider definition.\n     * @param {?} token\n     * @param {?} provider\n     * @return {?}\n     */\n    TestBedRender3.prototype.overrideProvider = /**\n     * Overwrites all providers for the given token with the given provider definition.\n     * @param {?} token\n     * @param {?} provider\n     * @return {?}\n     */\n    function (token, provider) {\n        /** @type {?} */\n        var injectableDef;\n        /** @type {?} */\n        var isRoot = (typeof token !== 'string' && (injectableDef = getInjectableDef(token)) &&\n            injectableDef.providedIn === 'root');\n        /** @type {?} */\n        var overrides = isRoot ? this._rootProviderOverrides : this._providerOverrides;\n        if (provider.useFactory) {\n            overrides.push({ provide: token, useFactory: provider.useFactory, deps: provider.deps || [] });\n        }\n        else {\n            overrides.push({ provide: token, useValue: provider.useValue });\n        }\n    };\n    /**\n     * @param {?} token\n     * @param {?} provider\n     * @return {?}\n     */\n    TestBedRender3.prototype.deprecatedOverrideProvider = /**\n     * @param {?} token\n     * @param {?} provider\n     * @return {?}\n     */\n    function (token, provider) {\n        throw new Error('No implemented in IVY');\n    };\n    /**\n     * @template T\n     * @param {?} type\n     * @return {?}\n     */\n    TestBedRender3.prototype.createComponent = /**\n     * @template T\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        this._initIfNeeded();\n        /** @type {?} */\n        var testComponentRenderer = this.get(TestComponentRenderer);\n        /** @type {?} */\n        var rootElId = \"root\" + _nextRootElementId++;\n        testComponentRenderer.insertRootElement(rootElId);\n        /** @nocollapse @type {?} */\n        var componentDef = (/** @type {?} */ (type)).ngComponentDef;\n        if (!componentDef) {\n            throw new Error(\"It looks like '\" + stringify(type) + \"' has not been IVY compiled - it has no 'ngComponentDef' field\");\n        }\n        /** @type {?} */\n        var noNgZone = this.get(ComponentFixtureNoNgZone, false);\n        /** @type {?} */\n        var autoDetect = this.get(ComponentFixtureAutoDetect, false);\n        /** @type {?} */\n        var ngZone = noNgZone ? null : this.get(NgZone, null);\n        /** @type {?} */\n        var componentFactory = new ComponentFactory(componentDef);\n        /** @type {?} */\n        var initComponent = function () {\n            /** @type {?} */\n            var componentRef = componentFactory.create(Injector.NULL, [], \"#\" + rootElId, _this._moduleRef);\n            return new ComponentFixture(componentRef, ngZone, autoDetect);\n        };\n        /** @type {?} */\n        var fixture = ngZone ? ngZone.run(initComponent) : initComponent();\n        this._activeFixtures.push(fixture);\n        return fixture;\n    };\n    /**\n     * @return {?}\n     */\n    TestBedRender3.prototype._initIfNeeded = /**\n     * @return {?}\n     */\n    function () {\n        if (this._instantiated) {\n            return;\n        }\n        /** @type {?} */\n        var resolvers = this._getResolvers();\n        /** @type {?} */\n        var testModuleType = this._createTestModule();\n        compileNgModule(testModuleType, resolvers);\n        /** @type {?} */\n        var parentInjector = this.platform.injector;\n        this._moduleRef = new NgModuleRef(testModuleType, parentInjector);\n        this._instantiated = true;\n    };\n    /**\n     * @return {?}\n     */\n    TestBedRender3.prototype._getResolvers = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var module = new NgModuleResolver();\n        module.setOverrides(this._moduleOverrides);\n        /** @type {?} */\n        var component = new ComponentResolver();\n        component.setOverrides(this._componentOverrides);\n        /** @type {?} */\n        var directive = new DirectiveResolver();\n        directive.setOverrides(this._directiveOverrides);\n        /** @type {?} */\n        var pipe = new PipeResolver();\n        pipe.setOverrides(this._pipeOverrides);\n        return { module: module, component: component, directive: directive, pipe: pipe };\n    };\n    /**\n     * @param {?} methodName\n     * @param {?} methodDescription\n     * @return {?}\n     */\n    TestBedRender3.prototype._assertNotInstantiated = /**\n     * @param {?} methodName\n     * @param {?} methodDescription\n     * @return {?}\n     */\n    function (methodName, methodDescription) {\n        if (this._instantiated) {\n            throw new Error(\"Cannot \" + methodDescription + \" when the test module has already been instantiated. \" +\n                (\"Make sure you are not using `inject` before `\" + methodName + \"`.\"));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TestBedRender3.prototype._createTestModule = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var rootProviderOverrides = this._rootProviderOverrides;\n        var RootScopeModule = /** @class */ (function () {\n            function RootScopeModule() {\n            }\n            RootScopeModule.decorators = [\n                { type: NgModule, args: [{\n                            providers: rootProviderOverrides.slice(),\n                            jit: true,\n                        },] },\n            ];\n            return RootScopeModule;\n        }());\n        /** @type {?} */\n        var ngZone = new NgZone({ enableLongStackTrace: true });\n        /** @type {?} */\n        var providers = [{ provide: NgZone, useValue: ngZone }].concat(this._providers, this._providerOverrides);\n        /** @type {?} */\n        var declarations = this._declarations;\n        /** @type {?} */\n        var imports = [RootScopeModule, this.ngModule, this._imports];\n        /** @type {?} */\n        var schemas = this._schemas;\n        var DynamicTestModule = /** @class */ (function () {\n            function DynamicTestModule() {\n            }\n            DynamicTestModule.decorators = [\n                { type: NgModule, args: [{ providers: providers, declarations: declarations, imports: imports, schemas: schemas, jit: true },] },\n            ];\n            return DynamicTestModule;\n        }());\n        return DynamicTestModule;\n    };\n    return TestBedRender3;\n}());\n/**\n * \\@description\n * Configures and initializes environment for unit testing and provides methods for\n * creating components and services in unit tests.\n *\n * TestBed is the primary api for writing unit tests for Angular applications and libraries.\n *\n * Note: Use `TestBed` in tests. It will be set to either `TestBedViewEngine` or `TestBedRender3`\n * according to the compiler used.\n */\nexport { TestBedRender3 };\nif (false) {\n    /** @type {?} */\n    TestBedRender3.prototype.platform;\n    /** @type {?} */\n    TestBedRender3.prototype.ngModule;\n    /** @type {?} */\n    TestBedRender3.prototype._moduleOverrides;\n    /** @type {?} */\n    TestBedRender3.prototype._componentOverrides;\n    /** @type {?} */\n    TestBedRender3.prototype._directiveOverrides;\n    /** @type {?} */\n    TestBedRender3.prototype._pipeOverrides;\n    /** @type {?} */\n    TestBedRender3.prototype._providerOverrides;\n    /** @type {?} */\n    TestBedRender3.prototype._rootProviderOverrides;\n    /** @type {?} */\n    TestBedRender3.prototype._providers;\n    /** @type {?} */\n    TestBedRender3.prototype._declarations;\n    /** @type {?} */\n    TestBedRender3.prototype._imports;\n    /** @type {?} */\n    TestBedRender3.prototype._schemas;\n    /** @type {?} */\n    TestBedRender3.prototype._activeFixtures;\n    /** @type {?} */\n    TestBedRender3.prototype._moduleRef;\n    /** @type {?} */\n    TestBedRender3.prototype._instantiated;\n}\n/** @type {?} */\nvar testBed;\n/**\n * @return {?}\n */\nexport function _getTestBedRender3() {\n    return testBed = testBed || new TestBedRender3();\n}\n/** @type {?} */\nvar EMPTY_ARRAY = [];\n/** @typedef {?} */\nvar Resolvers;\n/**\n * @param {?} moduleType\n * @param {?} resolvers\n * @return {?}\n */\nfunction compileNgModule(moduleType, resolvers) {\n    /** @type {?} */\n    var ngModule = resolvers.module.resolve(moduleType);\n    if (ngModule === null) {\n        throw new Error(stringify(moduleType) + \" has not @NgModule annotation\");\n    }\n    compileNgModuleDefs(moduleType, ngModule);\n    /** @type {?} */\n    var declarations = flatten(ngModule.declarations || EMPTY_ARRAY);\n    /** @type {?} */\n    var compiledComponents = [];\n    // Compile the components, directives and pipes declared by this module\n    declarations.forEach(function (declaration) {\n        /** @type {?} */\n        var component = resolvers.component.resolve(declaration);\n        if (component) {\n            compileComponent(declaration, component);\n            compiledComponents.push(declaration);\n            return;\n        }\n        /** @type {?} */\n        var directive = resolvers.directive.resolve(declaration);\n        if (directive) {\n            compileDirective(declaration, directive);\n            return;\n        }\n        /** @type {?} */\n        var pipe = resolvers.pipe.resolve(declaration);\n        if (pipe) {\n            compilePipe(declaration, pipe);\n            return;\n        }\n    });\n    /** @type {?} */\n    var transitiveScope = transitiveScopesFor(moduleType, resolvers);\n    compiledComponents.forEach(function (cmp) { return patchComponentDefWithScope(cmp, transitiveScope); });\n}\n/**\n * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n *\n * This operation is memoized and the result is cached on the module's definition. It can be called\n * on modules with components that have not fully compiled yet, but the result should not be used\n * until they have.\n * @template T\n * @param {?} moduleType\n * @param {?} resolvers\n * @return {?}\n */\nfunction transitiveScopesFor(moduleType, resolvers) {\n    if (!isNgModule(moduleType)) {\n        throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n    }\n    /** @nocollapse @type {?} */\n    var def = moduleType.ngModuleDef;\n    if (def.transitiveCompileScopes !== null) {\n        return def.transitiveCompileScopes;\n    }\n    /** @type {?} */\n    var scopes = {\n        compilation: {\n            directives: new Set(),\n            pipes: new Set(),\n        },\n        exported: {\n            directives: new Set(),\n            pipes: new Set(),\n        },\n    };\n    def.declarations.forEach(function (declared) {\n        /** @type {?} */\n        var declaredWithDefs = /** @type {?} */ (declared);\n        if (declaredWithDefs.ngPipeDef !== undefined) {\n            scopes.compilation.pipes.add(declared);\n        }\n        else {\n            scopes.compilation.directives.add(declared);\n        }\n    });\n    def.imports.forEach(function (imported) {\n        /** @type {?} */\n        var ngModule = resolvers.module.resolve(imported);\n        if (ngModule === null) {\n            throw new Error(\"Importing \" + imported.name + \" which does not have an @ngModule\");\n        }\n        else {\n            compileNgModule(imported, resolvers);\n        }\n        /** @type {?} */\n        var importedScope = transitiveScopesFor(imported, resolvers);\n        importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n        importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n    });\n    def.exports.forEach(function (exported) {\n        /** @type {?} */\n        var exportedTyped = /** @type {?} */ (exported);\n        // Either the type is a module, a pipe, or a component/directive (which may not have an\n        // ngComponentDef as it might be compiled asynchronously).\n        if (isNgModule(exportedTyped)) {\n            /** @type {?} */\n            var exportedScope = transitiveScopesFor(exportedTyped, resolvers);\n            exportedScope.exported.directives.forEach(function (entry) {\n                scopes.compilation.directives.add(entry);\n                scopes.exported.directives.add(entry);\n            });\n            exportedScope.exported.pipes.forEach(function (entry) {\n                scopes.compilation.pipes.add(entry);\n                scopes.exported.pipes.add(entry);\n            });\n        }\n        else if (exportedTyped.ngPipeDef !== undefined) {\n            scopes.exported.pipes.add(exportedTyped);\n        }\n        else {\n            scopes.exported.directives.add(exportedTyped);\n        }\n    });\n    def.transitiveCompileScopes = scopes;\n    return scopes;\n}\n/**\n * @template T\n * @param {?} values\n * @return {?}\n */\nfunction flatten(values) {\n    /** @type {?} */\n    var out = [];\n    values.forEach(function (value) {\n        if (Array.isArray(value)) {\n            out.push.apply(out, flatten(value));\n        }\n        else {\n            out.push(value);\n        }\n    });\n    return out;\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction isNgModule(value) {\n    return (/** @type {?} */ (value)).ngModuleDef !== undefined;\n}\n//# sourceMappingURL=r3_test_bed.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Compiler, Injectable } from '@angular/core';\n/**\n * @return {?}\n */\nfunction unimplemented() {\n    throw Error('unimplemented');\n}\n/**\n * Special interface to the compiler only used by testing\n *\n * \\@publicApi\n */\nvar TestingCompiler = /** @class */ (function (_super) {\n    tslib_1.__extends(TestingCompiler, _super);\n    function TestingCompiler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(TestingCompiler.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { throw unimplemented(); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} module\n     * @param {?} overrides\n     * @return {?}\n     */\n    TestingCompiler.prototype.overrideModule = /**\n     * @param {?} module\n     * @param {?} overrides\n     * @return {?}\n     */\n    function (module, overrides) {\n        throw unimplemented();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} overrides\n     * @return {?}\n     */\n    TestingCompiler.prototype.overrideDirective = /**\n     * @param {?} directive\n     * @param {?} overrides\n     * @return {?}\n     */\n    function (directive, overrides) {\n        throw unimplemented();\n    };\n    /**\n     * @param {?} component\n     * @param {?} overrides\n     * @return {?}\n     */\n    TestingCompiler.prototype.overrideComponent = /**\n     * @param {?} component\n     * @param {?} overrides\n     * @return {?}\n     */\n    function (component, overrides) {\n        throw unimplemented();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} overrides\n     * @return {?}\n     */\n    TestingCompiler.prototype.overridePipe = /**\n     * @param {?} directive\n     * @param {?} overrides\n     * @return {?}\n     */\n    function (directive, overrides) {\n        throw unimplemented();\n    };\n    /**\n     * Allows to pass the compile summary from AOT compilation to the JIT compiler,\n     * so that it can use the code generated by AOT.\n     */\n    /**\n     * Allows to pass the compile summary from AOT compilation to the JIT compiler,\n     * so that it can use the code generated by AOT.\n     * @param {?} summaries\n     * @return {?}\n     */\n    TestingCompiler.prototype.loadAotSummaries = /**\n     * Allows to pass the compile summary from AOT compilation to the JIT compiler,\n     * so that it can use the code generated by AOT.\n     * @param {?} summaries\n     * @return {?}\n     */\n    function (summaries) { throw unimplemented(); };\n    /**\n     * Gets the component factory for the given component.\n     * This assumes that the component has been compiled before calling this call using\n     * `compileModuleAndAllComponents*`.\n     */\n    /**\n     * Gets the component factory for the given component.\n     * This assumes that the component has been compiled before calling this call using\n     * `compileModuleAndAllComponents*`.\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    TestingCompiler.prototype.getComponentFactory = /**\n     * Gets the component factory for the given component.\n     * This assumes that the component has been compiled before calling this call using\n     * `compileModuleAndAllComponents*`.\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) { throw unimplemented(); };\n    /**\n     * Returns the component type that is stored in the given error.\n     * This can be used for errors created by compileModule...\n     */\n    /**\n     * Returns the component type that is stored in the given error.\n     * This can be used for errors created by compileModule...\n     * @param {?} error\n     * @return {?}\n     */\n    TestingCompiler.prototype.getComponentFromError = /**\n     * Returns the component type that is stored in the given error.\n     * This can be used for errors created by compileModule...\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) { throw unimplemented(); };\n    TestingCompiler.decorators = [\n        { type: Injectable },\n    ];\n    return TestingCompiler;\n}(Compiler));\nexport { TestingCompiler };\n/**\n * A factory for creating a Compiler\n *\n * \\@publicApi\n * @abstract\n */\nvar /**\n * A factory for creating a Compiler\n *\n * \\@publicApi\n * @abstract\n */\nTestingCompilerFactory = /** @class */ (function () {\n    function TestingCompilerFactory() {\n    }\n    return TestingCompilerFactory;\n}());\n/**\n * A factory for creating a Compiler\n *\n * \\@publicApi\n * @abstract\n */\nexport { TestingCompilerFactory };\nif (false) {\n    /**\n     * @abstract\n     * @param {?=} options\n     * @return {?}\n     */\n    TestingCompilerFactory.prototype.createTestingCompiler = function (options) { };\n}\n//# sourceMappingURL=test_compiler.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ApplicationInitStatus, Component, Injector, NgModule, NgZone, Optional, SkipSelf, ɵAPP_ROOT as APP_ROOT, ɵclearOverrides as clearOverrides, ɵgetInjectableDef as getInjectableDef, ɵivyEnabled as ivyEnabled, ɵoverrideComponentView as overrideComponentView, ɵoverrideProvider as overrideProvider, ɵstringify as stringify } from '@angular/core';\nimport { AsyncTestCompleter } from './async_test_completer';\nimport { ComponentFixture } from './component_fixture';\nimport { TestBedRender3, _getTestBedRender3 } from './r3_test_bed';\nimport { ComponentFixtureAutoDetect, ComponentFixtureNoNgZone, TestComponentRenderer } from './test_bed_common';\nimport { TestingCompilerFactory } from './test_compiler';\n/** @type {?} */\nvar UNDEFINED = new Object();\n/** @type {?} */\nvar _nextRootElementId = 0;\n/**\n * \\@description\n * Configures and initializes environment for unit testing and provides methods for\n * creating components and services in unit tests.\n *\n * `TestBed` is the primary api for writing unit tests for Angular applications and libraries.\n *\n * Note: Use `TestBed` in tests. It will be set to either `TestBedViewEngine` or `TestBedRender3`\n * according to the compiler used.\n */\nvar /**\n * \\@description\n * Configures and initializes environment for unit testing and provides methods for\n * creating components and services in unit tests.\n *\n * `TestBed` is the primary api for writing unit tests for Angular applications and libraries.\n *\n * Note: Use `TestBed` in tests. It will be set to either `TestBedViewEngine` or `TestBedRender3`\n * according to the compiler used.\n */\nTestBedViewEngine = /** @class */ (function () {\n    function TestBedViewEngine() {\n        this._instantiated = false;\n        this._compiler = /** @type {?} */ ((null));\n        this._moduleRef = /** @type {?} */ ((null));\n        this._moduleFactory = /** @type {?} */ ((null));\n        this._compilerOptions = [];\n        this._moduleOverrides = [];\n        this._componentOverrides = [];\n        this._directiveOverrides = [];\n        this._pipeOverrides = [];\n        this._providers = [];\n        this._declarations = [];\n        this._imports = [];\n        this._schemas = [];\n        this._activeFixtures = [];\n        this._testEnvAotSummaries = function () { return []; };\n        this._aotSummaries = [];\n        this._templateOverrides = [];\n        this._isRoot = true;\n        this._rootProviderOverrides = [];\n        this.platform = /** @type {?} */ ((null));\n        this.ngModule = /** @type {?} */ ((null));\n    }\n    /**\n     * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n     * angular module. These are common to every test in the suite.\n     *\n     * This may only be called once, to set up the common providers for the current test\n     * suite on the current platform. If you absolutely need to change the providers,\n     * first use `resetTestEnvironment`.\n     *\n     * Test modules and platforms for individual platforms are available from\n     * '@angular/<platform_name>/testing'.\n     */\n    /**\n     * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n     * angular module. These are common to every test in the suite.\n     *\n     * This may only be called once, to set up the common providers for the current test\n     * suite on the current platform. If you absolutely need to change the providers,\n     * first use `resetTestEnvironment`.\n     *\n     * Test modules and platforms for individual platforms are available from\n     * '\\@angular/<platform_name>/testing'.\n     * @param {?} ngModule\n     * @param {?} platform\n     * @param {?=} aotSummaries\n     * @return {?}\n     */\n    TestBedViewEngine.initTestEnvironment = /**\n     * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n     * angular module. These are common to every test in the suite.\n     *\n     * This may only be called once, to set up the common providers for the current test\n     * suite on the current platform. If you absolutely need to change the providers,\n     * first use `resetTestEnvironment`.\n     *\n     * Test modules and platforms for individual platforms are available from\n     * '\\@angular/<platform_name>/testing'.\n     * @param {?} ngModule\n     * @param {?} platform\n     * @param {?=} aotSummaries\n     * @return {?}\n     */\n    function (ngModule, platform, aotSummaries) {\n        /** @type {?} */\n        var testBed = _getTestBedViewEngine();\n        testBed.initTestEnvironment(ngModule, platform, aotSummaries);\n        return testBed;\n    };\n    /**\n     * Reset the providers for the test injector.\n     */\n    /**\n     * Reset the providers for the test injector.\n     * @return {?}\n     */\n    TestBedViewEngine.resetTestEnvironment = /**\n     * Reset the providers for the test injector.\n     * @return {?}\n     */\n    function () { _getTestBedViewEngine().resetTestEnvironment(); };\n    /**\n     * @return {?}\n     */\n    TestBedViewEngine.resetTestingModule = /**\n     * @return {?}\n     */\n    function () {\n        _getTestBedViewEngine().resetTestingModule();\n        return /** @type {?} */ ((TestBedViewEngine));\n    };\n    /**\n     * Allows overriding default compiler providers and settings\n     * which are defined in test_injector.js\n     */\n    /**\n     * Allows overriding default compiler providers and settings\n     * which are defined in test_injector.js\n     * @param {?} config\n     * @return {?}\n     */\n    TestBedViewEngine.configureCompiler = /**\n     * Allows overriding default compiler providers and settings\n     * which are defined in test_injector.js\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        _getTestBedViewEngine().configureCompiler(config);\n        return /** @type {?} */ ((TestBedViewEngine));\n    };\n    /**\n     * Allows overriding default providers, directives, pipes, modules of the test injector,\n     * which are defined in test_injector.js\n     */\n    /**\n     * Allows overriding default providers, directives, pipes, modules of the test injector,\n     * which are defined in test_injector.js\n     * @param {?} moduleDef\n     * @return {?}\n     */\n    TestBedViewEngine.configureTestingModule = /**\n     * Allows overriding default providers, directives, pipes, modules of the test injector,\n     * which are defined in test_injector.js\n     * @param {?} moduleDef\n     * @return {?}\n     */\n    function (moduleDef) {\n        _getTestBedViewEngine().configureTestingModule(moduleDef);\n        return /** @type {?} */ ((TestBedViewEngine));\n    };\n    /**\n     * Compile components with a `templateUrl` for the test's NgModule.\n     * It is necessary to call this function\n     * as fetching urls is asynchronous.\n     */\n    /**\n     * Compile components with a `templateUrl` for the test's NgModule.\n     * It is necessary to call this function\n     * as fetching urls is asynchronous.\n     * @return {?}\n     */\n    TestBedViewEngine.compileComponents = /**\n     * Compile components with a `templateUrl` for the test's NgModule.\n     * It is necessary to call this function\n     * as fetching urls is asynchronous.\n     * @return {?}\n     */\n    function () { return getTestBed().compileComponents(); };\n    /**\n     * @param {?} ngModule\n     * @param {?} override\n     * @return {?}\n     */\n    TestBedViewEngine.overrideModule = /**\n     * @param {?} ngModule\n     * @param {?} override\n     * @return {?}\n     */\n    function (ngModule, override) {\n        _getTestBedViewEngine().overrideModule(ngModule, override);\n        return /** @type {?} */ ((TestBedViewEngine));\n    };\n    /**\n     * @param {?} component\n     * @param {?} override\n     * @return {?}\n     */\n    TestBedViewEngine.overrideComponent = /**\n     * @param {?} component\n     * @param {?} override\n     * @return {?}\n     */\n    function (component, override) {\n        _getTestBedViewEngine().overrideComponent(component, override);\n        return /** @type {?} */ ((TestBedViewEngine));\n    };\n    /**\n     * @param {?} directive\n     * @param {?} override\n     * @return {?}\n     */\n    TestBedViewEngine.overrideDirective = /**\n     * @param {?} directive\n     * @param {?} override\n     * @return {?}\n     */\n    function (directive, override) {\n        _getTestBedViewEngine().overrideDirective(directive, override);\n        return /** @type {?} */ ((TestBedViewEngine));\n    };\n    /**\n     * @param {?} pipe\n     * @param {?} override\n     * @return {?}\n     */\n    TestBedViewEngine.overridePipe = /**\n     * @param {?} pipe\n     * @param {?} override\n     * @return {?}\n     */\n    function (pipe, override) {\n        _getTestBedViewEngine().overridePipe(pipe, override);\n        return /** @type {?} */ ((TestBedViewEngine));\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @return {?}\n     */\n    TestBedViewEngine.overrideTemplate = /**\n     * @param {?} component\n     * @param {?} template\n     * @return {?}\n     */\n    function (component, template) {\n        _getTestBedViewEngine().overrideComponent(component, { set: { template: template, templateUrl: /** @type {?} */ ((null)) } });\n        return /** @type {?} */ ((TestBedViewEngine));\n    };\n    /**\n     * Overrides the template of the given component, compiling the template\n     * in the context of the TestingModule.\n     *\n     * Note: This works for JIT and AOTed components as well.\n     */\n    /**\n     * Overrides the template of the given component, compiling the template\n     * in the context of the TestingModule.\n     *\n     * Note: This works for JIT and AOTed components as well.\n     * @param {?} component\n     * @param {?} template\n     * @return {?}\n     */\n    TestBedViewEngine.overrideTemplateUsingTestingModule = /**\n     * Overrides the template of the given component, compiling the template\n     * in the context of the TestingModule.\n     *\n     * Note: This works for JIT and AOTed components as well.\n     * @param {?} component\n     * @param {?} template\n     * @return {?}\n     */\n    function (component, template) {\n        _getTestBedViewEngine().overrideTemplateUsingTestingModule(component, template);\n        return /** @type {?} */ ((TestBedViewEngine));\n    };\n    /**\n     * @param {?} token\n     * @param {?} provider\n     * @return {?}\n     */\n    TestBedViewEngine.overrideProvider = /**\n     * @param {?} token\n     * @param {?} provider\n     * @return {?}\n     */\n    function (token, provider) {\n        _getTestBedViewEngine().overrideProvider(token, /** @type {?} */ (provider));\n        return /** @type {?} */ ((TestBedViewEngine));\n    };\n    /**\n     * @param {?} token\n     * @param {?} provider\n     * @return {?}\n     */\n    TestBedViewEngine.deprecatedOverrideProvider = /**\n     * @param {?} token\n     * @param {?} provider\n     * @return {?}\n     */\n    function (token, provider) {\n        _getTestBedViewEngine().deprecatedOverrideProvider(token, /** @type {?} */ (provider));\n        return /** @type {?} */ ((TestBedViewEngine));\n    };\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    TestBedViewEngine.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        return _getTestBedViewEngine().get(token, notFoundValue);\n    };\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    TestBedViewEngine.createComponent = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        return _getTestBedViewEngine().createComponent(component);\n    };\n    /**\n     * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n     * angular module. These are common to every test in the suite.\n     *\n     * This may only be called once, to set up the common providers for the current test\n     * suite on the current platform. If you absolutely need to change the providers,\n     * first use `resetTestEnvironment`.\n     *\n     * Test modules and platforms for individual platforms are available from\n     * '@angular/<platform_name>/testing'.\n     */\n    /**\n     * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n     * angular module. These are common to every test in the suite.\n     *\n     * This may only be called once, to set up the common providers for the current test\n     * suite on the current platform. If you absolutely need to change the providers,\n     * first use `resetTestEnvironment`.\n     *\n     * Test modules and platforms for individual platforms are available from\n     * '\\@angular/<platform_name>/testing'.\n     * @param {?} ngModule\n     * @param {?} platform\n     * @param {?=} aotSummaries\n     * @return {?}\n     */\n    TestBedViewEngine.prototype.initTestEnvironment = /**\n     * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n     * angular module. These are common to every test in the suite.\n     *\n     * This may only be called once, to set up the common providers for the current test\n     * suite on the current platform. If you absolutely need to change the providers,\n     * first use `resetTestEnvironment`.\n     *\n     * Test modules and platforms for individual platforms are available from\n     * '\\@angular/<platform_name>/testing'.\n     * @param {?} ngModule\n     * @param {?} platform\n     * @param {?=} aotSummaries\n     * @return {?}\n     */\n    function (ngModule, platform, aotSummaries) {\n        if (this.platform || this.ngModule) {\n            throw new Error('Cannot set base providers because it has already been called');\n        }\n        this.platform = platform;\n        this.ngModule = ngModule;\n        if (aotSummaries) {\n            this._testEnvAotSummaries = aotSummaries;\n        }\n    };\n    /**\n     * Reset the providers for the test injector.\n     */\n    /**\n     * Reset the providers for the test injector.\n     * @return {?}\n     */\n    TestBedViewEngine.prototype.resetTestEnvironment = /**\n     * Reset the providers for the test injector.\n     * @return {?}\n     */\n    function () {\n        this.resetTestingModule();\n        this.platform = /** @type {?} */ ((null));\n        this.ngModule = /** @type {?} */ ((null));\n        this._testEnvAotSummaries = function () { return []; };\n    };\n    /**\n     * @return {?}\n     */\n    TestBedViewEngine.prototype.resetTestingModule = /**\n     * @return {?}\n     */\n    function () {\n        clearOverrides();\n        this._aotSummaries = [];\n        this._templateOverrides = [];\n        this._compiler = /** @type {?} */ ((null));\n        this._moduleOverrides = [];\n        this._componentOverrides = [];\n        this._directiveOverrides = [];\n        this._pipeOverrides = [];\n        this._isRoot = true;\n        this._rootProviderOverrides = [];\n        this._moduleRef = /** @type {?} */ ((null));\n        this._moduleFactory = /** @type {?} */ ((null));\n        this._compilerOptions = [];\n        this._providers = [];\n        this._declarations = [];\n        this._imports = [];\n        this._schemas = [];\n        this._instantiated = false;\n        this._activeFixtures.forEach(function (fixture) {\n            try {\n                fixture.destroy();\n            }\n            catch (e) {\n                console.error('Error during cleanup of component', {\n                    component: fixture.componentInstance,\n                    stacktrace: e,\n                });\n            }\n        });\n        this._activeFixtures = [];\n    };\n    /**\n     * @param {?} config\n     * @return {?}\n     */\n    TestBedViewEngine.prototype.configureCompiler = /**\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        this._assertNotInstantiated('TestBed.configureCompiler', 'configure the compiler');\n        this._compilerOptions.push(config);\n    };\n    /**\n     * @param {?} moduleDef\n     * @return {?}\n     */\n    TestBedViewEngine.prototype.configureTestingModule = /**\n     * @param {?} moduleDef\n     * @return {?}\n     */\n    function (moduleDef) {\n        var _a, _b, _c, _d;\n        this._assertNotInstantiated('TestBed.configureTestingModule', 'configure the test module');\n        if (moduleDef.providers) {\n            (_a = this._providers).push.apply(_a, moduleDef.providers);\n        }\n        if (moduleDef.declarations) {\n            (_b = this._declarations).push.apply(_b, moduleDef.declarations);\n        }\n        if (moduleDef.imports) {\n            (_c = this._imports).push.apply(_c, moduleDef.imports);\n        }\n        if (moduleDef.schemas) {\n            (_d = this._schemas).push.apply(_d, moduleDef.schemas);\n        }\n        if (moduleDef.aotSummaries) {\n            this._aotSummaries.push(moduleDef.aotSummaries);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TestBedViewEngine.prototype.compileComponents = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._moduleFactory || this._instantiated) {\n            return Promise.resolve(null);\n        }\n        /** @type {?} */\n        var moduleType = this._createCompilerAndModule();\n        return this._compiler.compileModuleAndAllComponentsAsync(moduleType)\n            .then(function (moduleAndComponentFactories) {\n            _this._moduleFactory = moduleAndComponentFactories.ngModuleFactory;\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TestBedViewEngine.prototype._initIfNeeded = /**\n     * @return {?}\n     */\n    function () {\n        if (this._instantiated) {\n            return;\n        }\n        if (!this._moduleFactory) {\n            try {\n                /** @type {?} */\n                var moduleType = this._createCompilerAndModule();\n                this._moduleFactory =\n                    this._compiler.compileModuleAndAllComponentsSync(moduleType).ngModuleFactory;\n            }\n            catch (e) {\n                /** @type {?} */\n                var errorCompType = this._compiler.getComponentFromError(e);\n                if (errorCompType) {\n                    throw new Error(\"This test module uses the component \" + stringify(errorCompType) + \" which is using a \\\"templateUrl\\\" or \\\"styleUrls\\\", but they were never compiled. \" +\n                        \"Please call \\\"TestBed.compileComponents\\\" before your test.\");\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        for (var _i = 0, _a = this._templateOverrides; _i < _a.length; _i++) {\n            var _b = _a[_i], component = _b.component, templateOf = _b.templateOf;\n            /** @type {?} */\n            var compFactory = this._compiler.getComponentFactory(templateOf);\n            overrideComponentView(component, compFactory);\n        }\n        /** @type {?} */\n        var ngZone = new NgZone({ enableLongStackTrace: true });\n        /** @type {?} */\n        var providers = [{ provide: NgZone, useValue: ngZone }];\n        /** @type {?} */\n        var ngZoneInjector = Injector.create({\n            providers: providers,\n            parent: this.platform.injector,\n            name: this._moduleFactory.moduleType.name\n        });\n        this._moduleRef = this._moduleFactory.create(ngZoneInjector);\n        // ApplicationInitStatus.runInitializers() is marked @internal to core. So casting to any\n        // before accessing it.\n        (/** @type {?} */ (this._moduleRef.injector.get(ApplicationInitStatus))).runInitializers();\n        this._instantiated = true;\n    };\n    /**\n     * @return {?}\n     */\n    TestBedViewEngine.prototype._createCompilerAndModule = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var providers = this._providers.concat([{ provide: TestBed, useValue: this }]);\n        /** @type {?} */\n        var declarations = this._declarations.concat(this._templateOverrides.map(function (entry) { return entry.templateOf; }));\n        /** @type {?} */\n        var rootScopeImports = [];\n        /** @type {?} */\n        var rootProviderOverrides = this._rootProviderOverrides;\n        if (this._isRoot) {\n            var RootScopeModule = /** @class */ (function () {\n                function RootScopeModule() {\n                }\n                RootScopeModule.decorators = [\n                    { type: NgModule, args: [{\n                                providers: rootProviderOverrides.slice(),\n                                jit: true,\n                            },] },\n                ];\n                return RootScopeModule;\n            }());\n            rootScopeImports.push(RootScopeModule);\n        }\n        providers.push({ provide: APP_ROOT, useValue: this._isRoot });\n        /** @type {?} */\n        var imports = [rootScopeImports, this.ngModule, this._imports];\n        /** @type {?} */\n        var schemas = this._schemas;\n        var DynamicTestModule = /** @class */ (function () {\n            function DynamicTestModule() {\n            }\n            DynamicTestModule.decorators = [\n                { type: NgModule, args: [{ providers: providers, declarations: declarations, imports: imports, schemas: schemas, jit: true },] },\n            ];\n            return DynamicTestModule;\n        }());\n        /** @type {?} */\n        var compilerFactory = this.platform.injector.get(TestingCompilerFactory);\n        this._compiler = compilerFactory.createTestingCompiler(this._compilerOptions);\n        for (var _i = 0, _a = [this._testEnvAotSummaries].concat(this._aotSummaries); _i < _a.length; _i++) {\n            var summary = _a[_i];\n            this._compiler.loadAotSummaries(summary);\n        }\n        this._moduleOverrides.forEach(function (entry) { return _this._compiler.overrideModule(entry[0], entry[1]); });\n        this._componentOverrides.forEach(function (entry) { return _this._compiler.overrideComponent(entry[0], entry[1]); });\n        this._directiveOverrides.forEach(function (entry) { return _this._compiler.overrideDirective(entry[0], entry[1]); });\n        this._pipeOverrides.forEach(function (entry) { return _this._compiler.overridePipe(entry[0], entry[1]); });\n        return DynamicTestModule;\n    };\n    /**\n     * @param {?} methodName\n     * @param {?} methodDescription\n     * @return {?}\n     */\n    TestBedViewEngine.prototype._assertNotInstantiated = /**\n     * @param {?} methodName\n     * @param {?} methodDescription\n     * @return {?}\n     */\n    function (methodName, methodDescription) {\n        if (this._instantiated) {\n            throw new Error(\"Cannot \" + methodDescription + \" when the test module has already been instantiated. \" +\n                (\"Make sure you are not using `inject` before `\" + methodName + \"`.\"));\n        }\n    };\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    TestBedViewEngine.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        this._initIfNeeded();\n        if (token === TestBed) {\n            return this;\n        }\n        /** @type {?} */\n        var result = this._moduleRef.injector.get(token, UNDEFINED);\n        return result === UNDEFINED ? this._compiler.injector.get(token, notFoundValue) : result;\n    };\n    /**\n     * @param {?} tokens\n     * @param {?} fn\n     * @param {?=} context\n     * @return {?}\n     */\n    TestBedViewEngine.prototype.execute = /**\n     * @param {?} tokens\n     * @param {?} fn\n     * @param {?=} context\n     * @return {?}\n     */\n    function (tokens, fn, context) {\n        var _this = this;\n        this._initIfNeeded();\n        /** @type {?} */\n        var params = tokens.map(function (t) { return _this.get(t); });\n        return fn.apply(context, params);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} override\n     * @return {?}\n     */\n    TestBedViewEngine.prototype.overrideModule = /**\n     * @param {?} ngModule\n     * @param {?} override\n     * @return {?}\n     */\n    function (ngModule, override) {\n        this._assertNotInstantiated('overrideModule', 'override module metadata');\n        this._moduleOverrides.push([ngModule, override]);\n    };\n    /**\n     * @param {?} component\n     * @param {?} override\n     * @return {?}\n     */\n    TestBedViewEngine.prototype.overrideComponent = /**\n     * @param {?} component\n     * @param {?} override\n     * @return {?}\n     */\n    function (component, override) {\n        this._assertNotInstantiated('overrideComponent', 'override component metadata');\n        this._componentOverrides.push([component, override]);\n    };\n    /**\n     * @param {?} directive\n     * @param {?} override\n     * @return {?}\n     */\n    TestBedViewEngine.prototype.overrideDirective = /**\n     * @param {?} directive\n     * @param {?} override\n     * @return {?}\n     */\n    function (directive, override) {\n        this._assertNotInstantiated('overrideDirective', 'override directive metadata');\n        this._directiveOverrides.push([directive, override]);\n    };\n    /**\n     * @param {?} pipe\n     * @param {?} override\n     * @return {?}\n     */\n    TestBedViewEngine.prototype.overridePipe = /**\n     * @param {?} pipe\n     * @param {?} override\n     * @return {?}\n     */\n    function (pipe, override) {\n        this._assertNotInstantiated('overridePipe', 'override pipe metadata');\n        this._pipeOverrides.push([pipe, override]);\n    };\n    /**\n     * @param {?} token\n     * @param {?} provider\n     * @return {?}\n     */\n    TestBedViewEngine.prototype.overrideProvider = /**\n     * @param {?} token\n     * @param {?} provider\n     * @return {?}\n     */\n    function (token, provider) {\n        this.overrideProviderImpl(token, provider);\n    };\n    /**\n     * @param {?} token\n     * @param {?} provider\n     * @return {?}\n     */\n    TestBedViewEngine.prototype.deprecatedOverrideProvider = /**\n     * @param {?} token\n     * @param {?} provider\n     * @return {?}\n     */\n    function (token, provider) {\n        this.overrideProviderImpl(token, provider, /* deprecated */ /* deprecated */ true);\n    };\n    /**\n     * @param {?} token\n     * @param {?} provider\n     * @param {?=} deprecated\n     * @return {?}\n     */\n    TestBedViewEngine.prototype.overrideProviderImpl = /**\n     * @param {?} token\n     * @param {?} provider\n     * @param {?=} deprecated\n     * @return {?}\n     */\n    function (token, provider, deprecated) {\n        if (deprecated === void 0) { deprecated = false; }\n        /** @type {?} */\n        var def = null;\n        if (typeof token !== 'string' && (def = getInjectableDef(token)) && def.providedIn === 'root') {\n            if (provider.useFactory) {\n                this._rootProviderOverrides.push({ provide: token, useFactory: provider.useFactory, deps: provider.deps || [] });\n            }\n            else {\n                this._rootProviderOverrides.push({ provide: token, useValue: provider.useValue });\n            }\n        }\n        /** @type {?} */\n        var flags = 0;\n        /** @type {?} */\n        var value;\n        if (provider.useFactory) {\n            flags |= 1024 /* TypeFactoryProvider */;\n            value = provider.useFactory;\n        }\n        else {\n            flags |= 256 /* TypeValueProvider */;\n            value = provider.useValue;\n        }\n        /** @type {?} */\n        var deps = (provider.deps || []).map(function (dep) {\n            /** @type {?} */\n            var depFlags = 0 /* None */;\n            /** @type {?} */\n            var depToken;\n            if (Array.isArray(dep)) {\n                dep.forEach(function (entry) {\n                    if (entry instanceof Optional) {\n                        depFlags |= 2 /* Optional */;\n                    }\n                    else if (entry instanceof SkipSelf) {\n                        depFlags |= 1 /* SkipSelf */;\n                    }\n                    else {\n                        depToken = entry;\n                    }\n                });\n            }\n            else {\n                depToken = dep;\n            }\n            return [depFlags, depToken];\n        });\n        overrideProvider({ token: token, flags: flags, deps: deps, value: value, deprecatedBehavior: deprecated });\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @return {?}\n     */\n    TestBedViewEngine.prototype.overrideTemplateUsingTestingModule = /**\n     * @param {?} component\n     * @param {?} template\n     * @return {?}\n     */\n    function (component, template) {\n        this._assertNotInstantiated('overrideTemplateUsingTestingModule', 'override template');\n        var OverrideComponent = /** @class */ (function () {\n            function OverrideComponent() {\n            }\n            OverrideComponent.decorators = [\n                { type: Component, args: [{ selector: 'empty', template: template, jit: true },] },\n            ];\n            return OverrideComponent;\n        }());\n        this._templateOverrides.push({ component: component, templateOf: OverrideComponent });\n    };\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    TestBedViewEngine.prototype.createComponent = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var _this = this;\n        this._initIfNeeded();\n        /** @type {?} */\n        var componentFactory = this._compiler.getComponentFactory(component);\n        if (!componentFactory) {\n            throw new Error(\"Cannot create the component \" + stringify(component) + \" as it was not imported into the testing module!\");\n        }\n        /** @type {?} */\n        var noNgZone = this.get(ComponentFixtureNoNgZone, false);\n        /** @type {?} */\n        var autoDetect = this.get(ComponentFixtureAutoDetect, false);\n        /** @type {?} */\n        var ngZone = noNgZone ? null : this.get(NgZone, null);\n        /** @type {?} */\n        var testComponentRenderer = this.get(TestComponentRenderer);\n        /** @type {?} */\n        var rootElId = \"root\" + _nextRootElementId++;\n        testComponentRenderer.insertRootElement(rootElId);\n        /** @type {?} */\n        var initComponent = function () {\n            /** @type {?} */\n            var componentRef = componentFactory.create(Injector.NULL, [], \"#\" + rootElId, _this._moduleRef);\n            return new ComponentFixture(componentRef, ngZone, autoDetect);\n        };\n        /** @type {?} */\n        var fixture = !ngZone ? initComponent() : ngZone.run(initComponent);\n        this._activeFixtures.push(fixture);\n        return fixture;\n    };\n    return TestBedViewEngine;\n}());\n/**\n * \\@description\n * Configures and initializes environment for unit testing and provides methods for\n * creating components and services in unit tests.\n *\n * `TestBed` is the primary api for writing unit tests for Angular applications and libraries.\n *\n * Note: Use `TestBed` in tests. It will be set to either `TestBedViewEngine` or `TestBedRender3`\n * according to the compiler used.\n */\nexport { TestBedViewEngine };\nif (false) {\n    /** @type {?} */\n    TestBedViewEngine.prototype._instantiated;\n    /** @type {?} */\n    TestBedViewEngine.prototype._compiler;\n    /** @type {?} */\n    TestBedViewEngine.prototype._moduleRef;\n    /** @type {?} */\n    TestBedViewEngine.prototype._moduleFactory;\n    /** @type {?} */\n    TestBedViewEngine.prototype._compilerOptions;\n    /** @type {?} */\n    TestBedViewEngine.prototype._moduleOverrides;\n    /** @type {?} */\n    TestBedViewEngine.prototype._componentOverrides;\n    /** @type {?} */\n    TestBedViewEngine.prototype._directiveOverrides;\n    /** @type {?} */\n    TestBedViewEngine.prototype._pipeOverrides;\n    /** @type {?} */\n    TestBedViewEngine.prototype._providers;\n    /** @type {?} */\n    TestBedViewEngine.prototype._declarations;\n    /** @type {?} */\n    TestBedViewEngine.prototype._imports;\n    /** @type {?} */\n    TestBedViewEngine.prototype._schemas;\n    /** @type {?} */\n    TestBedViewEngine.prototype._activeFixtures;\n    /** @type {?} */\n    TestBedViewEngine.prototype._testEnvAotSummaries;\n    /** @type {?} */\n    TestBedViewEngine.prototype._aotSummaries;\n    /** @type {?} */\n    TestBedViewEngine.prototype._templateOverrides;\n    /** @type {?} */\n    TestBedViewEngine.prototype._isRoot;\n    /** @type {?} */\n    TestBedViewEngine.prototype._rootProviderOverrides;\n    /** @type {?} */\n    TestBedViewEngine.prototype.platform;\n    /** @type {?} */\n    TestBedViewEngine.prototype.ngModule;\n}\n/** *\n * \\@description\n * Configures and initializes environment for unit testing and provides methods for\n * creating components and services in unit tests.\n *\n * `TestBed` is the primary api for writing unit tests for Angular applications and libraries.\n *\n * Note: Use `TestBed` in tests. It will be set to either `TestBedViewEngine` or `TestBedRender3`\n * according to the compiler used.\n *\n * \\@publicApi\n  @type {?} */\nexport var TestBed = ivyEnabled ? /** @type {?} */ ((TestBedRender3)) : /** @type {?} */ ((TestBedViewEngine));\n/** *\n * Returns a singleton of the applicable `TestBed`.\n *\n * It will be either an instance of `TestBedViewEngine` or `TestBedRender3`.\n *\n * \\@publicApi\n  @type {?} */\nexport var getTestBed = ivyEnabled ? _getTestBedRender3 : _getTestBedViewEngine;\n/** @type {?} */\nvar testBed;\n/**\n * @return {?}\n */\nfunction _getTestBedViewEngine() {\n    return testBed = testBed || new TestBedViewEngine();\n}\n/**\n * Allows injecting dependencies in `beforeEach()` and `it()`.\n *\n * Example:\n *\n * ```\n * beforeEach(inject([Dependency, AClass], (dep, object) => {\n *   // some code that uses `dep` and `object`\n *   // ...\n * }));\n *\n * it('...', inject([AClass], (object) => {\n *   object.doSomething();\n *   expect(...);\n * })\n * ```\n *\n * Notes:\n * - inject is currently a function because of some Traceur limitation the syntax should\n * eventually\n *   becomes `it('...', \\@Inject (object: AClass, async: AsyncTestCompleter) => { ... });`\n *\n * \\@publicApi\n * @param {?} tokens\n * @param {?} fn\n * @return {?}\n */\nexport function inject(tokens, fn) {\n    /** @type {?} */\n    var testBed = getTestBed();\n    if (tokens.indexOf(AsyncTestCompleter) >= 0) {\n        // Not using an arrow function to preserve context passed from call site\n        return function () {\n            var _this = this;\n            // Return an async test method that returns a Promise if AsyncTestCompleter is one of\n            // the injected tokens.\n            return testBed.compileComponents().then(function () {\n                /** @type {?} */\n                var completer = testBed.get(AsyncTestCompleter);\n                testBed.execute(tokens, fn, _this);\n                return completer.promise;\n            });\n        };\n    }\n    else {\n        // Not using an arrow function to preserve context passed from call site\n        return function () { return testBed.execute(tokens, fn, this); };\n    }\n}\n/**\n * \\@publicApi\n */\nvar /**\n * \\@publicApi\n */\nInjectSetupWrapper = /** @class */ (function () {\n    function InjectSetupWrapper(_moduleDef) {\n        this._moduleDef = _moduleDef;\n    }\n    /**\n     * @return {?}\n     */\n    InjectSetupWrapper.prototype._addModule = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var moduleDef = this._moduleDef();\n        if (moduleDef) {\n            getTestBed().configureTestingModule(moduleDef);\n        }\n    };\n    /**\n     * @param {?} tokens\n     * @param {?} fn\n     * @return {?}\n     */\n    InjectSetupWrapper.prototype.inject = /**\n     * @param {?} tokens\n     * @param {?} fn\n     * @return {?}\n     */\n    function (tokens, fn) {\n        /** @type {?} */\n        var self = this;\n        // Not using an arrow function to preserve context passed from call site\n        return function () {\n            self._addModule();\n            return inject(tokens, fn).call(this);\n        };\n    };\n    return InjectSetupWrapper;\n}());\n/**\n * \\@publicApi\n */\nexport { InjectSetupWrapper };\nif (false) {\n    /** @type {?} */\n    InjectSetupWrapper.prototype._moduleDef;\n}\n/**\n * @param {?} moduleDef\n * @param {?=} fn\n * @return {?}\n */\nexport function withModule(moduleDef, fn) {\n    if (fn) {\n        // Not using an arrow function to preserve context passed from call site\n        return function () {\n            /** @type {?} */\n            var testBed = getTestBed();\n            if (moduleDef) {\n                testBed.configureTestingModule(moduleDef);\n            }\n            return fn.apply(this);\n        };\n    }\n    return new InjectSetupWrapper(function () { return moduleDef; });\n}\n//# sourceMappingURL=test_bed.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { resetFakeAsyncZone } from './fake_async';\nimport { TestBed } from './test_bed';\n/** @type {?} */\nvar _global = /** @type {?} */ ((typeof window === 'undefined' ? global : window));\n// Reset the test providers and the fake async zone before each test.\nif (_global.beforeEach) {\n    _global.beforeEach(function () {\n        TestBed.resetTestingModule();\n        resetFakeAsyncZone();\n    });\n}\n/** @type {?} */\nexport var __core_private_testing_placeholder__ = '';\n//# sourceMappingURL=before_each.js.map"],"names":["getDebugNode","RendererFactory2","_Zone","stringify","ReflectionCapabilities","tslib_1.__extends","Directive","Component","Pipe","NgModule","InjectionToken","_nextRootElementId","Injector","getInjectableDef","NgZone","ComponentFactory","NgModuleRef","testBed","compileNgModuleDefs","compileComponent","compileDirective","compilePipe","patchComponentDefWithScope","Injectable","Compiler","clearOverrides","overrideComponentView","ApplicationInitStatus","APP_ROOT","Optional","SkipSelf","overrideProvider","ivyEnabled","_global"],"mappings":"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"}