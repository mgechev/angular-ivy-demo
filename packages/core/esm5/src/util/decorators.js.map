{"version":3,"file":"decorators.js","sourceRoot":"","sources":["../../../../../../packages/core/src/util/decorators.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\n\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * @ng.Component({...})\n * class MyClass {...}\n * ```\n *\n * @publicApi\n */\nexport interface TypeDecorator {\n  /**\n   * Invoke as ES7 decorator.\n   */\n  <T extends Type<any>>(type: T): T;\n\n  // Make TypeDecorator assignable to built-in ParameterDecorator type.\n  // ParameterDecorator is declared in lib.d.ts as a `declare type`\n  // so we cannot declare this interface as a subtype.\n  // see https://github.com/angular/angular/issues/3379#issuecomment-126169417\n  (target: Object, propertyKey?: string|symbol, parameterIndex?: number): void;\n}\n\nexport const ANNOTATIONS = '__annotations__';\nexport const PARAMETERS = '__parameters__';\nexport const PROP_METADATA = '__prop__metadata__';\n\n/**\n * @suppress {globalThis}\n */\nexport function makeDecorator<T>(\n    name: string, props?: (...args: any[]) => any, parentClass?: any,\n    additionalProcessing?: (type: Type<T>) => void,\n    typeFn?: (type: Type<T>, ...args: any[]) => void):\n    {new (...args: any[]): any; (...args: any[]): any; (...args: any[]): (cls: any) => any;} {\n  const metaCtor = makeMetadataCtor(props);\n\n  function DecoratorFactory(...args: any[]): (cls: Type<T>) => any {\n    if (this instanceof DecoratorFactory) {\n      metaCtor.call(this, ...args);\n      return this;\n    }\n\n    const annotationInstance = new (DecoratorFactory as any)(...args);\n    return function TypeDecorator(cls: Type<T>) {\n      if (typeFn) typeFn(cls, ...args);\n      // Use of Object.defineProperty is important since it creates non-enumerable property which\n      // prevents the property is copied during subclassing.\n      const annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n          (cls as any)[ANNOTATIONS] :\n          Object.defineProperty(cls, ANNOTATIONS, {value: []})[ANNOTATIONS];\n      annotations.push(annotationInstance);\n\n\n      if (additionalProcessing) additionalProcessing(cls);\n\n      return cls;\n    };\n  }\n\n  if (parentClass) {\n    DecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  DecoratorFactory.prototype.ngMetadataName = name;\n  (DecoratorFactory as any).annotationCls = DecoratorFactory;\n  return DecoratorFactory as any;\n}\n\nfunction makeMetadataCtor(props?: (...args: any[]) => any): any {\n  return function ctor(...args: any[]) {\n    if (props) {\n      const values = props(...args);\n      for (const propName in values) {\n        this[propName] = values[propName];\n      }\n    }\n  };\n}\n\nexport function makeParamDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any): any {\n  const metaCtor = makeMetadataCtor(props);\n  function ParamDecoratorFactory(...args: any[]): any {\n    if (this instanceof ParamDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n    const annotationInstance = new (<any>ParamDecoratorFactory)(...args);\n\n    (<any>ParamDecorator).annotation = annotationInstance;\n    return ParamDecorator;\n\n    function ParamDecorator(cls: any, unusedKey: any, index: number): any {\n      // Use of Object.defineProperty is important since it creates non-enumerable property which\n      // prevents the property is copied during subclassing.\n      const parameters = cls.hasOwnProperty(PARAMETERS) ?\n          (cls as any)[PARAMETERS] :\n          Object.defineProperty(cls, PARAMETERS, {value: []})[PARAMETERS];\n\n      // there might be gaps if some in between parameters do not have annotations.\n      // we pad with nulls.\n      while (parameters.length <= index) {\n        parameters.push(null);\n      }\n\n      (parameters[index] = parameters[index] || []).push(annotationInstance);\n      return cls;\n    }\n  }\n  if (parentClass) {\n    ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n  ParamDecoratorFactory.prototype.ngMetadataName = name;\n  (<any>ParamDecoratorFactory).annotationCls = ParamDecoratorFactory;\n  return ParamDecoratorFactory;\n}\n\nexport function makePropDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any,\n    additionalProcessing?: (target: any, name: string, ...args: any[]) => void): any {\n  const metaCtor = makeMetadataCtor(props);\n\n  function PropDecoratorFactory(...args: any[]): any {\n    if (this instanceof PropDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n\n    const decoratorInstance = new (<any>PropDecoratorFactory)(...args);\n\n    function PropDecorator(target: any, name: string) {\n      const constructor = target.constructor;\n      // Use of Object.defineProperty is important since it creates non-enumerable property which\n      // prevents the property is copied during subclassing.\n      const meta = constructor.hasOwnProperty(PROP_METADATA) ?\n          (constructor as any)[PROP_METADATA] :\n          Object.defineProperty(constructor, PROP_METADATA, {value: {}})[PROP_METADATA];\n      meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n      meta[name].unshift(decoratorInstance);\n\n      if (additionalProcessing) additionalProcessing(target, name, ...args);\n    }\n\n    return PropDecorator;\n  }\n\n  if (parentClass) {\n    PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  PropDecoratorFactory.prototype.ngMetadataName = name;\n  (<any>PropDecoratorFactory).annotationCls = PropDecoratorFactory;\n  return PropDecoratorFactory;\n}\n"]}