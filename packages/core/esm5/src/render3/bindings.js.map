{"version":3,"file":"bindings.js","sourceRoot":"","sources":["../../../../../../packages/core/src/render3/bindings.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,YAAY,EAAC,MAAM,2CAA2C,CAAC;AAEvE,OAAO,EAAC,iBAAiB,EAAE,cAAc,EAAE,cAAc,EAAC,MAAM,UAAU,CAAC;AAC3E,OAAO,EAAC,yBAAyB,EAAC,MAAM,UAAU,CAAC;AAEnD,OAAO,EAAC,qBAAqB,EAAE,eAAe,EAAC,MAAM,SAAS,CAAC;AAC/D,OAAO,EAAC,SAAS,EAAC,MAAM,UAAU,CAAC;AACnC,OAAO,EAAC,WAAW,EAAC,MAAM,QAAQ,CAAC;;;;;;;;AAMnC,MAAM,UAAU,aAAa,CAAC,KAAY,EAAE,YAAoB,EAAE,KAAU;IAC1E,OAAO,KAAK,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC;CACpC;;;;;;;AAID,MAAM,UAAU,UAAU,CAAC,KAAY,EAAE,YAAoB;IAC3D,SAAS,IAAI,iBAAiB,CAAC,KAAK,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;IAC3D,SAAS;QACL,cAAc,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,SAAS,EAAE,yCAAyC,CAAC,CAAC;IAC9F,OAAO,KAAK,CAAC,YAAY,CAAC,CAAC;CAC5B;;;;;;;;AAGD,MAAM,UAAU,cAAc,CAAC,KAAY,EAAE,YAAoB,EAAE,KAAU;IAC3E,SAAS,IAAI,cAAc,CAAC,KAAK,EAAE,SAAS,EAAE,2CAA2C,CAAC,CAAC;IAC3F,SAAS;QACL,cAAc,CAAC,YAAY,EAAE,KAAK,CAAC,MAAM,EAAE,gDAAgD,CAAC,CAAC;IAEjG,IAAI,KAAK,CAAC,YAAY,CAAC,KAAK,SAAS,EAAE;;QAErC,KAAK,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC;KAC7B;SAAM,IAAI,WAAW,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,KAAK,CAAC,EAAE;QAClD,IAAI,SAAS,IAAI,qBAAqB,EAAE,EAAE;YACxC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,KAAK,CAAC,EAAE;gBAC7C,yBAAyB,CAAC,eAAe,EAAE,EAAE,KAAK,CAAC,YAAY,CAAC,EAAE,KAAK,CAAC,CAAC;aAC1E;SACF;QACD,KAAK,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC;KAC7B;SAAM;QACL,OAAO,KAAK,CAAC;KACd;IACD,OAAO,IAAI,CAAC;CACb;;;;;;;;;AAGD,MAAM,UAAU,eAAe,CAAC,KAAY,EAAE,YAAoB,EAAE,IAAS,EAAE,IAAS;;IACtF,IAAM,SAAS,GAAG,cAAc,CAAC,KAAK,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;IAC5D,OAAO,cAAc,CAAC,KAAK,EAAE,YAAY,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,SAAS,CAAC;CACnE;;;;;;;;;;AAGD,MAAM,UAAU,eAAe,CAC3B,KAAY,EAAE,YAAoB,EAAE,IAAS,EAAE,IAAS,EAAE,IAAS;;IACrE,IAAM,SAAS,GAAG,eAAe,CAAC,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACnE,OAAO,cAAc,CAAC,KAAK,EAAE,YAAY,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,SAAS,CAAC;CACnE;;;;;;;;;;;AAGD,MAAM,UAAU,eAAe,CAC3B,KAAY,EAAE,YAAoB,EAAE,IAAS,EAAE,IAAS,EAAE,IAAS,EAAE,IAAS;;IAChF,IAAM,SAAS,GAAG,eAAe,CAAC,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACnE,OAAO,eAAe,CAAC,KAAK,EAAE,YAAY,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,SAAS,CAAC;CAC1E","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {devModeEqual} from '../change_detection/change_detection_util';\n\nimport {assertDataInRange, assertLessThan, assertNotEqual} from './assert';\nimport {throwErrorIfNoChangesMode} from './errors';\nimport {BINDING_INDEX, LView} from './interfaces/view';\nimport {getCheckNoChangesMode, getCreationMode} from './state';\nimport {NO_CHANGE} from './tokens';\nimport {isDifferent} from './util';\n\n\n\n// TODO(misko): consider inlining\n/** Updates binding and returns the value. */\nexport function updateBinding(lView: LView, bindingIndex: number, value: any): any {\n  return lView[bindingIndex] = value;\n}\n\n\n/** Gets the current binding value. */\nexport function getBinding(lView: LView, bindingIndex: number): any {\n  ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n  ngDevMode &&\n      assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n  return lView[bindingIndex];\n}\n\n/** Updates binding if changed, then returns whether it was updated. */\nexport function bindingUpdated(lView: LView, bindingIndex: number, value: any): boolean {\n  ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n  ngDevMode &&\n      assertLessThan(bindingIndex, lView.length, `Slot should have been initialized to NO_CHANGE`);\n\n  if (lView[bindingIndex] === NO_CHANGE) {\n    // initial pass\n    lView[bindingIndex] = value;\n  } else if (isDifferent(lView[bindingIndex], value)) {\n    if (ngDevMode && getCheckNoChangesMode()) {\n      if (!devModeEqual(lView[bindingIndex], value)) {\n        throwErrorIfNoChangesMode(getCreationMode(), lView[bindingIndex], value);\n      }\n    }\n    lView[bindingIndex] = value;\n  } else {\n    return false;\n  }\n  return true;\n}\n\n/** Updates 2 bindings if changed, then returns whether either was updated. */\nexport function bindingUpdated2(lView: LView, bindingIndex: number, exp1: any, exp2: any): boolean {\n  const different = bindingUpdated(lView, bindingIndex, exp1);\n  return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n}\n\n/** Updates 3 bindings if changed, then returns whether any was updated. */\nexport function bindingUpdated3(\n    lView: LView, bindingIndex: number, exp1: any, exp2: any, exp3: any): boolean {\n  const different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n  return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n}\n\n/** Updates 4 bindings if changed, then returns whether any was updated. */\nexport function bindingUpdated4(\n    lView: LView, bindingIndex: number, exp1: any, exp2: any, exp3: any, exp4: any): boolean {\n  const different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n  return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n}\n"]}