{"version":3,"file":"ng_module_ref.js","sourceRoot":"","sources":["../../../../../../packages/core/src/render3/ng_module_ref.ts"],"names":[],"mappings":";;;;;;;;;;;;AAUA,OAAO,EAAC,cAAc,EAAC,MAAM,mBAAmB,CAAC;AACjD,OAAO,EAAC,wBAAwB,IAAI,mCAAmC,EAAC,MAAM,sCAAsC,CAAC;AACrH,OAAO,EAAsB,eAAe,IAAI,0BAA0B,EAAE,WAAW,IAAI,sBAAsB,EAAC,MAAM,6BAA6B,CAAC;AAGtJ,OAAO,EAAC,SAAS,EAAC,MAAM,SAAS,CAAC;AAClC,OAAO,EAAC,aAAa,EAAC,MAAM,UAAU,CAAC;AACvC,OAAO,EAAC,wBAAwB,EAAC,MAAM,iBAAiB,CAAC;AACzD,OAAO,EAAC,cAAc,EAAC,MAAM,cAAc,CAAC;;;;;;;;AAI5C,WAAa,0BAA0B,GAAmB;IACxD,OAAO,EAAE,mCAAmC;IAC5C,UAAU,EAAE,cAAM,OAAA,IAAI,wBAAwB,EAAE,EAA9B,CAA8B;IAChD,IAAI,EAAE,EAAE;CACT,CAAC;;;;AAEF;;;AAAA;IAAoC,uCAAyB;IAQ3D,qBAAY,YAAqB,EAAE,cAA6B;QAAhE,YACE,iBAAO,SAgBR;;QAvBD,6BAAoC,EAAE,CAAC;QAIvC,mBAAkC,EAAE,CAAC;;QAInC,IAAM,WAAW,GAAG,cAAc,CAAC,YAAY,CAAC,CAAC;QACjD,SAAS,IAAI,aAAa,CACT,WAAW,EACX,eAAa,SAAS,CAAC,YAAY,CAAC,0CAAuC,CAAC,CAAC;QAE9F,KAAI,CAAC,oBAAoB,sBAAG,WAAW,GAAG,SAAS,CAAC;;QACpD,IAAM,mBAAmB,GAAqB;YAC5C,0BAA0B,EAAE;gBAC1B,OAAO,EAAE,sBAAsB;gBAC/B,QAAQ,EAAE,KAAI;aACf;SACF,CAAC;QACF,KAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,YAAY,EAAE,cAAc,EAAE,mBAAmB,CAAC,CAAC;QAClF,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAChD,KAAI,CAAC,wBAAwB,GAAG,IAAI,wBAAwB,EAAE,CAAC;;KAChE;;;;IAED,6BAAO;;;IAAP;QACE,SAAS,IAAI,aAAa,CAAC,IAAI,CAAC,UAAU,EAAE,4BAA4B,CAAC,CAAC;UAC1E,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAA,EAAE,IAAI,OAAA,EAAE,EAAE,EAAJ,CAAI;QACpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KACxB;;;;;IACD,+BAAS;;;;IAAT,UAAU,QAAoB;QAC5B,SAAS,IAAI,aAAa,CAAC,IAAI,CAAC,UAAU,EAAE,4BAA4B,CAAC,CAAC;UAC1E,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ;KAChC;sBA/DH;EA4BoC,sBAAsB,EAoCzD,CAAA;;;;AApCD,uBAoCC;;;;;;;;;;;;;;;;AAED;;;AAAA;IAAwC,2CAA6B;IACnE,yBAAmB,UAAmB;QAAtC,YAA0C,iBAAO,SAAG;QAAjC,gBAAU,GAAV,UAAU,CAAS;;KAAc;;;;;IAEpD,gCAAM;;;;IAAN,UAAO,cAA6B;QAClC,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;KACzD;0BAvEH;EAkEwC,0BAA0B,EAMjE,CAAA;;;;AAND,2BAMC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {StaticProvider} from '../di/provider';\nimport {createInjector} from '../di/r3_injector';\nimport {ComponentFactoryResolver as viewEngine_ComponentFactoryResolver} from '../linker/component_factory_resolver';\nimport {InternalNgModuleRef, NgModuleFactory as viewEngine_NgModuleFactory, NgModuleRef as viewEngine_NgModuleRef} from '../linker/ng_module_factory';\nimport {NgModuleDef} from '../metadata/ng_module';\nimport {Type} from '../type';\nimport {stringify} from '../util';\nimport {assertDefined} from './assert';\nimport {ComponentFactoryResolver} from './component_ref';\nimport {getNgModuleDef} from './definition';\n\nexport interface NgModuleType { ngModuleDef: NgModuleDef<any>; }\n\nexport const COMPONENT_FACTORY_RESOLVER: StaticProvider = {\n  provide: viewEngine_ComponentFactoryResolver,\n  useFactory: () => new ComponentFactoryResolver(),\n  deps: [],\n};\n\nexport class NgModuleRef<T> extends viewEngine_NgModuleRef<T> implements InternalNgModuleRef<T> {\n  // tslint:disable-next-line:require-internal-with-underscore\n  _bootstrapComponents: Type<any>[] = [];\n  injector: Injector;\n  componentFactoryResolver: viewEngine_ComponentFactoryResolver;\n  instance: T;\n  destroyCbs: (() => void)[]|null = [];\n\n  constructor(ngModuleType: Type<T>, parentInjector: Injector|null) {\n    super();\n    const ngModuleDef = getNgModuleDef(ngModuleType);\n    ngDevMode && assertDefined(\n                     ngModuleDef,\n                     `NgModule '${stringify(ngModuleType)}' is not a subtype of 'NgModuleType'.`);\n\n    this._bootstrapComponents = ngModuleDef !.bootstrap;\n    const additionalProviders: StaticProvider[] = [\n      COMPONENT_FACTORY_RESOLVER, {\n        provide: viewEngine_NgModuleRef,\n        useValue: this,\n      }\n    ];\n    this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n    this.instance = this.injector.get(ngModuleType);\n    this.componentFactoryResolver = new ComponentFactoryResolver();\n  }\n\n  destroy(): void {\n    ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n    this.destroyCbs !.forEach(fn => fn());\n    this.destroyCbs = null;\n  }\n  onDestroy(callback: () => void): void {\n    ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n    this.destroyCbs !.push(callback);\n  }\n}\n\nexport class NgModuleFactory<T> extends viewEngine_NgModuleFactory<T> {\n  constructor(public moduleType: Type<T>) { super(); }\n\n  create(parentInjector: Injector|null): viewEngine_NgModuleRef<T> {\n    return new NgModuleRef(this.moduleType, parentInjector);\n  }\n}\n"]}