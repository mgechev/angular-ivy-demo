{"version":3,"file":"query.js","sourceRoot":"","sources":["../../../../../../packages/core/src/render3/query.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// We are temporarily importing the existing viewEngine_from core so we can be sure we are\n// correctly implementing its interfaces for backwards compatibility.\nimport {Observable} from 'rxjs';\n\nimport {EventEmitter} from '../event_emitter';\nimport {ElementRef as ViewEngine_ElementRef} from '../linker/element_ref';\nimport {QueryList as viewEngine_QueryList} from '../linker/query_list';\nimport {TemplateRef as ViewEngine_TemplateRef} from '../linker/template_ref';\nimport {Type} from '../type';\nimport {getSymbolIterator} from '../util';\n\nimport {assertDefined, assertEqual, assertPreviousIsParent} from './assert';\nimport {getNodeInjectable, locateDirectiveOrProvider} from './di';\nimport {NG_ELEMENT_ID} from './fields';\nimport {store, storeCleanupWithContext} from './instructions';\nimport {unusedValueExportToPlacateAjd as unused1} from './interfaces/definition';\nimport {unusedValueExportToPlacateAjd as unused2} from './interfaces/injector';\nimport {TContainerNode, TElementContainerNode, TElementNode, TNode, TNodeType, unusedValueExportToPlacateAjd as unused3} from './interfaces/node';\nimport {LQueries, unusedValueExportToPlacateAjd as unused4} from './interfaces/query';\nimport {LView, TVIEW} from './interfaces/view';\nimport {getIsParent, getLView, getOrCreateCurrentQueries} from './state';\nimport {flatten, isContentQueryHost} from './util';\nimport {createElementRef, createTemplateRef} from './view_engine_compatibility';\n\nconst unusedValueToPlacateAjd = unused1 + unused2 + unused3 + unused4;\n\n/**\n * A predicate which determines if a given element/directive should be included in the query\n * results.\n */\nexport interface QueryPredicate<T> {\n  /**\n   * If looking for directives then it contains the directive type.\n   */\n  type: Type<T>|null;\n\n  /**\n   * If selector then contains local names to query for.\n   */\n  selector: string[]|null;\n\n  /**\n   * Indicates which token should be read from DI for this query.\n   */\n  read: Type<T>|null;\n}\n\n/**\n * An object representing a query, which is a combination of:\n * - query predicate to determines if a given element/directive should be included in the query\n * - values collected based on a predicate\n * - `QueryList` to which collected values should be reported\n */\nexport interface LQuery<T> {\n  /**\n   * Next query. Used when queries are stored as a linked list in `LQueries`.\n   */\n  next: LQuery<any>|null;\n\n  /**\n   * Destination to which the value should be added.\n   */\n  list: QueryList<T>;\n\n  /**\n   * A predicate which determines if a given element/directive should be included in the query\n   * results.\n   */\n  predicate: QueryPredicate<T>;\n\n  /**\n   * Values which have been located.\n   *\n   * This is what builds up the `QueryList._valuesTree`.\n   */\n  values: any[];\n\n  /**\n   * A pointer to an array that stores collected values from views. This is necessary so we know a\n   * container into which to insert nodes collected from views.\n   */\n  containerValues: any[]|null;\n}\n\nexport class LQueries_ implements LQueries {\n  constructor(\n      public parent: LQueries_|null, private shallow: LQuery<any>|null,\n      private deep: LQuery<any>|null) {}\n\n  track<T>(\n      queryList: viewEngine_QueryList<T>, predicate: Type<T>|string[], descend?: boolean,\n      read?: Type<T>): void {\n    if (descend) {\n      this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n    } else {\n      this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n    }\n  }\n\n  clone(): LQueries { return new LQueries_(this, null, this.deep); }\n\n  container(): LQueries|null {\n    const shallowResults = copyQueriesToContainer(this.shallow);\n    const deepResults = copyQueriesToContainer(this.deep);\n\n    return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n  }\n\n  createView(): LQueries|null {\n    const shallowResults = copyQueriesToView(this.shallow);\n    const deepResults = copyQueriesToView(this.deep);\n\n    return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n  }\n\n  insertView(index: number): void {\n    insertView(index, this.shallow);\n    insertView(index, this.deep);\n  }\n\n  addNode(tNode: TElementNode|TContainerNode|TElementContainerNode): LQueries|null {\n    add(this.deep, tNode);\n\n    if (isContentQueryHost(tNode)) {\n      add(this.shallow, tNode);\n\n      if (tNode.parent && isContentQueryHost(tNode.parent)) {\n        // if node has a content query and parent also has a content query\n        // both queries need to check this node for shallow matches\n        add(this.parent !.shallow, tNode);\n      }\n      return this.parent;\n    }\n\n    isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n    return this;\n  }\n\n  removeView(): void {\n    removeView(this.shallow);\n    removeView(this.deep);\n  }\n}\n\nfunction isRootNodeOfQuery(tNode: TNode) {\n  return tNode.parent === null || isContentQueryHost(tNode.parent);\n}\n\nfunction copyQueriesToContainer(query: LQuery<any>| null): LQuery<any>|null {\n  let result: LQuery<any>|null = null;\n\n  while (query) {\n    const containerValues: any[] = [];  // prepare room for views\n    query.values.push(containerValues);\n    const clonedQuery: LQuery<any> = {\n      next: result,\n      list: query.list,\n      predicate: query.predicate,\n      values: containerValues,\n      containerValues: null\n    };\n    result = clonedQuery;\n    query = query.next;\n  }\n\n  return result;\n}\n\nfunction copyQueriesToView(query: LQuery<any>| null): LQuery<any>|null {\n  let result: LQuery<any>|null = null;\n\n  while (query) {\n    const clonedQuery: LQuery<any> = {\n      next: result,\n      list: query.list,\n      predicate: query.predicate,\n      values: [],\n      containerValues: query.values\n    };\n    result = clonedQuery;\n    query = query.next;\n  }\n\n  return result;\n}\n\nfunction insertView(index: number, query: LQuery<any>| null) {\n  while (query) {\n    ngDevMode &&\n        assertDefined(\n            query.containerValues, 'View queries need to have a pointer to container values.');\n    query.containerValues !.splice(index, 0, query.values);\n    query = query.next;\n  }\n}\n\nfunction removeView(query: LQuery<any>| null) {\n  while (query) {\n    ngDevMode &&\n        assertDefined(\n            query.containerValues, 'View queries need to have a pointer to container values.');\n\n    const containerValues = query.containerValues !;\n    const viewValuesIdx = containerValues.indexOf(query.values);\n    const removed = containerValues.splice(viewValuesIdx, 1);\n\n    // mark a query as dirty only when removed view had matching modes\n    ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n    if (removed[0].length) {\n      query.list.setDirty();\n    }\n\n    query = query.next;\n  }\n}\n\n\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param tNode static data of a node to check\n * @param selector selector to match\n * @returns directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode: TNode, selector: string): number|null {\n  const localNames = tNode.localNames;\n  if (localNames) {\n    for (let i = 0; i < localNames.length; i += 2) {\n      if (localNames[i] === selector) {\n        return localNames[i + 1] as number;\n      }\n    }\n  }\n  return null;\n}\n\n\n// TODO: \"read\" should be an AbstractType (FW-486)\nfunction queryByReadToken(read: any, tNode: TNode, currentView: LView): any {\n  const factoryFn = (read as any)[NG_ELEMENT_ID];\n  if (typeof factoryFn === 'function') {\n    return factoryFn();\n  } else {\n    const matchingIdx = locateDirectiveOrProvider(tNode, currentView, read as Type<any>, false);\n    if (matchingIdx !== null) {\n      return getNodeInjectable(\n          currentView[TVIEW].data, currentView, matchingIdx, tNode as TElementNode);\n    }\n  }\n  return null;\n}\n\nfunction queryByTNodeType(tNode: TNode, currentView: LView): any {\n  if (tNode.type === TNodeType.Element || tNode.type === TNodeType.ElementContainer) {\n    return createElementRef(ViewEngine_ElementRef, tNode, currentView);\n  }\n  if (tNode.type === TNodeType.Container) {\n    return createTemplateRef(ViewEngine_TemplateRef, ViewEngine_ElementRef, tNode, currentView);\n  }\n  return null;\n}\n\nfunction queryByTemplateRef(\n    templateRefToken: ViewEngine_TemplateRef<any>, tNode: TNode, currentView: LView,\n    read: any): any {\n  const templateRefResult = (templateRefToken as any)[NG_ELEMENT_ID]();\n  if (read) {\n    return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n  }\n  return templateRefResult;\n}\n\nfunction queryRead(tNode: TNode, currentView: LView, read: any, matchingIdx: number): any {\n  if (read) {\n    return queryByReadToken(read, tNode, currentView);\n  }\n  if (matchingIdx > -1) {\n    return getNodeInjectable(\n        currentView[TVIEW].data, currentView, matchingIdx, tNode as TElementNode);\n  }\n  // if read token and / or strategy is not specified,\n  // detect it using appropriate tNode type\n  return queryByTNodeType(tNode, currentView);\n}\n\nfunction add(\n    query: LQuery<any>| null, tNode: TElementNode | TContainerNode | TElementContainerNode) {\n  const currentView = getLView();\n\n  while (query) {\n    const predicate = query.predicate;\n    const type = predicate.type as any;\n    if (type) {\n      let result = null;\n      if (type === ViewEngine_TemplateRef) {\n        result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n      } else {\n        const matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false);\n        if (matchingIdx !== null) {\n          result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n        }\n      }\n      if (result !== null) {\n        addMatch(query, result);\n      }\n    } else {\n      const selector = predicate.selector !;\n      for (let i = 0; i < selector.length; i++) {\n        const matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n        if (matchingIdx !== null) {\n          const result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n          if (result !== null) {\n            addMatch(query, result);\n          }\n        }\n      }\n    }\n    query = query.next;\n  }\n}\n\nfunction addMatch(query: LQuery<any>, matchingValue: any): void {\n  query.values.push(matchingValue);\n  query.list.setDirty();\n}\n\nfunction createPredicate<T>(predicate: Type<T>| string[], read: Type<T>| null): QueryPredicate<T> {\n  const isArray = Array.isArray(predicate);\n  return {\n    type: isArray ? null : predicate as Type<T>,\n    selector: isArray ? predicate as string[] : null,\n    read: read\n  };\n}\n\nfunction createQuery<T>(\n    previous: LQuery<any>| null, queryList: QueryList<T>, predicate: Type<T>| string[],\n    read: Type<T>| null): LQuery<T> {\n  return {\n    next: previous,\n    list: queryList,\n    predicate: createPredicate(predicate, read),\n    values: (queryList as any as QueryList_<T>)._valuesTree,\n    containerValues: null\n  };\n}\n\nclass QueryList_<T>/* implements viewEngine_QueryList<T> */ {\n  readonly dirty = true;\n  readonly changes: Observable<T> = new EventEmitter();\n  private _values: T[] = [];\n  /** @internal */\n  _valuesTree: any[] = [];\n\n  get length(): number { return this._values.length; }\n\n  get first(): T|null {\n    let values = this._values;\n    return values.length ? values[0] : null;\n  }\n\n  get last(): T|null {\n    let values = this._values;\n    return values.length ? values[values.length - 1] : null;\n  }\n\n  /**\n   * See\n   * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n   */\n  map<U>(fn: (item: T, index: number, array: T[]) => U): U[] { return this._values.map(fn); }\n\n  /**\n   * See\n   * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n   */\n  filter(fn: (item: T, index: number, array: T[]) => boolean): T[] {\n    return this._values.filter(fn);\n  }\n\n  /**\n   * See\n   * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n   */\n  find(fn: (item: T, index: number, array: T[]) => boolean): T|undefined {\n    return this._values.find(fn);\n  }\n\n  /**\n   * See\n   * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n   */\n  reduce<U>(fn: (prevValue: U, curValue: T, curIndex: number, array: T[]) => U, init: U): U {\n    return this._values.reduce(fn, init);\n  }\n\n  /**\n   * See\n   * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n   */\n  forEach(fn: (item: T, index: number, array: T[]) => void): void { this._values.forEach(fn); }\n\n  /**\n   * See\n   * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n   */\n  some(fn: (value: T, index: number, array: T[]) => boolean): boolean {\n    return this._values.some(fn);\n  }\n\n  toArray(): T[] { return this._values.slice(0); }\n\n  [getSymbolIterator()](): Iterator<T> { return (this._values as any)[getSymbolIterator()](); }\n\n  toString(): string { return this._values.toString(); }\n\n  reset(res: (any[]|T)[]): void {\n    this._values = flatten(res);\n    (this as{dirty: boolean}).dirty = false;\n  }\n\n  notifyOnChanges(): void { (this.changes as EventEmitter<any>).emit(this); }\n  setDirty(): void { (this as{dirty: boolean}).dirty = true; }\n  destroy(): void {\n    (this.changes as EventEmitter<any>).complete();\n    (this.changes as EventEmitter<any>).unsubscribe();\n  }\n}\n\n// NOTE: this hack is here because IQueryList has private members and therefore\n// it can't be implemented only extended.\nexport type QueryList<T> = viewEngine_QueryList<T>;\nexport const QueryList: typeof viewEngine_QueryList = QueryList_ as any;\n\n/**\n * Creates and returns a QueryList.\n *\n * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n * this is is a content query and the QueryList will be saved later through directiveCreate.\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n * @returns QueryList<T>\n */\nexport function query<T>(\n    memoryIndex: number | null, predicate: Type<any>| string[], descend?: boolean,\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read?: any): QueryList<T> {\n  ngDevMode && assertPreviousIsParent(getIsParent());\n  const queryList = new QueryList<T>();\n  const queries = getOrCreateCurrentQueries(LQueries_);\n  queries.track(queryList, predicate, descend, read);\n  storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n  if (memoryIndex != null) {\n    store(memoryIndex, queryList);\n  }\n  return queryList;\n}\n\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n * Returns true if a query got dirty during change detection, false otherwise.\n */\nexport function queryRefresh(queryList: QueryList<any>): boolean {\n  const queryListImpl = (queryList as any as QueryList_<any>);\n  if (queryList.dirty) {\n    queryList.reset(queryListImpl._valuesTree);\n    queryList.notifyOnChanges();\n    return true;\n  }\n  return false;\n}\n"]}