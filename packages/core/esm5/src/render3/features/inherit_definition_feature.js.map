{"version":3,"file":"inherit_definition_feature.js","sourceRoot":"","sources":["../../../../../../../packages/core/src/render3/features/inherit_definition_feature.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../../type';\nimport {fillProperties} from '../../util/property';\nimport {EMPTY, EMPTY_ARRAY} from '../definition';\nimport {ComponentDef, ComponentTemplate, DirectiveDef, DirectiveDefFeature, RenderFlags} from '../interfaces/definition';\n\n\n\n/**\n * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n * @param definition The definition to examine\n */\nfunction isComponentDef<T>(definition: ComponentDef<T>| DirectiveDef<T>):\n    definition is ComponentDef<T> {\n  const def = definition as ComponentDef<T>;\n  return typeof def.template === 'function';\n}\n\nfunction getSuperType(type: Type<any>): Type<any>&\n    {ngComponentDef?: ComponentDef<any>, ngDirectiveDef?: DirectiveDef<any>} {\n  return Object.getPrototypeOf(type.prototype).constructor;\n}\n\n/**\n * Merges the definition from a super class to a sub class.\n * @param definition The definition that is a SubClass of another directive of component\n */\nexport function InheritDefinitionFeature(definition: DirectiveDef<any>| ComponentDef<any>): void {\n  let superType = getSuperType(definition.type);\n\n  while (superType) {\n    let superDef: DirectiveDef<any>|ComponentDef<any>|undefined = undefined;\n    if (isComponentDef(definition)) {\n      // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n      superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n    } else {\n      if (superType.ngComponentDef) {\n        throw new Error('Directives cannot inherit Components');\n      }\n      // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n      superDef = superType.ngDirectiveDef;\n    }\n\n    const baseDef = (superType as any).ngBaseDef;\n\n    // Some fields in the definition may be empty, if there were no values to put in them that\n    // would've justified object creation. Unwrap them if necessary.\n    if (baseDef || superDef) {\n      const writeableDef = definition as any;\n      writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n      writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n      writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n    }\n\n    if (baseDef) {\n      // Merge inputs and outputs\n      fillProperties(definition.inputs, baseDef.inputs);\n      fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n      fillProperties(definition.outputs, baseDef.outputs);\n    }\n\n    if (superDef) {\n      // Merge hostBindings\n      const prevHostBindings = definition.hostBindings;\n      const superHostBindings = superDef.hostBindings;\n      if (superHostBindings) {\n        if (prevHostBindings) {\n          definition.hostBindings = (rf: RenderFlags, ctx: any, elementIndex: number) => {\n            superHostBindings(rf, ctx, elementIndex);\n            prevHostBindings(rf, ctx, elementIndex);\n          };\n        } else {\n          definition.hostBindings = superHostBindings;\n        }\n      }\n\n      // Merge View Queries\n      if (isComponentDef(definition) && isComponentDef(superDef)) {\n        const prevViewQuery = definition.viewQuery;\n        const superViewQuery = superDef.viewQuery;\n        if (superViewQuery) {\n          if (prevViewQuery) {\n            definition.viewQuery = <T>(rf: RenderFlags, ctx: T): void => {\n              superViewQuery(rf, ctx);\n              prevViewQuery(rf, ctx);\n            };\n          } else {\n            definition.viewQuery = superViewQuery;\n          }\n        }\n      }\n\n      // Merge Content Queries\n      const prevContentQueries = definition.contentQueries;\n      const superContentQueries = superDef.contentQueries;\n      if (superContentQueries) {\n        if (prevContentQueries) {\n          definition.contentQueries = (dirIndex: number) => {\n            superContentQueries(dirIndex);\n            prevContentQueries(dirIndex);\n          };\n        } else {\n          definition.contentQueries = superContentQueries;\n        }\n      }\n\n      // Merge Content Queries Refresh\n      const prevContentQueriesRefresh = definition.contentQueriesRefresh;\n      const superContentQueriesRefresh = superDef.contentQueriesRefresh;\n      if (superContentQueriesRefresh) {\n        if (prevContentQueriesRefresh) {\n          definition.contentQueriesRefresh = (directiveIndex: number, queryIndex: number) => {\n            superContentQueriesRefresh(directiveIndex, queryIndex);\n            prevContentQueriesRefresh(directiveIndex, queryIndex);\n          };\n        } else {\n          definition.contentQueriesRefresh = superContentQueriesRefresh;\n        }\n      }\n\n\n      // Merge inputs and outputs\n      fillProperties(definition.inputs, superDef.inputs);\n      fillProperties(definition.declaredInputs, superDef.declaredInputs);\n      fillProperties(definition.outputs, superDef.outputs);\n\n      // Inherit hooks\n      // Assume super class inheritance feature has already run.\n      definition.afterContentChecked =\n          definition.afterContentChecked || superDef.afterContentChecked;\n      definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n      definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n      definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n      definition.doCheck = definition.doCheck || superDef.doCheck;\n      definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n      definition.onInit = definition.onInit || superDef.onInit;\n\n      // Run parent features\n      const features = superDef.features;\n      if (features) {\n        for (const feature of features) {\n          if (feature && feature.ngInherit) {\n            (feature as DirectiveDefFeature)(definition);\n          }\n        }\n      }\n\n      break;\n    } else {\n      // Even if we don't have a definition, check the type for the hooks and use those if need be\n      const superPrototype = superType.prototype;\n\n      if (superPrototype) {\n        definition.afterContentChecked =\n            definition.afterContentChecked || superPrototype.afterContentChecked;\n        definition.afterContentInit =\n            definition.afterContentInit || superPrototype.afterContentInit;\n        definition.afterViewChecked =\n            definition.afterViewChecked || superPrototype.afterViewChecked;\n        definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n        definition.doCheck = definition.doCheck || superPrototype.doCheck;\n        definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n        definition.onInit = definition.onInit || superPrototype.onInit;\n      }\n    }\n\n    superType = Object.getPrototypeOf(superType);\n  }\n}\n\nfunction maybeUnwrapEmpty<T>(value: T[]): T[];\nfunction maybeUnwrapEmpty<T>(value: T): T;\nfunction maybeUnwrapEmpty(value: any): any {\n  if (value === EMPTY) {\n    return {};\n  } else if (value === EMPTY_ARRAY) {\n    return [];\n  } else {\n    return value;\n  }\n}\n"]}