{"version":3,"file":"providers_feature.js","sourceRoot":"","sources":["../../../../../../../packages/core/src/render3/features/providers_feature.ts"],"names":[],"mappings":";;;;AAQA,OAAO,EAAC,iBAAiB,EAAC,MAAM,aAAa,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+B9C,MAAM,UAAU,gBAAgB,CAAI,SAAqB,EAAE,aAA8B;IAA9B,8BAAA,EAAA,kBAA8B;IACvF,OAAO,UAAC,UAA2B;QACjC,UAAU,CAAC,iBAAiB,GAAG,UAAC,GAAoB;YAChD,OAAA,iBAAiB,CAAC,GAAG,EAAE,SAAS,EAAE,aAAa,CAAC;QAAhD,CAAgD,CAAC;KACtD,CAAC;CACH","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Provider} from '../../di/provider';\nimport {providersResolver} from '../di_setup';\nimport {DirectiveDef} from '../interfaces/definition';\n\n/**\n * This feature resolves the providers of a directive (or component),\n * and publish them into the DI system, making it visible to others for injection.\n *\n * For example:\n * class ComponentWithProviders {\n *   constructor(private greeter: GreeterDE) {}\n *\n *   static ngComponentDef = defineComponent({\n *     type: ComponentWithProviders,\n *     selectors: [['component-with-providers']],\n *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n *    consts: 1,\n *    vars: 1,\n *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n *      if (fs & RenderFlags.Create) {\n *        text(0);\n *      }\n *      if (fs & RenderFlags.Update) {\n *        textBinding(0, bind(ctx.greeter.greet()));\n *      }\n *    },\n *    features: [ProvidersFeature([GreeterDE])]\n *  });\n * }\n *\n * @param definition\n */\nexport function ProvidersFeature<T>(providers: Provider[], viewProviders: Provider[] = []) {\n  return (definition: DirectiveDef<T>) => {\n    definition.providersResolver = (def: DirectiveDef<T>) =>\n        providersResolver(def, providers, viewProviders);\n  };\n}\n"]}