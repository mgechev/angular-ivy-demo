{"version":3,"file":"debug_node.js","sourceRoot":"","sources":["../../../../../../packages/core/src/debug/debug_node.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di';\nimport {DirectiveDef} from '../render3';\nimport {assertDomNode} from '../render3/assert';\nimport {getComponent, getInjector, getLocalRefs, loadContext} from '../render3/discovery_utils';\nimport {TNode, TNodeFlags} from '../render3/interfaces/node';\nimport {TVIEW} from '../render3/interfaces/view';\nimport {DebugContext} from '../view/index';\n\nexport class EventListener {\n  constructor(public name: string, public callback: Function) {}\n}\n\n/**\n * @publicApi\n */\nexport interface DebugNode {\n  readonly listeners: EventListener[];\n  readonly parent: DebugElement|null;\n  readonly nativeNode: any;\n  readonly injector: Injector;\n  readonly componentInstance: any;\n  readonly context: any;\n  readonly references: {[key: string]: any};\n  readonly providerTokens: any[];\n}\nexport class DebugNode__PRE_R3__ {\n  readonly listeners: EventListener[] = [];\n  readonly parent: DebugElement|null = null;\n  readonly nativeNode: any;\n  private readonly _debugContext: DebugContext;\n\n  constructor(nativeNode: any, parent: DebugNode|null, _debugContext: DebugContext) {\n    this._debugContext = _debugContext;\n    this.nativeNode = nativeNode;\n    if (parent && parent instanceof DebugElement__PRE_R3__) {\n      parent.addChild(this);\n    }\n  }\n\n  get injector(): Injector { return this._debugContext.injector; }\n\n  get componentInstance(): any { return this._debugContext.component; }\n\n  get context(): any { return this._debugContext.context; }\n\n  get references(): {[key: string]: any} { return this._debugContext.references; }\n\n  get providerTokens(): any[] { return this._debugContext.providerTokens; }\n}\n\n/**\n * @publicApi\n */\nexport interface DebugElement extends DebugNode {\n  readonly name: string;\n  readonly properties: {[key: string]: any};\n  readonly attributes: {[key: string]: string | null};\n  readonly classes: {[key: string]: boolean};\n  readonly styles: {[key: string]: string | null};\n  readonly childNodes: DebugNode[];\n  readonly nativeElement: any;\n  readonly children: DebugElement[];\n\n  query(predicate: Predicate<DebugElement>): DebugElement;\n  queryAll(predicate: Predicate<DebugElement>): DebugElement[];\n  queryAllNodes(predicate: Predicate<DebugNode>): DebugNode[];\n  triggerEventHandler(eventName: string, eventObj: any): void;\n}\nexport class DebugElement__PRE_R3__ extends DebugNode__PRE_R3__ implements DebugElement {\n  readonly name !: string;\n  readonly properties: {[key: string]: any} = {};\n  readonly attributes: {[key: string]: string | null} = {};\n  readonly classes: {[key: string]: boolean} = {};\n  readonly styles: {[key: string]: string | null} = {};\n  readonly childNodes: DebugNode[] = [];\n  readonly nativeElement: any;\n\n  constructor(nativeNode: any, parent: any, _debugContext: DebugContext) {\n    super(nativeNode, parent, _debugContext);\n    this.nativeElement = nativeNode;\n  }\n\n  addChild(child: DebugNode) {\n    if (child) {\n      this.childNodes.push(child);\n      (child as{parent: DebugNode}).parent = this;\n    }\n  }\n\n  removeChild(child: DebugNode) {\n    const childIndex = this.childNodes.indexOf(child);\n    if (childIndex !== -1) {\n      (child as{parent: DebugNode | null}).parent = null;\n      this.childNodes.splice(childIndex, 1);\n    }\n  }\n\n  insertChildrenAfter(child: DebugNode, newChildren: DebugNode[]) {\n    const siblingIndex = this.childNodes.indexOf(child);\n    if (siblingIndex !== -1) {\n      this.childNodes.splice(siblingIndex + 1, 0, ...newChildren);\n      newChildren.forEach(c => {\n        if (c.parent) {\n          (c.parent as DebugElement__PRE_R3__).removeChild(c);\n        }\n        (child as{parent: DebugNode}).parent = this;\n      });\n    }\n  }\n\n  insertBefore(refChild: DebugNode, newChild: DebugNode): void {\n    const refIndex = this.childNodes.indexOf(refChild);\n    if (refIndex === -1) {\n      this.addChild(newChild);\n    } else {\n      if (newChild.parent) {\n        (newChild.parent as DebugElement__PRE_R3__).removeChild(newChild);\n      }\n      (newChild as{parent: DebugNode}).parent = this;\n      this.childNodes.splice(refIndex, 0, newChild);\n    }\n  }\n\n  query(predicate: Predicate<DebugElement>): DebugElement {\n    const results = this.queryAll(predicate);\n    return results[0] || null;\n  }\n\n  queryAll(predicate: Predicate<DebugElement>): DebugElement[] {\n    const matches: DebugElement[] = [];\n    _queryElementChildren(this, predicate, matches);\n    return matches;\n  }\n\n  queryAllNodes(predicate: Predicate<DebugNode>): DebugNode[] {\n    const matches: DebugNode[] = [];\n    _queryNodeChildren(this, predicate, matches);\n    return matches;\n  }\n\n  get children(): DebugElement[] {\n    return this\n        .childNodes  //\n        .filter((node) => node instanceof DebugElement__PRE_R3__) as DebugElement[];\n  }\n\n  triggerEventHandler(eventName: string, eventObj: any) {\n    this.listeners.forEach((listener) => {\n      if (listener.name == eventName) {\n        listener.callback(eventObj);\n      }\n    });\n  }\n}\n\n/**\n * @publicApi\n */\nexport function asNativeElements(debugEls: DebugElement[]): any {\n  return debugEls.map((el) => el.nativeElement);\n}\n\nfunction _queryElementChildren(\n    element: DebugElement, predicate: Predicate<DebugElement>, matches: DebugElement[]) {\n  element.childNodes.forEach(node => {\n    if (node instanceof DebugElement__PRE_R3__) {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      _queryElementChildren(node, predicate, matches);\n    }\n  });\n}\n\nfunction _queryNodeChildren(\n    parentNode: DebugNode, predicate: Predicate<DebugNode>, matches: DebugNode[]) {\n  if (parentNode instanceof DebugElement__PRE_R3__) {\n    parentNode.childNodes.forEach(node => {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      if (node instanceof DebugElement__PRE_R3__) {\n        _queryNodeChildren(node, predicate, matches);\n      }\n    });\n  }\n}\n\nfunction notImplemented(): Error {\n  throw new Error('Missing proper ivy implementation.');\n}\n\nclass DebugNode__POST_R3__ implements DebugNode {\n  readonly nativeNode: Node;\n\n  constructor(nativeNode: Node) { this.nativeNode = nativeNode; }\n\n  get parent(): DebugElement|null {\n    const parent = this.nativeNode.parentNode as HTMLElement;\n    return parent ? new DebugElement__POST_R3__(parent) : null;\n  }\n\n  get injector(): Injector { return getInjector(this.nativeNode); }\n\n  get componentInstance(): any {\n    const nativeElement = this.nativeNode;\n    return nativeElement && getComponent(nativeElement as HTMLElement);\n  }\n  get context(): any {\n    // https://angular-team.atlassian.net/browse/FW-719\n    throw notImplemented();\n  }\n\n  get listeners(): EventListener[] {\n    // TODO: add real implementation;\n    // https://angular-team.atlassian.net/browse/FW-719\n    return [];\n  }\n\n  get references(): {[key: string]: any;} { return getLocalRefs(this.nativeNode); }\n\n  get providerTokens(): any[] {\n    // TODO move to discoverable utils\n    const context = loadContext(this.nativeNode as HTMLElement, false) !;\n    if (!context) return [];\n    const lView = context.lView;\n    const tView = lView[TVIEW];\n    const tNode = tView.data[context.nodeIndex] as TNode;\n    const providerTokens: any[] = [];\n    const nodeFlags = tNode.flags;\n    const startIndex = nodeFlags >> TNodeFlags.DirectiveStartingIndexShift;\n    const directiveCount = nodeFlags & TNodeFlags.DirectiveCountMask;\n    const endIndex = startIndex + directiveCount;\n    for (let i = startIndex; i < endIndex; i++) {\n      let value = tView.data[i];\n      if (isDirectiveDefHack(value)) {\n        // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n        // design flaw.  We should always store same type so that we can be monomorphic. The issue\n        // is that for Components/Directives we store the def instead the type. The correct behavior\n        // is that we should always be storing injectable type in this location.\n        value = value.type;\n      }\n      providerTokens.push(value);\n    }\n    return providerTokens;\n  }\n}\n\nclass DebugElement__POST_R3__ extends DebugNode__POST_R3__ implements DebugElement {\n  constructor(nativeNode: Element) {\n    ngDevMode && assertDomNode(nativeNode);\n    super(nativeNode);\n  }\n\n  get nativeElement(): Element|null {\n    return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode as Element : null;\n  }\n\n  get name(): string { return (this.nativeElement as HTMLElement).nodeName; }\n\n  get properties(): {[key: string]: any;} {\n    const context = loadContext(this.nativeNode) !;\n    const lView = context.lView;\n    const tView = lView[TVIEW];\n    const tNode = tView.data[context.nodeIndex] as TNode;\n    const properties = {};\n    // TODO: https://angular-team.atlassian.net/browse/FW-681\n    // Missing implementation here...\n    return properties;\n  }\n\n  get attributes(): {[key: string]: string | null;} {\n    // https://angular-team.atlassian.net/browse/FW-719\n    throw notImplemented();\n  }\n\n  get classes(): {[key: string]: boolean;} {\n    // https://angular-team.atlassian.net/browse/FW-719\n    throw notImplemented();\n  }\n\n  get styles(): {[key: string]: string | null;} {\n    // https://angular-team.atlassian.net/browse/FW-719\n    throw notImplemented();\n  }\n\n  get childNodes(): DebugNode[] {\n    const childNodes = this.nativeNode.childNodes;\n    const children: DebugNode[] = [];\n    for (let i = 0; i < childNodes.length; i++) {\n      const element = childNodes[i];\n      children.push(getDebugNode__POST_R3__(element));\n    }\n    return children;\n  }\n\n  get children(): DebugElement[] {\n    const nativeElement = this.nativeElement;\n    if (!nativeElement) return [];\n    const childNodes = nativeElement.children;\n    const children: DebugElement[] = [];\n    for (let i = 0; i < childNodes.length; i++) {\n      const element = childNodes[i];\n      children.push(getDebugNode__POST_R3__(element));\n    }\n    return children;\n  }\n\n  query(predicate: Predicate<DebugElement>): DebugElement {\n    const results = this.queryAll(predicate);\n    return results[0] || null;\n  }\n\n  queryAll(predicate: Predicate<DebugElement>): DebugElement[] {\n    const matches: DebugElement[] = [];\n    _queryNodeChildrenR3(this, predicate, matches, true);\n    return matches;\n  }\n\n  queryAllNodes(predicate: Predicate<DebugNode>): DebugNode[] {\n    const matches: DebugNode[] = [];\n    _queryNodeChildrenR3(this, predicate, matches, false);\n    return matches;\n  }\n\n  triggerEventHandler(eventName: string, eventObj: any): void {\n    // This is a hack implementation. The correct implementation would bypass the DOM and `TNode`\n    // information to invoke the listeners directly.\n    // https://angular-team.atlassian.net/browse/FW-719\n    const event = document.createEvent('MouseEvent');\n    event.initEvent(eventName, true, true);\n    (this.nativeElement as HTMLElement).dispatchEvent(event);\n  }\n}\n\n/**\n * This function should not exist because it is megamorphic and only mostly correct.\n *\n * See call site for more info.\n */\nfunction isDirectiveDefHack(obj: any): obj is DirectiveDef<any> {\n  return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n}\n\nfunction _queryNodeChildrenR3(\n    parentNode: DebugNode, predicate: Predicate<DebugNode>, matches: DebugNode[],\n    elementsOnly: boolean) {\n  if (parentNode instanceof DebugElement__POST_R3__) {\n    parentNode.childNodes.forEach(node => {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      if (node instanceof DebugElement__POST_R3__) {\n        if (elementsOnly ? node.nativeElement : true) {\n          _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n        }\n      }\n    });\n  }\n}\n\n\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nconst _nativeNodeToDebugNode = new Map<any, DebugNode>();\n\nfunction getDebugNode__PRE_R3__(nativeNode: any): DebugNode|null {\n  return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n\nexport function getDebugNode__POST_R3__(nativeNode: Element): DebugElement__POST_R3__;\nexport function getDebugNode__POST_R3__(nativeNode: Node): DebugNode__POST_R3__;\nexport function getDebugNode__POST_R3__(nativeNode: null): null;\nexport function getDebugNode__POST_R3__(nativeNode: any): DebugNode|null {\n  if (nativeNode instanceof Node) {\n    return nativeNode.nodeType == Node.ELEMENT_NODE ?\n        new DebugElement__POST_R3__(nativeNode as Element) :\n        new DebugNode__POST_R3__(nativeNode);\n  }\n  return null;\n}\n\n/**\n * @publicApi\n */\nexport const getDebugNode: (nativeNode: any) => DebugNode | null = getDebugNode__PRE_R3__;\n\nexport function getAllDebugNodes(): DebugNode[] {\n  return Array.from(_nativeNodeToDebugNode.values());\n}\n\nexport function indexDebugNode(node: DebugNode) {\n  _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n\nexport function removeDebugNodeFromIndex(node: DebugNode) {\n  _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * @publicApi\n */\nexport interface Predicate<T> { (value: T): boolean; }\n\n/**\n * @publicApi\n */\nexport const DebugNode: {new (...args: any[]): DebugNode} = DebugNode__PRE_R3__ as any;\n\n/**\n * @publicApi\n */\nexport const DebugElement: {new (...args: any[]): DebugElement} = DebugElement__PRE_R3__ as any;\n"]}