{"version":3,"file":"wtf_impl.js","sourceRoot":"","sources":["../../../../../../packages/core/src/profile/wtf_impl.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,MAAM,EAAC,MAAM,SAAS,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4B/B,IAAI,KAAK,CAAQ;;AACjB,IAAI,MAAM,CAAS;;;;AAEnB,MAAM,UAAU,SAAS;;IACvB,IAAM,GAAG,GAAQ,mBAAC,MAAa,CAAC,iBAAiB,oBAAC,CAAC,KAAK,CAAC,CAAC;IAC1D,IAAI,GAAG,EAAE;QACP,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,KAAK,EAAE;YACT,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;YACzB,OAAO,IAAI,CAAC;SACb;KACF;IACD,OAAO,KAAK,CAAC;CACd;;;;;;AAED,MAAM,UAAU,WAAW,CAAC,SAAiB,EAAE,KAAiB;IAAjB,sBAAA,EAAA,YAAiB;IAC9D,OAAO,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;CAC7C;;;;;;;AAID,MAAM,UAAU,KAAK,CAAI,KAAY,EAAE,WAAiB;IACtD,KAAK,CAAC,UAAU,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;IACrC,OAAO,WAAW,CAAC;CACpB;;;;;;AAED,MAAM,UAAU,cAAc,CAAC,SAAiB,EAAE,MAAc;IAC9D,OAAO,KAAK,CAAC,cAAc,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;CAChD;;;;;AAED,MAAM,UAAU,YAAY,CAAC,KAAY;IACvC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;CAC3B","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {global} from '../util';\n\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * @publicApi\n */\nexport interface WtfScopeFn { (arg0?: any, arg1?: any): any; }\n\ninterface WTF {\n  trace: Trace;\n}\n\ninterface Trace {\n  events: Events;\n  leaveScope(scope: Scope, returnValue: any): any /** TODO #9100 */;\n  beginTimeRange(rangeType: string, action: string): Range;\n  endTimeRange(range: Range): any /** TODO #9100 */;\n}\n\nexport interface Range {}\n\ninterface Events {\n  createScope(signature: string, flags: any): Scope;\n}\n\nexport interface Scope { (...args: any[] /** TODO #9100 */): any; }\n\nlet trace: Trace;\nlet events: Events;\n\nexport function detectWTF(): boolean {\n  const wtf: WTF = (global as any /** TODO #9100 */)['wtf'];\n  if (wtf) {\n    trace = wtf['trace'];\n    if (trace) {\n      events = trace['events'];\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function createScope(signature: string, flags: any = null): any {\n  return events.createScope(signature, flags);\n}\n\nexport function leave<T>(scope: Scope): void;\nexport function leave<T>(scope: Scope, returnValue?: T): T;\nexport function leave<T>(scope: Scope, returnValue?: any): any {\n  trace.leaveScope(scope, returnValue);\n  return returnValue;\n}\n\nexport function startTimeRange(rangeType: string, action: string): Range {\n  return trace.beginTimeRange(rangeType, action);\n}\n\nexport function endTimeRange(range: Range): void {\n  trace.endTimeRange(range);\n}\n"]}