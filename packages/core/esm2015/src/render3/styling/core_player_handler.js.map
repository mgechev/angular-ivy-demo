{"version":3,"file":"core_player_handler.js","sourceRoot":"","sources":["../../../../../../packages/core/src/render3/styling/core_player_handler.ts"],"names":[],"mappings":";;;;AASA,MAAM,OAAO,iBAAiB;;wBACC,EAAE;;;;;IAE/B,YAAY;QACV,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;YAC7C,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,oBAAsB,EAAE;gBACxD,MAAM,CAAC,IAAI,EAAE,CAAC;aACf;SACF;QACD,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;KAC1B;;;;;IAED,WAAW,CAAC,MAAc,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE;CAC5D","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {PlayState, Player, PlayerHandler} from '../interfaces/player';\n\nexport class CorePlayerHandler implements PlayerHandler {\n  private _players: Player[] = [];\n\n  flushPlayers() {\n    for (let i = 0; i < this._players.length; i++) {\n      const player = this._players[i];\n      if (!player.parent && player.state === PlayState.Pending) {\n        player.play();\n      }\n    }\n    this._players.length = 0;\n  }\n\n  queuePlayer(player: Player) { this._players.push(player); }\n}\n"]}