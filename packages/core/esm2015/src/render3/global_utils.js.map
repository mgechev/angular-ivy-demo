{"version":3,"file":"global_utils.js","sourceRoot":"","sources":["../../../../../packages/core/src/render3/global_utils.ts"],"names":[],"mappings":";;;;AAOA,OAAO,EAAC,MAAM,EAAC,MAAM,SAAS,CAAC;AAE/B,OAAO,EAAC,aAAa,EAAC,MAAM,UAAU,CAAC;AACvC,OAAO,EAAC,YAAY,EAAE,aAAa,EAAE,cAAc,EAAE,WAAW,EAAE,UAAU,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,SAAS,EAAC,MAAM,oBAAoB,CAAC;;;;;;AAoBxJ,aAAa,0BAA0B,GAAG,IAAI,CAAC;;AAQ/C,IAAI,UAAU,GAAG,KAAK,CAAC;;;;AACvB,MAAM,UAAU,yBAAyB;IACvC,IAAI,CAAC,UAAU,EAAE;QACf,UAAU,GAAG,IAAI,CAAC;QAClB,iBAAiB,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;QAChD,iBAAiB,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;QACxD,iBAAiB,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;QACpD,iBAAiB,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;QAC9C,iBAAiB,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;QAC1D,iBAAiB,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;QAClD,iBAAiB,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;QAC5C,iBAAiB,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;KAC3C;CACF;;;;;;;;AAUD,MAAM,UAAU,iBAAiB,CAAC,IAAY,EAAE,EAAY;;IAC1D,MAAM,CAAC,sBAAG,MAAa,GAA2B;IAClD,SAAS,IAAI,aAAa,CAAC,EAAE,EAAE,sBAAsB,CAAC,CAAC;IACvD,IAAI,CAAC,EAAE;;QACL,IAAI,SAAS,GAAG,CAAC,CAAC,0BAA0B,CAAC,CAAC;QAC9C,IAAI,CAAC,SAAS,EAAE;YACd,SAAS,GAAG,CAAC,CAAC,0BAA0B,CAAC,GAAG,EAAE,CAAC;SAChD;QACD,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;KACtB;CACF","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {global} from '../util';\n\nimport {assertDefined} from './assert';\nimport {getComponent, getDirectives, getHostElement, getInjector, getPlayers, getRootComponents, getViewComponent, markDirty} from './global_utils_api';\n\n\n\n/**\n * This file introduces series of globally accessible debug tools\n * to allow for the Angular debugging story to function.\n *\n * To see this in action run the following command:\n *\n *   bazel run --define=compile=aot\n *   //packages/core/test/bundling/todo:devserver\n *\n *  Then load `localhost:5432` and start using the console tools.\n */\n\n/**\n * This value reflects the property on the window where the dev\n * tools are patched (window.ng).\n * */\nexport const GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n\n/*\n * Publishes a collection of default debug tools onto `window._ng_`.\n *\n * These functions are available globally when Angular is in development\n * mode and are automatically stripped away from prod mode is on.\n */\nlet _published = false;\nexport function publishDefaultGlobalUtils() {\n  if (!_published) {\n    _published = true;\n    publishGlobalUtil('getComponent', getComponent);\n    publishGlobalUtil('getViewComponent', getViewComponent);\n    publishGlobalUtil('getHostElement', getHostElement);\n    publishGlobalUtil('getInjector', getInjector);\n    publishGlobalUtil('getRootComponents', getRootComponents);\n    publishGlobalUtil('getDirectives', getDirectives);\n    publishGlobalUtil('getPlayers', getPlayers);\n    publishGlobalUtil('markDirty', markDirty);\n  }\n}\n\nexport declare type GlobalDevModeContainer = {\n  [GLOBAL_PUBLISH_EXPANDO_KEY]: {[fnName: string]: Function};\n};\n\n/**\n * Publishes the given function to `window.ngDevMode` so that it can be\n * used from the browser console when an application is not in production.\n */\nexport function publishGlobalUtil(name: string, fn: Function): void {\n  const w = global as any as GlobalDevModeContainer;\n  ngDevMode && assertDefined(fn, 'function not defined');\n  if (w) {\n    let container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n    if (!container) {\n      container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n    }\n    container[name] = fn;\n  }\n}\n"]}