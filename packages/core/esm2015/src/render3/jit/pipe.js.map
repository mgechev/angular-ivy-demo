{"version":3,"file":"pipe.js","sourceRoot":"","sources":["../../../../../../packages/core/src/render3/jit/pipe.ts"],"names":[],"mappings":";;;;;;;;;;;AAUA,OAAO,EAAC,WAAW,EAAC,MAAM,WAAW,CAAC;AACtC,OAAO,EAAC,SAAS,EAAC,MAAM,SAAS,CAAC;AAElC,OAAO,EAAC,iBAAiB,EAAC,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAC,cAAc,EAAC,MAAM,eAAe,CAAC;AAC7C,OAAO,EAAC,mBAAmB,EAAC,MAAM,QAAQ,CAAC;;;;;;AAE3C,MAAM,UAAU,WAAW,CAAC,IAAe,EAAE,IAAU;;IACrD,IAAI,SAAS,GAAQ,IAAI,CAAC;IAC1B,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,WAAW,EAAE;QACvC,GAAG,EAAE,GAAG,EAAE;YACR,IAAI,SAAS,KAAK,IAAI,EAAE;gBACtB,SAAS,GAAG,iBAAiB,EAAE,CAAC,WAAW,CACvC,cAAc,EAAE,QAAQ,SAAS,CAAC,IAAI,CAAC,eAAe,EAAE;oBACtD,IAAI,EAAE,IAAI;oBACV,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,IAAI,EAAE,mBAAmB,CAAC,IAAI,CAAC;oBAC/B,QAAQ,EAAE,IAAI,CAAC,IAAI;oBACnB,IAAI,EAAE,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;iBACjD,CAAC,CAAC;aACR;YACD,OAAO,SAAS,CAAC;SAClB;;QAED,YAAY,EAAE,CAAC,CAAC,SAAS;KAC1B,CAAC,CAAC;CACJ","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe} from '../../metadata/directives';\nimport {Type} from '../../type';\nimport {NG_PIPE_DEF} from '../fields';\nimport {stringify} from '../util';\n\nimport {getCompilerFacade} from './compiler_facade';\nimport {angularCoreEnv} from './environment';\nimport {reflectDependencies} from './util';\n\nexport function compilePipe(type: Type<any>, meta: Pipe): void {\n  let ngPipeDef: any = null;\n  Object.defineProperty(type, NG_PIPE_DEF, {\n    get: () => {\n      if (ngPipeDef === null) {\n        ngPipeDef = getCompilerFacade().compilePipe(\n            angularCoreEnv, `ng://${stringify(type)}/ngPipeDef.js`, {\n              type: type,\n              name: type.name,\n              deps: reflectDependencies(type),\n              pipeName: meta.name,\n              pure: meta.pure !== undefined ? meta.pure : true\n            });\n      }\n      return ngPipeDef;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n}\n"]}