{"version":3,"file":"ng_onchanges_feature.js","sourceRoot":"","sources":["../../../../../../packages/core/src/render3/features/ng_onchanges_feature.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SimpleChange} from '../../change_detection/change_detection_util';\nimport {OnChanges, SimpleChanges} from '../../metadata/lifecycle_hooks';\nimport {DirectiveDef, DirectiveDefFeature} from '../interfaces/definition';\n\nconst PRIVATE_PREFIX = '__ngOnChanges_';\n\ntype OnChangesExpando = OnChanges & {\n  __ngOnChanges_: SimpleChanges|null|undefined;\n  // tslint:disable-next-line:no-any Can hold any value\n  [key: string]: any;\n};\n\n/**\n * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n * lifecycle hook, so it should be included in any component that implements\n * that hook.\n *\n * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n * inherited properties will not be propagated to the ngOnChanges lifecycle\n * hook.\n *\n * Example usage:\n *\n * ```\n * static ngComponentDef = defineComponent({\n *   ...\n *   inputs: {name: 'publicName'},\n *   features: [NgOnChangesFeature]\n * });\n * ```\n */\nexport function NgOnChangesFeature<T>(definition: DirectiveDef<T>): void {\n  const declaredToMinifiedInputs = definition.declaredInputs;\n  const proto = definition.type.prototype;\n  for (const declaredName in declaredToMinifiedInputs) {\n    if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n      const minifiedKey = declaredToMinifiedInputs[declaredName];\n      const privateMinKey = PRIVATE_PREFIX + minifiedKey;\n\n      // Walk the prototype chain to see if we find a property descriptor\n      // That way we can honor setters and getters that were inherited.\n      let originalProperty: PropertyDescriptor|undefined = undefined;\n      let checkProto = proto;\n      while (!originalProperty && checkProto &&\n             Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n        originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n        checkProto = Object.getPrototypeOf(checkProto);\n      }\n\n      const getter = originalProperty && originalProperty.get;\n      const setter = originalProperty && originalProperty.set;\n\n      // create a getter and setter for property\n      Object.defineProperty(proto, minifiedKey, {\n        get: getter ||\n            (setter ? undefined : function(this: OnChangesExpando) { return this[privateMinKey]; }),\n        set<T>(this: OnChangesExpando, value: T) {\n          let simpleChanges = this[PRIVATE_PREFIX];\n          if (!simpleChanges) {\n            simpleChanges = {};\n            // Place where we will store SimpleChanges if there is a change\n            Object.defineProperty(this, PRIVATE_PREFIX, {value: simpleChanges, writable: true});\n          }\n\n          const isFirstChange = !this.hasOwnProperty(privateMinKey);\n          const currentChange = simpleChanges[declaredName];\n\n          if (currentChange) {\n            currentChange.currentValue = value;\n          } else {\n            simpleChanges[declaredName] =\n                new SimpleChange(this[privateMinKey], value, isFirstChange);\n          }\n\n          if (isFirstChange) {\n            // Create a place where the actual value will be stored and make it non-enumerable\n            Object.defineProperty(this, privateMinKey, {value, writable: true});\n          } else {\n            this[privateMinKey] = value;\n          }\n\n          if (setter) setter.call(this, value);\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode\n      });\n    }\n  }\n\n  // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n  // so the call order is changes-init-check in creation mode. In subsequent\n  // change detection runs, only the check wrapper will be called.\n  if (definition.onInit != null) {\n    definition.onInit = onChangesWrapper(definition.onInit);\n  }\n\n  definition.doCheck = onChangesWrapper(definition.doCheck);\n}\n\n// This option ensures that the ngOnChanges lifecycle hook will be inherited\n// from superclasses (in InheritDefinitionFeature).\n(NgOnChangesFeature as DirectiveDefFeature).ngInherit = true;\n\nfunction onChangesWrapper(delegateHook: (() => void) | null) {\n  return function(this: OnChangesExpando) {\n    const simpleChanges = this[PRIVATE_PREFIX];\n    if (simpleChanges != null) {\n      this.ngOnChanges(simpleChanges);\n      this[PRIVATE_PREFIX] = null;\n    }\n    if (delegateHook) delegateHook.apply(this);\n  };\n}\n"]}