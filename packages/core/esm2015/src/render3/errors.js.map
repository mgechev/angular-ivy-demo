{"version":3,"file":"errors.js","sourceRoot":"","sources":["../../../../../packages/core/src/render3/errors.ts"],"names":[],"mappings":";;;;;;;;;AAWA,MAAM,UAAU,0BAA0B,CAAC,KAAU;IACnD,MAAM,IAAI,KAAK,CAAC,yCAAyC,KAAK,EAAE,CAAC,CAAC;CACnE;;;;;;AAGD,MAAM,UAAU,2BAA2B,CAAC,KAAY;IACtD,MAAM,IAAI,KAAK,CAAC,+CAA+C,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;CACjF;;;;;;;;AAGD,MAAM,UAAU,yBAAyB,CACrC,YAAqB,EAAE,QAAa,EAAE,SAAc;;IACtD,IAAI,GAAG,GACH,8GAA8G,QAAQ,sBAAsB,SAAS,IAAI,CAAC;IAC9J,IAAI,YAAY,EAAE;QAChB,GAAG;YACC,qGAAqG;gBACrG,mDAAmD,CAAC;KACzD;;IAED,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;CACtB","sourcesContent":["\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {TNode} from './interfaces/node';\n\n/** Called when directives inject each other (creating a circular dependency) */\nexport function throwCyclicDependencyError(token: any): never {\n  throw new Error(`Cannot instantiate cyclic dependency! ${token}`);\n}\n\n/** Called when there are multiple component selectors that match a given node */\nexport function throwMultipleComponentError(tNode: TNode): never {\n  throw new Error(`Multiple components match node with tagname ${tNode.tagName}`);\n}\n\n/** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\nexport function throwErrorIfNoChangesMode(\n    creationMode: boolean, oldValue: any, currValue: any): never|void {\n  let msg =\n      `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n  if (creationMode) {\n    msg +=\n        ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n        ` Has it been created in a change detection hook ?`;\n  }\n  // TODO: include debug context\n  throw new Error(msg);\n}\n"]}