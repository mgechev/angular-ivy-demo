{"version":3,"file":"core.js","sources":["../../../packages/core/esm5/src/util/property.js","../../../packages/core/esm5/src/render3/fields.js","../../../packages/core/esm5/src/di/defs.js","../../../packages/core/esm5/src/di/injection_token.js","../../../packages/core/esm5/src/util/decorators.js","../../../packages/core/esm5/src/metadata/di.js","../../../packages/core/esm5/src/change_detection/constants.js","../../../packages/core/esm5/src/metadata/resource_loading.js","../../../packages/core/esm5/src/metadata/view.js","../../../packages/core/esm5/src/util.js","../../../packages/core/esm5/src/render3/ng_dev_mode.js","../../../packages/core/esm5/src/render3/definition.js","../../../packages/core/esm5/src/render3/jit/compiler_facade_interface.js","../../../packages/core/esm5/src/render3/jit/compiler_facade.js","../../../packages/core/esm5/src/di/metadata.js","../../../packages/core/esm5/src/di/injector_compatibility.js","../../../packages/core/esm5/src/render3/assert.js","../../../packages/core/esm5/src/render3/interfaces/injector.js","../../../packages/core/esm5/src/render3/interfaces/view.js","../../../packages/core/esm5/src/render3/node_assert.js","../../../packages/core/esm5/src/render3/hooks.js","../../../packages/core/esm5/src/render3/interfaces/container.js","../../../packages/core/esm5/src/render3/interfaces/context.js","../../../packages/core/esm5/src/render3/util.js","../../../packages/core/esm5/src/render3/state.js","../../../packages/core/esm5/src/render3/di.js","../../../packages/core/esm5/src/render3/context_discovery.js","../../../packages/core/esm5/src/util/noop.js","../../../packages/core/esm5/src/di/forward_ref.js","../../../packages/core/esm5/src/di/injector.js","../../../packages/core/esm5/src/linker/ng_module_factory.js","../../../packages/core/esm5/src/util/ng_reflect.js","../../../packages/core/esm5/src/change_detection/change_detection_util.js","../../../packages/core/esm5/src/render3/errors.js","../../../packages/core/esm5/src/render3/tokens.js","../../../packages/core/esm5/src/render3/bindings.js","../../../packages/core/esm5/src/render3/interfaces/projection.js","../../../packages/core/esm5/src/render3/interfaces/renderer.js","../../../packages/core/esm5/src/render3/interfaces/node.js","../../../packages/core/esm5/src/render3/node_manipulation.js","../../../packages/core/esm5/src/render3/node_selector_matcher.js","../../../packages/core/esm5/src/render3/styling/player_factory.js","../../../packages/core/esm5/src/render3/styling/core_player_handler.js","../../../packages/core/esm5/src/render3/styling/util.js","../../../packages/core/esm5/src/render3/styling/class_and_style_bindings.js","../../../packages/core/esm5/src/render3/instructions.js","../../../packages/core/esm5/src/render3/view_ref.js","../../../packages/core/esm5/src/render3/view_engine_compatibility.js","../../../packages/core/esm5/src/render3/discovery_utils.js","../../../packages/core/esm5/src/render3/players.js","../../../packages/core/esm5/src/render3/global_utils_api.js","../../../packages/core/esm5/src/render3/global_utils.js","../../../packages/core/esm5/src/render3/component.js","../../../packages/core/esm5/src/render3/features/inherit_definition_feature.js","../../../packages/core/esm5/src/render3/features/ng_onchanges_feature.js","../../../packages/core/esm5/src/di/scope.js","../../../packages/core/esm5/src/di/r3_injector.js","../../../packages/core/esm5/src/render3/di_setup.js","../../../packages/core/esm5/src/render3/features/providers_feature.js","../../../packages/core/esm5/src/linker/component_factory.js","../../../packages/core/esm5/src/linker/component_factory_resolver.js","../../../packages/core/esm5/src/linker/element_ref.js","../../../packages/core/esm5/src/render/api.js","../../../packages/core/esm5/src/sanitization/security.js","../../../packages/core/esm5/src/version.js","../../../packages/core/esm5/src/render3/component_ref.js","../../../packages/core/esm5/src/is_dev_mode.js","../../../packages/core/esm5/src/sanitization/inert_body.js","../../../packages/core/esm5/src/sanitization/url_sanitizer.js","../../../packages/core/esm5/src/sanitization/html_sanitizer.js","../../../packages/core/esm5/src/render3/interfaces/i18n.js","../../../packages/core/esm5/src/render3/i18n.js","../../../packages/core/esm5/src/render3/ng_module_ref.js","../../../packages/core/esm5/src/render3/metadata.js","../../../packages/core/esm5/src/render3/pure_function.js","../../../packages/core/esm5/src/render3/pipe.js","../../../packages/core/esm5/src/event_emitter.js","../../../packages/core/esm5/src/linker/template_ref.js","../../../packages/core/esm5/src/render3/interfaces/definition.js","../../../packages/core/esm5/src/render3/interfaces/query.js","../../../packages/core/esm5/src/render3/query.js","../../../packages/core/esm5/src/render3/view_engine_compatibility_prebound.js","../../../packages/core/esm5/src/render3/index.js","../../../packages/core/esm5/src/sanitization/bypass.js","../../../packages/core/esm5/src/sanitization/style_sanitizer.js","../../../packages/core/esm5/src/sanitization/sanitization.js","../../../packages/core/esm5/src/render3/jit/environment.js","../../../packages/core/esm5/src/type.js","../../../packages/core/esm5/src/reflection/reflection_capabilities.js","../../../packages/core/esm5/src/render3/jit/util.js","../../../packages/core/esm5/src/render3/jit/module.js","../../../packages/core/esm5/src/render3/jit/directive.js","../../../packages/core/esm5/src/render3/jit/pipe.js","../../../packages/core/esm5/src/metadata/directives.js","../../../packages/core/esm5/src/di/util.js","../../../packages/core/esm5/src/metadata/ng_module.js","../../../packages/core/esm5/src/metadata.js","../../../packages/core/esm5/src/render3/jit/injectable.js","../../../packages/core/esm5/src/di/injectable.js","../../../packages/core/esm5/src/errors.js","../../../packages/core/esm5/src/error_handler.js","../../../packages/core/esm5/src/di/reflective_errors.js","../../../packages/core/esm5/src/di/reflective_key.js","../../../packages/core/esm5/src/reflection/reflector.js","../../../packages/core/esm5/src/reflection/reflection.js","../../../packages/core/esm5/src/di/reflective_provider.js","../../../packages/core/esm5/src/di/reflective_injector.js","../../../packages/core/esm5/src/di.js","../../../packages/core/esm5/src/util/lang.js","../../../packages/core/esm5/src/application_init.js","../../../packages/core/esm5/src/application_tokens.js","../../../packages/core/esm5/src/console.js","../../../packages/core/esm5/src/linker/compiler.js","../../../packages/core/esm5/src/profile/wtf_impl.js","../../../packages/core/esm5/src/profile/profile.js","../../../packages/core/esm5/src/zone/ng_zone.js","../../../packages/core/esm5/src/testability/testability.js","../../../packages/core/esm5/src/application_ref.js","../../../packages/core/esm5/src/zone.js","../../../packages/core/esm5/src/render.js","../../../packages/core/esm5/src/linker/ng_module_factory_loader.js","../../../packages/core/esm5/src/linker/query_list.js","../../../packages/core/esm5/src/linker/system_js_ng_module_factory_loader.js","../../../packages/core/esm5/src/linker/view_container_ref.js","../../../packages/core/esm5/src/change_detection/change_detector_ref.js","../../../packages/core/esm5/src/linker/view_ref.js","../../../packages/core/esm5/src/linker.js","../../../packages/core/esm5/src/debug/debug_node.js","../../../packages/core/esm5/src/change_detection/differs/default_iterable_differ.js","../../../packages/core/esm5/src/change_detection/differs/default_keyvalue_differ.js","../../../packages/core/esm5/src/change_detection/differs/iterable_differs.js","../../../packages/core/esm5/src/change_detection/differs/keyvalue_differs.js","../../../packages/core/esm5/src/change_detection/change_detection.js","../../../packages/core/esm5/src/change_detection.js","../../../packages/core/esm5/src/platform_core_providers.js","../../../packages/core/esm5/src/i18n/tokens.js","../../../packages/core/esm5/src/application_module.js","../../../packages/core/esm5/src/ivy_switch.js","../../../packages/core/esm5/src/view/types.js","../../../packages/core/esm5/src/view/errors.js","../../../packages/core/esm5/src/view/util.js","../../../packages/core/esm5/src/view/element.js","../../../packages/core/esm5/src/view/ng_module.js","../../../packages/core/esm5/src/view/view_attach.js","../../../packages/core/esm5/src/view/refs.js","../../../packages/core/esm5/src/view/provider.js","../../../packages/core/esm5/src/view/query.js","../../../packages/core/esm5/src/view/ng_content.js","../../../packages/core/esm5/src/view/pure_expression.js","../../../packages/core/esm5/src/view/text.js","../../../packages/core/esm5/src/view/view.js","../../../packages/core/esm5/src/view/services.js","../../../packages/core/esm5/src/view/entrypoint.js","../../../packages/core/esm5/src/view/index.js","../../../packages/core/esm5/src/core_private_export.js","../../../packages/core/esm5/src/core_render3_private_export.js","../../../packages/core/esm5/src/codegen_private_exports.js","../../../packages/core/esm5/src/core.js","../../../packages/core/esm5/public_api.js","../../../packages/core/esm5/core.js"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @return {?}\n */\nexport function getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === /** @type {?} */ (getClosureSafeProperty)) {\n            return key;\n        }\n    }\n    throw Error('Could not find renamed property on target object.');\n}\n/**\n * Sets properties on a target object from a source object, but only if\n * the property doesn't already exist on the target object.\n * @param {?} target The target to set properties on\n * @param {?} source The source of the property keys and values to set\n * @return {?}\n */\nexport function fillProperties(target, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n            target[key] = source[key];\n        }\n    }\n}\n//# sourceMappingURL=property.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { getClosureSafeProperty } from '../util/property';\n/** @type {?} */\nexport var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n/** @type {?} */\nexport var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n/** @type {?} */\nexport var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n/** @type {?} */\nexport var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n/** @type {?} */\nexport var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n/** @type {?} */\nexport var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n/** @type {?} */\nexport var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n/** *\n * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n  @type {?} */\nexport var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n//# sourceMappingURL=fields.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NG_INJECTABLE_DEF, NG_INJECTOR_DEF } from '../render3/fields';\n/**\n * Information about how a type or `InjectionToken` interfaces with the DI system.\n *\n * At a minimum, this includes a `factory` which defines how to create the given type `T`, possibly\n * requesting injection of other types if necessary.\n *\n * Optionally, a `providedIn` parameter specifies that the given type belongs to a particular\n * `InjectorDef`, `NgModule`, or a special scope (e.g. `'root'`). A value of `null` indicates\n * that the injectable does not belong to any scope.\n *\n * NOTE: This is a private type and should not be exported\n * @record\n * @template T\n */\nexport function InjectableDef() { }\n/**\n * Specifies that the given type belongs to a particular injector:\n * - `InjectorType` such as `NgModule`,\n * - `'root'` the root injector\n * - `'any'` all injectors.\n * - `null`, does not belong to any injector. Must be explicitly listed in the injector\n *   `providers`.\n * @type {?}\n */\nInjectableDef.prototype.providedIn;\n/**\n * Factory method to execute to create an instance of the injectable.\n * @type {?}\n */\nInjectableDef.prototype.factory;\n/**\n * In a case of no explicit injector, a location where the instance of the injectable is stored.\n * @type {?}\n */\nInjectableDef.prototype.value;\n/**\n * Information about the providers to be included in an `Injector` as well as how the given type\n * which carries the information should be created by the DI system.\n *\n * An `InjectorDef` can import other types which have `InjectorDefs`, forming a deep nested\n * structure of providers with a defined priority (identically to how `NgModule`s also have\n * an import/dependency structure).\n *\n * NOTE: This is a private type and should not be exported\n * @record\n * @template T\n */\nexport function InjectorDef() { }\n/** @type {?} */\nInjectorDef.prototype.factory;\n/** @type {?} */\nInjectorDef.prototype.providers;\n/** @type {?} */\nInjectorDef.prototype.imports;\n/**\n * A `Type` which has an `InjectableDef` static field.\n *\n * `InjectableDefType`s contain their own Dependency Injection metadata and are usable in an\n * `InjectorDef`-based `StaticInjector.\n *\n * \\@publicApi\n * @record\n * @template T\n */\nexport function InjectableType() { }\n/**\n * Opaque type whose structure is highly version dependent. Do not rely on any properties.\n * @type {?}\n */\nInjectableType.prototype.ngInjectableDef;\n/**\n * A type which has an `InjectorDef` static field.\n *\n * `InjectorDefTypes` can be used to configure a `StaticInjector`.\n *\n * \\@publicApi\n * @record\n * @template T\n */\nexport function InjectorType() { }\n/**\n * Opaque type whose structure is highly version dependent. Do not rely on any properties.\n * @type {?}\n */\nInjectorType.prototype.ngInjectorDef;\n/**\n * Describes the `InjectorDef` equivalent of a `ModuleWithProviders`, an `InjectorDefType` with an\n * associated array of providers.\n *\n * Objects of this type can be listed in the imports section of an `InjectorDef`.\n *\n * NOTE: This is a private type and should not be exported\n * @record\n * @template T\n */\nexport function InjectorTypeWithProviders() { }\n/** @type {?} */\nInjectorTypeWithProviders.prototype.ngModule;\n/** @type {?|undefined} */\nInjectorTypeWithProviders.prototype.providers;\n/**\n * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n * in which injectors (if any) it will be available.\n *\n * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n * `InjectableType`.\n *\n * Options:\n * * `providedIn` determines which injectors will include the injectable, by either associating it\n *   with an `\\@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n * * `factory` gives the zero argument function which will create an instance of the injectable.\n *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n *\n * \\@publicApi\n * @template T\n * @param {?} opts\n * @return {?}\n */\nexport function defineInjectable(opts) {\n    return /** @type {?} */ ((/** @type {?} */ ({\n        providedIn: /** @type {?} */ (opts.providedIn) || null, factory: opts.factory, value: undefined,\n    })));\n}\n/**\n * Construct an `InjectorDef` which configures an injector.\n *\n * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n * `InjectorType`.\n *\n * Options:\n *\n * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n *   create the type must be provided. If that factory function needs to inject arguments, it can\n *   use the `inject` function.\n * * `providers`: an optional array of providers to add to the injector. Each provider must\n *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n *   type must be an `InjectableType`).\n * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n *   whose providers will also be added to the injector. Locally provided types will override\n *   providers from imports.\n *\n * \\@publicApi\n * @param {?} options\n * @return {?}\n */\nexport function defineInjector(options) {\n    return /** @type {?} */ ((/** @type {?} */ ({\n        factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n    })));\n}\n/**\n * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n *\n * @template T\n * @param {?} type type which may have `ngInjectableDef`\n * @return {?}\n */\nexport function getInjectableDef(type) {\n    return type.hasOwnProperty(NG_INJECTABLE_DEF) ? (/** @type {?} */ (type))[NG_INJECTABLE_DEF] : null;\n}\n/**\n * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n *\n * @template T\n * @param {?} type type which may have `ngInjectorDef`\n * @return {?}\n */\nexport function getInjectorDef(type) {\n    return type.hasOwnProperty(NG_INJECTOR_DEF) ? (/** @type {?} */ (type))[NG_INJECTOR_DEF] : null;\n}\n//# sourceMappingURL=defs.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { defineInjectable } from './defs';\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `\\@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * \\@usageNotes\n * ### Basic Example\n *\n * ### Plain InjectionToken\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * ### Tree-shakable InjectionToken\n *\n * {\\@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n *\n *\n * \\@publicApi\n * @template T\n */\nvar /**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `\\@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * \\@usageNotes\n * ### Basic Example\n *\n * ### Plain InjectionToken\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * ### Tree-shakable InjectionToken\n *\n * {\\@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n *\n *\n * \\@publicApi\n * @template T\n */\nInjectionToken = /** @class */ (function () {\n    function InjectionToken(_desc, options) {\n        this._desc = _desc;\n        /**\n         * \\@internal\n         */\n        this.ngMetadataName = 'InjectionToken';\n        if (options !== undefined) {\n            /** @nocollapse */ this.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn || 'root',\n                factory: options.factory,\n            });\n        }\n        else {\n            /** @nocollapse */ this.ngInjectableDef = undefined;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    InjectionToken.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `\\@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * \\@usageNotes\n * ### Basic Example\n *\n * ### Plain InjectionToken\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * ### Tree-shakable InjectionToken\n *\n * {\\@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n *\n *\n * \\@publicApi\n * @template T\n */\nexport { InjectionToken };\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    InjectionToken.prototype.ngMetadataName;\n    /** @type {?} */\n    InjectionToken.prototype.ngInjectableDef;\n    /** @type {?} */\n    InjectionToken.prototype._desc;\n}\n/**\n * @record\n * @template T\n */\nexport function InjectableDefToken() { }\n/** @type {?} */\nInjectableDefToken.prototype.ngInjectableDef;\n//# sourceMappingURL=injection_token.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * \\@ng.Component({...})\n * class MyClass {...}\n * ```\n *\n * \\@publicApi\n * @record\n */\nexport function TypeDecorator() { }\n/** @type {?} */\nexport var ANNOTATIONS = '__annotations__';\n/** @type {?} */\nexport var PARAMETERS = '__parameters__';\n/** @type {?} */\nexport var PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n * @template T\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} additionalProcessing\n * @param {?=} typeFn\n * @return {?}\n */\nexport function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n    /** @type {?} */\n    var metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function DecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _a;\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call.apply(metaCtor, [this].concat(args));\n            return this;\n        }\n        /** @type {?} */\n        var annotationInstance = new ((_a = (/** @type {?} */ (DecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        return function TypeDecorator(cls) {\n            if (typeFn)\n                typeFn.apply(void 0, [cls].concat(args));\n            /** @type {?} */\n            var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                (/** @type {?} */ (cls))[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            if (additionalProcessing)\n                additionalProcessing(cls);\n            return cls;\n        };\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (DecoratorFactory)).annotationCls = DecoratorFactory;\n    return /** @type {?} */ (DecoratorFactory);\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            /** @type {?} */\n            var values = props.apply(void 0, args);\n            for (var propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nexport function makeParamDecorator(name, props, parentClass) {\n    /** @type {?} */\n    var metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _a;\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        /** @type {?} */\n        var annotationInstance = new ((_a = (/** @type {?} */ (ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        (/** @type {?} */ (ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            /** @type {?} */\n            var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                (/** @type {?} */ (cls))[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} additionalProcessing\n * @return {?}\n */\nexport function makePropDecorator(name, props, parentClass, additionalProcessing) {\n    /** @type {?} */\n    var metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _a;\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        /** @type {?} */\n        var decoratorInstance = new ((_a = (/** @type {?} */ (PropDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        /**\n         * @param {?} target\n         * @param {?} name\n         * @return {?}\n         */\n        function PropDecorator(target, name) {\n            /** @type {?} */\n            var constructor = target.constructor;\n            /** @type {?} */\n            var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                (/** @type {?} */ (constructor))[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n            if (additionalProcessing)\n                additionalProcessing.apply(void 0, [target, name].concat(args));\n        }\n        return PropDecorator;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (PropDecoratorFactory)).annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n//# sourceMappingURL=decorators.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { InjectionToken } from '../di/injection_token';\nimport { makeParamDecorator, makePropDecorator } from '../util/decorators';\n/** *\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * \\@usageNotes\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@publicApi\n  @type {?} */\nexport var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * \\@publicApi\n * @record\n */\nexport function AttributeDecorator() { }\n/** *\n * Attribute decorator and metadata.\n *\n * \\@Annotation\n * \\@publicApi\n  @type {?} */\nexport var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * Base class for query metadata.\n *\n * @see `ContentChildren`.\n * @see `ContentChild`.\n * @see `ViewChildren`.\n * @see `ViewChild`.\n *\n * \\@publicApi\n * @abstract\n */\nvar /**\n * Base class for query metadata.\n *\n * @see `ContentChildren`.\n * @see `ContentChild`.\n * @see `ViewChildren`.\n * @see `ViewChild`.\n *\n * \\@publicApi\n * @abstract\n */\nQuery = /** @class */ (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * Base class for query metadata.\n *\n * @see `ContentChildren`.\n * @see `ContentChild`.\n * @see `ViewChildren`.\n * @see `ViewChild`.\n *\n * \\@publicApi\n * @abstract\n */\nexport { Query };\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * @see `ContentChildren`.\n * \\@publicApi\n * @record\n */\nexport function ContentChildrenDecorator() { }\n/** *\n * ContentChildren decorator and metadata.\n *\n *\n * \\@Annotation\n * \\@publicApi\n  @type {?} */\nexport var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (tslib_1.__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n}, Query);\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n * \\@publicApi\n * @record\n */\nexport function ContentChildDecorator() { }\n/** *\n * ContentChild decorator and metadata.\n *\n *\n * \\@Annotation\n *\n * \\@publicApi\n  @type {?} */\nexport var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (tslib_1.__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * @see `ViewChildren`.\n *\n * \\@publicApi\n * @record\n */\nexport function ViewChildrenDecorator() { }\n/** *\n * ViewChildren decorator and metadata.\n *\n * \\@Annotation\n * \\@publicApi\n  @type {?} */\nexport var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (tslib_1.__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * @see `ViewChild`.\n * \\@publicApi\n * @record\n */\nexport function ViewChildDecorator() { }\n/** *\n * ViewChild decorator and metadata.\n *\n * \\@Annotation\n * \\@publicApi\n  @type {?} */\nexport var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n    return (tslib_1.__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n}, Query);\n//# sourceMappingURL=di.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    /**\n       * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n       * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n       * Change detection can still be explictly invoked.\n       */\n    OnPush: 0,\n    /**\n       * Use the default `CheckAlways` strategy, in which change detection is automatic until\n       * explicitly deactivated.\n       */\n    Default: 1,\n};\nexport { ChangeDetectionStrategy };\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = 'OnPush';\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = 'Default';\n/** @enum {number} */\nvar ChangeDetectorStatus = {\n    /**\n       * A state in which, after calling `detectChanges()`, the change detector\n       * state becomes `Checked`, and must be explicitly invoked or reactivated.\n       */\n    CheckOnce: 0,\n    /**\n       * A state in which change detection is skipped until the change detector mode\n       * becomes `CheckOnce`.\n       */\n    Checked: 1,\n    /**\n       * A state in which change detection continues automatically until explictly\n       * deactivated.\n       */\n    CheckAlways: 2,\n    /**\n       * A state in which a change detector sub tree is not a part of the main tree and\n       * should be skipped.\n       */\n    Detached: 3,\n    /**\n       * Indicates that the change detector encountered an error checking a binding\n       * or calling a directive lifecycle method and is now in an inconsistent state. Change\n       * detectors in this state do not detect changes.\n       */\n    Errored: 4,\n    /**\n       * Indicates that the change detector has been destroyed.\n       */\n    Destroyed: 5,\n};\nexport { ChangeDetectorStatus };\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = 'CheckOnce';\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = 'Checked';\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = 'CheckAlways';\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = 'Detached';\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = 'Errored';\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = 'Destroyed';\n/**\n * Reports whether a given strategy is currently the default for change detection.\n * @see `ChangeDetectorStatus`\n * @see `ChangeDetectorRef`\n * @param {?} changeDetectionStrategy The strategy to check.\n * @return {?} True if the given strategy is the current default, false otherwise.\n */\nexport function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n//# sourceMappingURL=constants.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to resolve resource URLs on `\\@Component` when used with JIT compilation.\n *\n * Example:\n * ```\n * \\@Component({\n *   selector: 'my-comp',\n *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n * })\n * class MyComponnent{\n * }\n *\n * // Calling `renderComponent` will fail because `MyComponent`'s `\\@Compenent.templateUrl`\n * // needs to be resolved because `renderComponent` is synchronous process.\n * // renderComponent(MyComponent);\n *\n * // Calling `resolveComponentResources` will resolve `\\@Compenent.templateUrl` into\n * // `\\@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n * // Use browser's `fetch` function as the default resource resolution strategy.\n * resolveComponentResources(fetch).then(() => {\n *   // After resolution all URLs have been converted into strings.\n *   renderComponent(MyComponent);\n * });\n *\n * ```\n *\n * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n * to call this method outside JIT mode.\n *\n * @param {?} resourceResolver a function which is responsible to returning a `Promise` of the resolved\n * URL. Browser's `fetch` method is a good default implementation.\n * @return {?}\n */\nexport function resolveComponentResources(resourceResolver) {\n    /** @type {?} */\n    var urlFetches = [];\n    /** @type {?} */\n    var urlMap = new Map();\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    function cachedResourceResolve(url) {\n        /** @type {?} */\n        var promise = urlMap.get(url);\n        if (!promise) {\n            /** @type {?} */\n            var resp = resourceResolver(url);\n            urlMap.set(url, promise = resp.then(unwrapResponse));\n            urlFetches.push(promise);\n        }\n        return promise;\n    }\n    componentResourceResolutionQueue.forEach(function (component) {\n        if (component.templateUrl) {\n            cachedResourceResolve(component.templateUrl).then(function (template) {\n                component.template = template;\n                component.templateUrl = undefined;\n            });\n        }\n        /** @type {?} */\n        var styleUrls = component.styleUrls;\n        /** @type {?} */\n        var styles = component.styles || (component.styles = []);\n        /** @type {?} */\n        var styleOffset = component.styles.length;\n        styleUrls && styleUrls.forEach(function (styleUrl, index) {\n            styles.push(''); // pre-allocate array.\n            cachedResourceResolve(styleUrl).then(function (style) {\n                styles[styleOffset + index] = style;\n                styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                if (styleUrls.length == 0) {\n                    component.styleUrls = undefined;\n                }\n            });\n        });\n    });\n    componentResourceResolutionQueue.clear();\n    return Promise.all(urlFetches).then(function () { return null; });\n}\n/** @type {?} */\nvar componentResourceResolutionQueue = new Set();\n/**\n * @param {?} metadata\n * @return {?}\n */\nexport function maybeQueueResolutionOfComponentResources(metadata) {\n    if (componentNeedsResolution(metadata)) {\n        componentResourceResolutionQueue.add(metadata);\n    }\n}\n/**\n * @param {?} component\n * @return {?}\n */\nexport function componentNeedsResolution(component) {\n    return component.templateUrl || component.styleUrls && component.styleUrls.length;\n}\n/**\n * @return {?}\n */\nexport function clearResolutionOfComponentResourcesQueue() {\n    componentResourceResolutionQueue.clear();\n}\n/**\n * @param {?} response\n * @return {?}\n */\nfunction unwrapResponse(response) {\n    return typeof response == 'string' ? response : response.text();\n}\n//# sourceMappingURL=resource_loading.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar ViewEncapsulation = {\n    /**\n       * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n       * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n       * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n       * selectors.\n       *\n       * This is the default option.\n       */\n    Emulated: 0,\n    /**\n       * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n       * Use the native encapsulation mechanism of the renderer.\n       *\n       * For the DOM this means using the deprecated [Shadow DOM\n       * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       */\n    Native: 1,\n    /**\n       * Don't provide any template or style encapsulation.\n       */\n    None: 2,\n    /**\n       * Use Shadow DOM to encapsulate styles.\n       *\n       * For the DOM this means using modern [Shadow\n       * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       */\n    ShadowDom: 3,\n};\nexport { ViewEncapsulation };\nViewEncapsulation[ViewEncapsulation.Emulated] = 'Emulated';\nViewEncapsulation[ViewEncapsulation.Native] = 'Native';\nViewEncapsulation[ViewEncapsulation.None] = 'None';\nViewEncapsulation[ViewEncapsulation.ShadowDom] = 'ShadowDom';\n//# sourceMappingURL=view.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nvar __window = typeof window !== 'undefined' && window;\n/** @type {?} */\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\n/** @type {?} */\nvar __global = typeof global !== 'undefined' && global;\n/** @type {?} */\nvar _global = __global || __window || __self;\n/** @type {?} */\nvar promise = Promise.resolve(0);\nexport { _global as global };\n/** @type {?} */\nvar _symbolIterator = null;\n/**\n * @return {?}\n */\nexport function getSymbolIterator() {\n    if (!_symbolIterator) {\n        /** @type {?} */\n        var Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            /** @type {?} */\n            var keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                /** @type {?} */\n                var key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    (/** @type {?} */ (Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nexport function scheduleMicroTask(fn) {\n    if (typeof Zone === 'undefined') {\n        // use promise to schedule microTask instead of use Zone\n        promise.then(function () { fn && fn.apply(null, null); });\n    }\n    else {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nexport function stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    /** @type {?} */\n    var res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    /** @type {?} */\n    var newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Convince closure compiler that the wrapped function has no side-effects.\n *\n * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n * It is important that the return value for the `noSideEffects` function be assigned\n * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n * compiler.\n * @param {?} fn\n * @return {?}\n */\nexport function noSideEffects(fn) {\n    return '' + { toString: fn };\n}\n//# sourceMappingURL=util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nexport function ngDevModeResetPerfCounters() {\n    /** @type {?} */\n    var newCounters = {\n        firstTemplatePass: 0,\n        tNode: 0,\n        tView: 0,\n        rendererCreateTextNode: 0,\n        rendererSetText: 0,\n        rendererCreateElement: 0,\n        rendererAddEventListener: 0,\n        rendererSetAttribute: 0,\n        rendererRemoveAttribute: 0,\n        rendererSetProperty: 0,\n        rendererSetClassName: 0,\n        rendererAddClass: 0,\n        rendererRemoveClass: 0,\n        rendererSetStyle: 0,\n        rendererRemoveStyle: 0,\n        rendererDestroy: 0,\n        rendererDestroyNode: 0,\n        rendererMoveNode: 0,\n        rendererRemoveNode: 0,\n        rendererCreateComment: 0,\n    };\n    // NOTE: Under Ivy we may have both window & global defined in the Node\n    //    environment since ensureDocument() in render3.ts sets global.window.\n    if (typeof window != 'undefined') {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        (/** @type {?} */ (window))['ngDevMode'] = newCounters;\n    }\n    if (typeof global != 'undefined') {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        (/** @type {?} */ (global))['ngDevMode'] = newCounters;\n    }\n    if (typeof self != 'undefined') {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        (/** @type {?} */ (self))['ngDevMode'] = newCounters;\n    }\n    return newCounters;\n}\n/**\n * This checks to see if the `ngDevMode` has been set. If yes,\n * than we honor it, otherwise we default to dev mode with additional checks.\n *\n * The idea is that unless we are doing production build where we explicitly\n * set `ngDevMode == false` we should be helping the developer by providing\n * as much early warning and errors as possible.\n */\nif (typeof ngDevMode === 'undefined' || ngDevMode) {\n    ngDevModeResetPerfCounters();\n}\n//# sourceMappingURL=ng_dev_mode.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport './ng_dev_mode';\nimport { ChangeDetectionStrategy } from '../change_detection/constants';\nimport { ViewEncapsulation } from '../metadata/view';\nimport { noSideEffects } from '../util';\nimport { NG_COMPONENT_DEF, NG_DIRECTIVE_DEF, NG_MODULE_DEF, NG_PIPE_DEF } from './fields';\n/** @type {?} */\nexport var EMPTY = {};\n/** @type {?} */\nexport var EMPTY_ARRAY = [];\nif (typeof ngDevMode !== 'undefined' && ngDevMode) {\n    Object.freeze(EMPTY);\n    Object.freeze(EMPTY_ARRAY);\n}\n/** @type {?} */\nvar _renderCompCount = 0;\n/**\n * Create a component definition object.\n *\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngComponentDef = defineComponent({\n *     ...\n *   });\n * }\n * ```\n * @template T\n * @param {?} componentDefinition\n * @return {?}\n */\nexport function defineComponent(componentDefinition) {\n    /** @type {?} */\n    var type = componentDefinition.type;\n    /** @type {?} */\n    var typePrototype = type.prototype;\n    /** @type {?} */\n    var declaredInputs = /** @type {?} */ ({});\n    /** @type {?} */\n    var def = {\n        type: type,\n        providersResolver: null,\n        consts: componentDefinition.consts,\n        vars: componentDefinition.vars,\n        factory: componentDefinition.factory,\n        template: componentDefinition.template || /** @type {?} */ ((null)),\n        hostBindings: componentDefinition.hostBindings || null,\n        contentQueries: componentDefinition.contentQueries || null,\n        contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n        attributes: componentDefinition.attributes || null,\n        declaredInputs: declaredInputs,\n        inputs: /** @type {?} */ ((null)),\n        // assigned in noSideEffects\n        outputs: /** @type {?} */ ((null)),\n        // assigned in noSideEffects\n        exportAs: componentDefinition.exportAs || null,\n        onInit: typePrototype.ngOnInit || null,\n        doCheck: typePrototype.ngDoCheck || null,\n        afterContentInit: typePrototype.ngAfterContentInit || null,\n        afterContentChecked: typePrototype.ngAfterContentChecked || null,\n        afterViewInit: typePrototype.ngAfterViewInit || null,\n        afterViewChecked: typePrototype.ngAfterViewChecked || null,\n        onDestroy: typePrototype.ngOnDestroy || null,\n        onPush: componentDefinition.changeDetection === ChangeDetectionStrategy.OnPush,\n        directiveDefs: /** @type {?} */ ((null)),\n        // assigned in noSideEffects\n        pipeDefs: /** @type {?} */ ((null)),\n        // assigned in noSideEffects\n        selectors: componentDefinition.selectors,\n        viewQuery: componentDefinition.viewQuery || null,\n        features: componentDefinition.features || null,\n        data: componentDefinition.data || {},\n        // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n        // next line. Also `None` should be 0 not 2.\n        encapsulation: componentDefinition.encapsulation || ViewEncapsulation.Emulated,\n        id: 'c',\n        styles: componentDefinition.styles || EMPTY_ARRAY,\n        _: /** @type {?} */ (null),\n    };\n    def._ = /** @type {?} */ (noSideEffects(function () {\n        /** @type {?} */\n        var directiveTypes = /** @type {?} */ ((componentDefinition.directives));\n        /** @type {?} */\n        var feature = componentDefinition.features;\n        /** @type {?} */\n        var pipeTypes = /** @type {?} */ ((componentDefinition.pipes));\n        def.id += _renderCompCount++;\n        def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n            def.outputs = invertObject(componentDefinition.outputs),\n            feature && feature.forEach(function (fn) { return fn(def); });\n        def.directiveDefs = directiveTypes ?\n            function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                .map(extractDirectiveDef); } :\n            null;\n        def.pipeDefs = pipeTypes ?\n            function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n            null;\n    }));\n    return /** @type {?} */ (def);\n}\n/**\n * @param {?} type\n * @return {?}\n */\nexport function extractDirectiveDef(type) {\n    /** @type {?} */\n    var def = getComponentDef(type) || getDirectiveDef(type);\n    if (ngDevMode && !def) {\n        throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n    }\n    return /** @type {?} */ ((def));\n}\n/**\n * @param {?} type\n * @return {?}\n */\nexport function extractPipeDef(type) {\n    /** @type {?} */\n    var def = getPipeDef(type);\n    if (ngDevMode && !def) {\n        throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n    }\n    return /** @type {?} */ ((def));\n}\n/**\n * @template T\n * @param {?} def\n * @return {?}\n */\nexport function defineNgModule(def) {\n    /** @type {?} */\n    var res = {\n        type: def.type,\n        bootstrap: def.bootstrap || EMPTY_ARRAY,\n        declarations: def.declarations || EMPTY_ARRAY,\n        imports: def.imports || EMPTY_ARRAY,\n        exports: def.exports || EMPTY_ARRAY,\n        transitiveCompileScopes: null,\n    };\n    return /** @type {?} */ (res);\n}\n/**\n * Inverts an inputs or outputs lookup such that the keys, which were the\n * minified keys, are part of the values, and the values are parsed so that\n * the publicName of the property is the new key\n *\n * e.g. for\n *\n * ```\n * class Comp {\n * \\@Input()\n *   propName1: string;\n *\n * \\@Input('publicName')\n *   propName2: number;\n * }\n * ```\n *\n * will be serialized as\n *\n * ```\n * {\n *   a0: 'propName1',\n *   b1: ['publicName', 'propName2'],\n * }\n * ```\n *\n * becomes\n *\n * ```\n * {\n *  'propName1': 'a0',\n *  'publicName': 'b1'\n * }\n * ```\n *\n * Optionally the function can take `secondary` which will result in:\n *\n * ```\n * {\n *  'propName1': 'a0',\n *  'propName2': 'b1'\n * }\n * ```\n *\n * @param {?} obj\n * @param {?=} secondary\n * @return {?}\n */\nfunction invertObject(obj, secondary) {\n    if (obj == null)\n        return EMPTY;\n    /** @type {?} */\n    var newLookup = {};\n    for (var minifiedKey in obj) {\n        if (obj.hasOwnProperty(minifiedKey)) {\n            /** @type {?} */\n            var publicName = obj[minifiedKey];\n            /** @type {?} */\n            var declaredName = publicName;\n            if (Array.isArray(publicName)) {\n                declaredName = publicName[1];\n                publicName = publicName[0];\n            }\n            newLookup[publicName] = minifiedKey;\n            if (secondary) {\n                (secondary[declaredName] = minifiedKey);\n            }\n        }\n    }\n    return newLookup;\n}\n/**\n * Create a base definition\n *\n * # Example\n * ```\n * class ShouldBeInherited {\n *   static ngBaseDef = defineBase({\n *      ...\n *   })\n * }\n * @template T\n * @param {?} baseDefinition The base definition parameters\n * @return {?}\n */\nexport function defineBase(baseDefinition) {\n    /** @type {?} */\n    var declaredInputs = /** @type {?} */ ({});\n    return {\n        inputs: invertObject(baseDefinition.inputs, declaredInputs),\n        declaredInputs: declaredInputs,\n        outputs: invertObject(baseDefinition.outputs),\n    };\n}\n/** *\n * Create a directive definition object.\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngDirectiveDef = defineDirective({\n *     ...\n *   });\n * }\n * ```\n  @type {?} */\nexport var defineDirective = /** @type {?} */ ((defineComponent));\n/**\n * Create a pipe definition object.\n *\n * # Example\n * ```\n * class MyPipe implements PipeTransform {\n *   // Generated by Angular Template Compiler\n *   static ngPipeDef = definePipe({\n *     ...\n *   });\n * }\n * ```\n * @template T\n * @param {?} pipeDef Pipe definition generated by the compiler\n * @return {?}\n */\nexport function definePipe(pipeDef) {\n    return /** @type {?} */ ((/** @type {?} */ ({\n        name: pipeDef.name,\n        factory: pipeDef.factory,\n        pure: pipeDef.pure !== false,\n        onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n    })));\n}\n/**\n * The following getter methods retrieve the definition form the type. Currently the retrieval\n * honors inheritance, but in the future we may change the rule to require that definitions are\n * explicit. This would require some sort of migration strategy.\n * @template T\n * @param {?} type\n * @return {?}\n */\nexport function getComponentDef(type) {\n    return (/** @type {?} */ (type))[NG_COMPONENT_DEF] || null;\n}\n/**\n * @template T\n * @param {?} type\n * @return {?}\n */\nexport function getDirectiveDef(type) {\n    return (/** @type {?} */ (type))[NG_DIRECTIVE_DEF] || null;\n}\n/**\n * @template T\n * @param {?} type\n * @return {?}\n */\nexport function getPipeDef(type) {\n    return (/** @type {?} */ (type))[NG_PIPE_DEF] || null;\n}\n/**\n * @template T\n * @param {?} type\n * @return {?}\n */\nexport function getNgModuleDef(type) {\n    return (/** @type {?} */ (type))[NG_MODULE_DEF] || null;\n}\n//# sourceMappingURL=definition.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A set of interfaces which are shared between `@angular/core` and `@angular/compiler` to allow\n * for late binding of `@angular/compiler` for JIT purposes.\n *\n * This file has two copies. Please ensure that they are in sync:\n *  - packages/compiler/src/compiler_facade_interface.ts             (master)\n *  - packages/core/src/render3/jit/compiler_facade_interface.ts     (copy)\n *\n * Please ensure that the two files are in sync using this command:\n * ```\n * cp packages/compiler/src/compiler_facade_interface.ts \\\n *    packages/core/src/render3/jit/compiler_facade_interface.ts\n * ```\n */\n/**\n * @record\n */\nexport function ExportedCompilerFacade() { }\n/** @type {?} */\nExportedCompilerFacade.prototype.ɵcompilerFacade;\n/**\n * @record\n */\nexport function CompilerFacade() { }\n/** @type {?} */\nCompilerFacade.prototype.compilePipe;\n/** @type {?} */\nCompilerFacade.prototype.compileInjectable;\n/** @type {?} */\nCompilerFacade.prototype.compileInjector;\n/** @type {?} */\nCompilerFacade.prototype.compileNgModule;\n/** @type {?} */\nCompilerFacade.prototype.compileDirective;\n/** @type {?} */\nCompilerFacade.prototype.compileComponent;\n/** @type {?} */\nCompilerFacade.prototype.R3ResolvedDependencyType;\n/**\n * @record\n */\nexport function CoreEnvironment() { }\n/** @typedef {?} */\nvar StringMap;\nexport { StringMap };\n/** @typedef {?} */\nvar StringMapWithRename;\nexport { StringMapWithRename };\n/** @typedef {?} */\nvar Provider;\nexport { Provider };\n/** @enum {number} */\nvar R3ResolvedDependencyType = {\n    Token: 0,\n    Attribute: 1,\n};\nexport { R3ResolvedDependencyType };\nR3ResolvedDependencyType[R3ResolvedDependencyType.Token] = 'Token';\nR3ResolvedDependencyType[R3ResolvedDependencyType.Attribute] = 'Attribute';\n/**\n * @record\n */\nexport function R3DependencyMetadataFacade() { }\n/** @type {?} */\nR3DependencyMetadataFacade.prototype.token;\n/** @type {?} */\nR3DependencyMetadataFacade.prototype.resolved;\n/** @type {?} */\nR3DependencyMetadataFacade.prototype.host;\n/** @type {?} */\nR3DependencyMetadataFacade.prototype.optional;\n/** @type {?} */\nR3DependencyMetadataFacade.prototype.self;\n/** @type {?} */\nR3DependencyMetadataFacade.prototype.skipSelf;\n/**\n * @record\n */\nexport function R3PipeMetadataFacade() { }\n/** @type {?} */\nR3PipeMetadataFacade.prototype.name;\n/** @type {?} */\nR3PipeMetadataFacade.prototype.type;\n/** @type {?} */\nR3PipeMetadataFacade.prototype.pipeName;\n/** @type {?} */\nR3PipeMetadataFacade.prototype.deps;\n/** @type {?} */\nR3PipeMetadataFacade.prototype.pure;\n/**\n * @record\n */\nexport function R3InjectableMetadataFacade() { }\n/** @type {?} */\nR3InjectableMetadataFacade.prototype.name;\n/** @type {?} */\nR3InjectableMetadataFacade.prototype.type;\n/** @type {?} */\nR3InjectableMetadataFacade.prototype.ctorDeps;\n/** @type {?} */\nR3InjectableMetadataFacade.prototype.providedIn;\n/** @type {?|undefined} */\nR3InjectableMetadataFacade.prototype.useClass;\n/** @type {?|undefined} */\nR3InjectableMetadataFacade.prototype.useFactory;\n/** @type {?|undefined} */\nR3InjectableMetadataFacade.prototype.useExisting;\n/** @type {?|undefined} */\nR3InjectableMetadataFacade.prototype.useValue;\n/** @type {?|undefined} */\nR3InjectableMetadataFacade.prototype.userDeps;\n/**\n * @record\n */\nexport function R3NgModuleMetadataFacade() { }\n/** @type {?} */\nR3NgModuleMetadataFacade.prototype.type;\n/** @type {?} */\nR3NgModuleMetadataFacade.prototype.bootstrap;\n/** @type {?} */\nR3NgModuleMetadataFacade.prototype.declarations;\n/** @type {?} */\nR3NgModuleMetadataFacade.prototype.imports;\n/** @type {?} */\nR3NgModuleMetadataFacade.prototype.exports;\n/** @type {?} */\nR3NgModuleMetadataFacade.prototype.emitInline;\n/**\n * @record\n */\nexport function R3InjectorMetadataFacade() { }\n/** @type {?} */\nR3InjectorMetadataFacade.prototype.name;\n/** @type {?} */\nR3InjectorMetadataFacade.prototype.type;\n/** @type {?} */\nR3InjectorMetadataFacade.prototype.deps;\n/** @type {?} */\nR3InjectorMetadataFacade.prototype.providers;\n/** @type {?} */\nR3InjectorMetadataFacade.prototype.imports;\n/**\n * @record\n */\nexport function R3DirectiveMetadataFacade() { }\n/** @type {?} */\nR3DirectiveMetadataFacade.prototype.name;\n/** @type {?} */\nR3DirectiveMetadataFacade.prototype.type;\n/** @type {?} */\nR3DirectiveMetadataFacade.prototype.typeArgumentCount;\n/** @type {?} */\nR3DirectiveMetadataFacade.prototype.typeSourceSpan;\n/** @type {?} */\nR3DirectiveMetadataFacade.prototype.deps;\n/** @type {?} */\nR3DirectiveMetadataFacade.prototype.selector;\n/** @type {?} */\nR3DirectiveMetadataFacade.prototype.queries;\n/** @type {?} */\nR3DirectiveMetadataFacade.prototype.host;\n/** @type {?} */\nR3DirectiveMetadataFacade.prototype.propMetadata;\n/** @type {?} */\nR3DirectiveMetadataFacade.prototype.lifecycle;\n/** @type {?} */\nR3DirectiveMetadataFacade.prototype.inputs;\n/** @type {?} */\nR3DirectiveMetadataFacade.prototype.outputs;\n/** @type {?} */\nR3DirectiveMetadataFacade.prototype.usesInheritance;\n/** @type {?} */\nR3DirectiveMetadataFacade.prototype.exportAs;\n/** @type {?} */\nR3DirectiveMetadataFacade.prototype.providers;\n/**\n * @record\n */\nexport function R3ComponentMetadataFacade() { }\n/** @type {?} */\nR3ComponentMetadataFacade.prototype.template;\n/** @type {?} */\nR3ComponentMetadataFacade.prototype.preserveWhitespaces;\n/** @type {?} */\nR3ComponentMetadataFacade.prototype.animations;\n/** @type {?} */\nR3ComponentMetadataFacade.prototype.viewQueries;\n/** @type {?} */\nR3ComponentMetadataFacade.prototype.pipes;\n/** @type {?} */\nR3ComponentMetadataFacade.prototype.directives;\n/** @type {?} */\nR3ComponentMetadataFacade.prototype.styles;\n/** @type {?} */\nR3ComponentMetadataFacade.prototype.encapsulation;\n/** @type {?} */\nR3ComponentMetadataFacade.prototype.viewProviders;\n/** @typedef {?} */\nvar ViewEncapsulation;\nexport { ViewEncapsulation };\n/**\n * @record\n */\nexport function R3QueryMetadataFacade() { }\n/** @type {?} */\nR3QueryMetadataFacade.prototype.propertyName;\n/** @type {?} */\nR3QueryMetadataFacade.prototype.first;\n/** @type {?} */\nR3QueryMetadataFacade.prototype.predicate;\n/** @type {?} */\nR3QueryMetadataFacade.prototype.descendants;\n/** @type {?} */\nR3QueryMetadataFacade.prototype.read;\n//# sourceMappingURL=compiler_facade_interface.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nimport { global } from '../../util';\nexport { R3ResolvedDependencyType } from './compiler_facade_interface';\n/**\n * @return {?}\n */\nexport function getCompilerFacade() {\n    /** @type {?} */\n    var globalNg = global[\"ng\"];\n    if (!globalNg || !globalNg.ɵcompilerFacade) {\n        throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n            \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n            \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n            \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n    }\n    return globalNg.ɵcompilerFacade;\n}\n//# sourceMappingURL=compiler_facade.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { makeParamDecorator } from '../util/decorators';\n/**\n * Type of the Inject decorator / constructor function.\n *\n * \\@publicApi\n * @record\n */\nexport function InjectDecorator() { }\n/** *\n * Inject decorator and metadata.\n *\n * \\@Annotation\n * \\@publicApi\n  @type {?} */\nexport var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Type of the Optional decorator / constructor function.\n *\n * \\@publicApi\n * @record\n */\nexport function OptionalDecorator() { }\n/** *\n * Optional decorator and metadata.\n *\n * \\@Annotation\n * \\@publicApi\n  @type {?} */\nexport var Optional = makeParamDecorator('Optional');\n/**\n * Type of the Self decorator / constructor function.\n *\n * \\@publicApi\n * @record\n */\nexport function SelfDecorator() { }\n/** *\n * Self decorator and metadata.\n *\n * \\@Annotation\n * \\@publicApi\n  @type {?} */\nexport var Self = makeParamDecorator('Self');\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * \\@publicApi\n * @record\n */\nexport function SkipSelfDecorator() { }\n/** *\n * SkipSelf decorator and metadata.\n *\n * \\@Annotation\n * \\@publicApi\n  @type {?} */\nexport var SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Type of the Host decorator / constructor function.\n *\n * \\@publicApi\n * @record\n */\nexport function HostDecorator() { }\n/** *\n * Host decorator and metadata.\n *\n * \\@Annotation\n * \\@publicApi\n  @type {?} */\nexport var Host = makeParamDecorator('Host');\n//# sourceMappingURL=metadata.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { stringify } from '../util';\nimport { getInjectableDef } from './defs';\nimport { Inject, Optional, Self, SkipSelf } from './metadata';\n/** @enum {number} */\nvar InjectFlags = {\n    // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n    Default: 0,\n    /**\n       * Specifies that an injector should retrieve a dependency from any injector until reaching the\n       * host element of the current component. (Only used with Element Injector)\n       */\n    Host: 1,\n    /** Don't descend into ancestors of the node requesting injection. */\n    Self: 2,\n    /** Skip the node that is requesting injection. */\n    SkipSelf: 4,\n    /** Inject `defaultValue` instead if token not found. */\n    Optional: 8,\n};\nexport { InjectFlags };\nInjectFlags[InjectFlags.Default] = 'Default';\nInjectFlags[InjectFlags.Host] = 'Host';\nInjectFlags[InjectFlags.Self] = 'Self';\nInjectFlags[InjectFlags.SkipSelf] = 'SkipSelf';\nInjectFlags[InjectFlags.Optional] = 'Optional';\n/** *\n * Current injector value used by `inject`.\n * - `undefined`: it is an error to call `inject`\n * - `null`: `inject` can be called but there is no injector (limp-mode).\n * - Injector instance: Use the injector for resolution.\n  @type {?} */\nvar _currentInjector = undefined;\n/**\n * @param {?} injector\n * @return {?}\n */\nexport function setCurrentInjector(injector) {\n    /** @type {?} */\n    var former = _currentInjector;\n    _currentInjector = injector;\n    return former;\n}\n/** *\n * Current implementation of inject.\n *\n * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n * way for two reasons:\n *  1. `Injector` should not depend on ivy logic.\n *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n  @type {?} */\nvar _injectImplementation;\n/**\n * Sets the current inject implementation.\n * @param {?} impl\n * @return {?}\n */\nexport function setInjectImplementation(impl) {\n    /** @type {?} */\n    var previous = _injectImplementation;\n    _injectImplementation = impl;\n    return previous;\n}\n/**\n * @template T\n * @param {?} token\n * @param {?=} flags\n * @return {?}\n */\nexport function injectInjectorOnly(token, flags) {\n    if (flags === void 0) { flags = InjectFlags.Default; }\n    if (_currentInjector === undefined) {\n        throw new Error(\"inject() must be called from an injection context\");\n    }\n    else if (_currentInjector === null) {\n        return injectRootLimpMode(token, undefined, flags);\n    }\n    else {\n        return _currentInjector.get(token, flags & InjectFlags.Optional ? null : undefined, flags);\n    }\n}\n/**\n * @template T\n * @param {?} token\n * @param {?=} flags\n * @return {?}\n */\nexport function inject(token, flags) {\n    if (flags === void 0) { flags = InjectFlags.Default; }\n    return (_injectImplementation || injectInjectorOnly)(token, flags);\n}\n/**\n * Injects `root` tokens in limp mode.\n *\n * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n * `InjectableDef`.\n * @template T\n * @param {?} token\n * @param {?} notFoundValue\n * @param {?} flags\n * @return {?}\n */\nexport function injectRootLimpMode(token, notFoundValue, flags) {\n    /** @type {?} */\n    var injectableDef = getInjectableDef(token);\n    if (injectableDef && injectableDef.providedIn == 'root') {\n        return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n            injectableDef.value;\n    }\n    if (flags & InjectFlags.Optional)\n        return null;\n    if (notFoundValue !== undefined)\n        return notFoundValue;\n    throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n}\n/**\n * @param {?} types\n * @return {?}\n */\nexport function injectArgs(types) {\n    /** @type {?} */\n    var args = [];\n    for (var i = 0; i < types.length; i++) {\n        /** @type {?} */\n        var arg = types[i];\n        if (Array.isArray(arg)) {\n            if (arg.length === 0) {\n                throw new Error('Arguments array must have arguments.');\n            }\n            /** @type {?} */\n            var type = undefined;\n            /** @type {?} */\n            var flags = InjectFlags.Default;\n            for (var j = 0; j < arg.length; j++) {\n                /** @type {?} */\n                var meta = arg[j];\n                if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                    flags |= InjectFlags.Optional;\n                }\n                else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                    flags |= InjectFlags.SkipSelf;\n                }\n                else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                    flags |= InjectFlags.Self;\n                }\n                else if (meta instanceof Inject) {\n                    type = meta.token;\n                }\n                else {\n                    type = meta;\n                }\n            }\n            args.push(inject(/** @type {?} */ ((type)), flags));\n        }\n        else {\n            args.push(inject(arg));\n        }\n    }\n    return args;\n}\n//# sourceMappingURL=injector_compatibility.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { getComponentDef, getNgModuleDef } from './definition';\n/**\n * @param {?} actual\n * @param {?} msg\n * @return {?}\n */\nexport function assertNumber(actual, msg) {\n    if (typeof actual != 'number') {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} msg\n * @return {?}\n */\nexport function assertEqual(actual, expected, msg) {\n    if (actual != expected) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} msg\n * @return {?}\n */\nexport function assertNotEqual(actual, expected, msg) {\n    if (actual == expected) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} msg\n * @return {?}\n */\nexport function assertSame(actual, expected, msg) {\n    if (actual !== expected) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} msg\n * @return {?}\n */\nexport function assertLessThan(actual, expected, msg) {\n    if (actual >= expected) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} msg\n * @return {?}\n */\nexport function assertGreaterThan(actual, expected, msg) {\n    if (actual <= expected) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} msg\n * @return {?}\n */\nexport function assertNotDefined(actual, msg) {\n    if (actual != null) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} msg\n * @return {?}\n */\nexport function assertDefined(actual, msg) {\n    if (actual == null) {\n        throwError(msg);\n    }\n}\n/**\n * @param {?} actual\n * @param {?=} msg\n * @return {?}\n */\nexport function assertComponentType(actual, msg) {\n    if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n    if (!getComponentDef(actual)) {\n        throwError(msg);\n    }\n}\n/**\n * @param {?} actual\n * @param {?=} msg\n * @return {?}\n */\nexport function assertNgModuleType(actual, msg) {\n    if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n    if (!getNgModuleDef(actual)) {\n        throwError(msg);\n    }\n}\n/**\n * @param {?} msg\n * @return {?}\n */\nfunction throwError(msg) {\n    // tslint:disable-next-line\n    debugger; // Left intentionally for better debugger experience.\n    throw new Error(\"ASSERTION ERROR: \" + msg);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function assertDomNode(node) {\n    assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n}\n/**\n * @param {?} isParent\n * @return {?}\n */\nexport function assertPreviousIsParent(isParent) {\n    assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n}\n/**\n * @param {?} tNode\n * @return {?}\n */\nexport function assertHasParent(tNode) {\n    assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n}\n/**\n * @param {?} lView\n * @param {?} index\n * @param {?=} arr\n * @return {?}\n */\nexport function assertDataNext(lView, index, arr) {\n    if (arr == null)\n        arr = lView;\n    assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nexport function assertDataInRange(arr, index) {\n    assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n}\n//# sourceMappingURL=assert.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nexport var TNODE = 8;\n/** @type {?} */\nexport var PARENT_INJECTOR = 8;\n/** @type {?} */\nexport var INJECTOR_SIZE = 9;\n/**\n * Represents a relative location of parent injector.\n *\n * The interfaces encodes number of parents `LView`s to traverse and index in the `LView`\n * pointing to the parent injector.\n * @record\n */\nexport function RelativeInjectorLocation() { }\n/** @type {?} */\nRelativeInjectorLocation.prototype.__brand__;\n/** @enum {number} */\nvar RelativeInjectorLocationFlags = {\n    InjectorIndexMask: 32767,\n    AcrossHostBoundary: 32768,\n    ViewOffsetShift: 16,\n    NO_PARENT: -1,\n};\nexport { RelativeInjectorLocationFlags };\n/** @type {?} */\nexport var NO_PARENT_INJECTOR = /** @type {?} */ (-1);\n/**\n * Factory for creating instances of injectors in the NodeInjector.\n *\n * This factory is complicated by the fact that it can resolve `multi` factories as well.\n *\n * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n * - One without `multi` support (most common)\n * - One with `multi` values, (rare).\n *\n * Since VMs can cache up to 4 inline hidden classes this is OK.\n *\n * - Single factory: Only `resolving` and `factory` is defined.\n * - `providers` factory: `componentProviders` is a number and `index = -1`.\n * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n */\nvar /**\n * Factory for creating instances of injectors in the NodeInjector.\n *\n * This factory is complicated by the fact that it can resolve `multi` factories as well.\n *\n * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n * - One without `multi` support (most common)\n * - One with `multi` values, (rare).\n *\n * Since VMs can cache up to 4 inline hidden classes this is OK.\n *\n * - Single factory: Only `resolving` and `factory` is defined.\n * - `providers` factory: `componentProviders` is a number and `index = -1`.\n * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n */\nNodeInjectorFactory = /** @class */ (function () {\n    function NodeInjectorFactory(factory, /**\n           * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n           */\n    isViewProvider, injectImplementation) {\n        this.factory = factory;\n        /**\n         * Marker set to true during factory invocation to see if we get into recursive loop.\n         * Recursive loop causes an error to be displayed.\n         */\n        this.resolving = false;\n        this.canSeeViewProviders = isViewProvider;\n        this.injectImpl = injectImplementation;\n    }\n    return NodeInjectorFactory;\n}());\n/**\n * Factory for creating instances of injectors in the NodeInjector.\n *\n * This factory is complicated by the fact that it can resolve `multi` factories as well.\n *\n * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n * - One without `multi` support (most common)\n * - One with `multi` values, (rare).\n *\n * Since VMs can cache up to 4 inline hidden classes this is OK.\n *\n * - Single factory: Only `resolving` and `factory` is defined.\n * - `providers` factory: `componentProviders` is a number and `index = -1`.\n * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n */\nexport { NodeInjectorFactory };\nif (false) {\n    /**\n     * The inject implementation to be activated when using the factory.\n     * @type {?}\n     */\n    NodeInjectorFactory.prototype.injectImpl;\n    /**\n     * Marker set to true during factory invocation to see if we get into recursive loop.\n     * Recursive loop causes an error to be displayed.\n     * @type {?}\n     */\n    NodeInjectorFactory.prototype.resolving;\n    /**\n     * Marks that the token can see other Tokens declared in `viewProviders` on the same node.\n     * @type {?}\n     */\n    NodeInjectorFactory.prototype.canSeeViewProviders;\n    /**\n     * An array of factories to use in case of `multi` provider.\n     * @type {?}\n     */\n    NodeInjectorFactory.prototype.multi;\n    /**\n     * Number of `multi`-providers which belong to the component.\n     *\n     * This is needed because when multiple components and directives declare the `multi` provider\n     * they have to be concatenated in the correct order.\n     *\n     * Example:\n     *\n     * If we have a component and directive active an a single element as declared here\n     * ```\n     * component:\n     *   provides: [ {provide: String, useValue: 'component', multi: true} ],\n     *   viewProvides: [ {provide: String, useValue: 'componentView', multi: true} ],\n     *\n     * directive:\n     *   provides: [ {provide: String, useValue: 'directive', multi: true} ],\n     * ```\n     *\n     * Then the expected results are:\n     *\n     * ```\n     * providers: ['component', 'directive']\n     * viewProviders: ['component', 'componentView', 'directive']\n     * ```\n     *\n     * The way to think about it is that the `viewProviders` have been inserted after the component\n     * but before the directives, which is why we need to know how many `multi`s have been declared by\n     * the component.\n     * @type {?}\n     */\n    NodeInjectorFactory.prototype.componentProviders;\n    /**\n     * Current index of the Factory in the `data`. Needed for `viewProviders` and `providers` merging.\n     * See `providerFactory`.\n     * @type {?}\n     */\n    NodeInjectorFactory.prototype.index;\n    /**\n     * Because the same `multi` provider can be declared in `provides` and `viewProvides` it is\n     * possible for `viewProvides` to shadow the `provides`. For this reason we store the\n     * `provideFactory` of the `providers` so that `providers` can be extended with `viewProviders`.\n     *\n     * Example:\n     *\n     * Given:\n     * ```\n     * provides: [ {provide: String, useValue: 'all', multi: true} ],\n     * viewProvides: [ {provide: String, useValue: 'viewOnly', multi: true} ],\n     * ```\n     *\n     * We have to return `['all']` in case of content injection, but `['all', 'viewOnly']` in case\n     * of view injection. We further have to make sure that the shared instances (in our case\n     * `all`) are the exact same instance in both the content as well as the view injection. (We\n     * have to make sure that we don't double instantiate.) For this reason the `viewProvides`\n     * `Factory` has a pointer to the shadowed `provides` factory so that it can instantiate the\n     * `providers` (`['all']`) and then extend it with `viewProviders` (`['all'] + ['viewOnly'] =\n     * ['all', 'viewOnly']`).\n     * @type {?}\n     */\n    NodeInjectorFactory.prototype.providerFactory;\n    /**\n     * Factory to invoke in order to create a new instance.\n     * @type {?}\n     */\n    NodeInjectorFactory.prototype.factory;\n}\n/** @type {?} */\nvar FactoryPrototype = NodeInjectorFactory.prototype;\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isFactory(obj) {\n    // See: https://jsperf.com/instanceof-vs-getprototypeof\n    return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n}\n/** @type {?} */\nexport var unusedValueExportToPlacateAjd = 1;\n//# sourceMappingURL=injector.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nexport var TVIEW = 0;\n/** @type {?} */\nexport var FLAGS = 1;\n/** @type {?} */\nexport var PARENT = 2;\n/** @type {?} */\nexport var NEXT = 3;\n/** @type {?} */\nexport var QUERIES = 4;\n/** @type {?} */\nexport var HOST = 5;\n/** @type {?} */\nexport var HOST_NODE = 6;\n/** @type {?} */\nexport var BINDING_INDEX = 7;\n/** @type {?} */\nexport var CLEANUP = 8;\n/** @type {?} */\nexport var CONTEXT = 9;\n/** @type {?} */\nexport var INJECTOR = 10;\n/** @type {?} */\nexport var RENDERER_FACTORY = 11;\n/** @type {?} */\nexport var RENDERER = 12;\n/** @type {?} */\nexport var SANITIZER = 13;\n/** @type {?} */\nexport var TAIL = 14;\n/** @type {?} */\nexport var CONTAINER_INDEX = 15;\n/** @type {?} */\nexport var CONTENT_QUERIES = 16;\n/** @type {?} */\nexport var DECLARATION_VIEW = 17;\n/** *\n * Size of LView's header. Necessary to adjust for it when setting slots.\n  @type {?} */\nexport var HEADER_OFFSET = 18;\n/**\n * @record\n */\nexport function OpaqueViewState() { }\n/** @type {?} */\nOpaqueViewState.prototype.__brand__;\n/**\n * `LView` stores all of the information needed to process the instructions as\n * they are invoked from the template. Each embedded view and component view has its\n * own `LView`. When processing a particular view, we set the `viewData` to that\n * `LView`. When that view is done processing, the `viewData` is set back to\n * whatever the original `viewData` was before (the parent `LView`).\n *\n * Keeping separate state for each view facilities view insertion / deletion, so we\n * don't have to edit the data array based on which views are present.\n * @record\n */\nexport function LView() { }\n/** @enum {number} */\nvar LViewFlags = {\n    /**\n       * Whether or not the view is in creationMode.\n       *\n       * This must be stored in the view rather than using `data` as a marker so that\n       * we can properly support embedded views. Otherwise, when exiting a child view\n       * back into the parent view, `data` will be defined and `creationMode` will be\n       * improperly reported as false.\n       */\n    CreationMode: 1,\n    /** Whether this view has default change detection strategy (checks always) or onPush */\n    CheckAlways: 2,\n    /** Whether or not this view is currently dirty (needing check) */\n    Dirty: 4,\n    /** Whether or not this view is currently attached to change detection tree. */\n    Attached: 8,\n    /**\n       *  Whether or not the init hooks have run.\n       *\n       * If on, the init hooks haven't yet been run and should be executed by the first component that\n       * runs OR the first cR() instruction that runs (so inits are run for the top level view before\n       * any embedded views).\n       */\n    RunInit: 16,\n    /** Whether or not this view is destroyed. */\n    Destroyed: 32,\n    /** Whether or not this view is the root view */\n    IsRoot: 64,\n};\nexport { LViewFlags };\n/**\n * The static data for an LView (shared between all templates of a\n * given type).\n *\n * Stored on the template function as ngPrivateData.\n * @record\n */\nexport function TView() { }\n/**\n * ID for inline views to determine whether a view is the same as the previous view\n * in a certain position. If it's not, we know the new view needs to be inserted\n * and the one that exists needs to be removed (e.g. if/else statements)\n *\n * If this is -1, then this is a component view or a dynamically created view.\n * @type {?}\n */\nTView.prototype.id;\n/**\n * This is a blueprint used to generate LView instances for this TView. Copying this\n * blueprint is faster than creating a new LView from scratch.\n * @type {?}\n */\nTView.prototype.blueprint;\n/**\n * The template function used to refresh the view of dynamically created views\n * and components. Will be null for inline views.\n * @type {?}\n */\nTView.prototype.template;\n/**\n * A function containing query-related instructions.\n * @type {?}\n */\nTView.prototype.viewQuery;\n/**\n * Pointer to the `TNode` that represents the root of the view.\n *\n * If this is a `TNode` for an `LViewNode`, this is an embedded view of a container.\n * We need this pointer to be able to efficiently find this node when inserting the view\n * into an anchor.\n *\n * If this is a `TElementNode`, this is the view of a root component. It has exactly one\n * root TNode.\n *\n * If this is null, this is the view of a component that is not at root. We do not store\n * the host TNodes for child component views because they can potentially have several\n * different host TNodes, depending on where the component is being used. These host\n * TNodes cannot be shared (due to different indices, etc).\n * @type {?}\n */\nTView.prototype.node;\n/**\n * Whether or not this template has been processed.\n * @type {?}\n */\nTView.prototype.firstTemplatePass;\n/**\n * Static data equivalent of LView.data[]. Contains TNodes, PipeDefInternal or TI18n.\n * @type {?}\n */\nTView.prototype.data;\n/**\n * The binding start index is the index at which the data array\n * starts to store bindings only. Saving this value ensures that we\n * will begin reading bindings at the correct point in the array when\n * we are in update mode.\n * @type {?}\n */\nTView.prototype.bindingStartIndex;\n/**\n * The index where the \"expando\" section of `LView` begins. The expando\n * section contains injectors, directive instances, and host binding values.\n * Unlike the \"consts\" and \"vars\" sections of `LView`, the length of this\n * section cannot be calculated at compile-time because directives are matched\n * at runtime to preserve locality.\n *\n * We store this start index so we know where to start checking host bindings\n * in `setHostBindings`.\n * @type {?}\n */\nTView.prototype.expandoStartIndex;\n/**\n * Index of the host node of the first LView or LContainer beneath this LView in\n * the hierarchy.\n *\n * Necessary to store this so views can traverse through their nested views\n * to remove listeners and call onDestroy callbacks.\n *\n * For embedded views, we store the index of an LContainer's host rather than the first\n * LView to avoid managing splicing when views are added/removed.\n * @type {?}\n */\nTView.prototype.childIndex;\n/**\n * A reference to the first child node located in the view.\n * @type {?}\n */\nTView.prototype.firstChild;\n/**\n * Set of instructions used to process host bindings efficiently.\n *\n * See VIEW_DATA.md for more information.\n * @type {?}\n */\nTView.prototype.expandoInstructions;\n/**\n * Full registry of directives and components that may be found in this view.\n *\n * It's necessary to keep a copy of the full def list on the TView so it's possible\n * to render template functions without a host component.\n * @type {?}\n */\nTView.prototype.directiveRegistry;\n/**\n * Full registry of pipes that may be found in this view.\n *\n * The property is either an array of `PipeDefs`s or a function which returns the array of\n * `PipeDefs`s. The function is necessary to be able to support forward declarations.\n *\n * It's necessary to keep a copy of the full def list on the TView so it's possible\n * to render template functions without a host component.\n * @type {?}\n */\nTView.prototype.pipeRegistry;\n/**\n * Array of ngOnInit and ngDoCheck hooks that should be executed for this view in\n * creation mode.\n *\n * Even indices: Directive index\n * Odd indices: Hook function\n * @type {?}\n */\nTView.prototype.initHooks;\n/**\n * Array of ngDoCheck hooks that should be executed for this view in update mode.\n *\n * Even indices: Directive index\n * Odd indices: Hook function\n * @type {?}\n */\nTView.prototype.checkHooks;\n/**\n * Array of ngAfterContentInit and ngAfterContentChecked hooks that should be executed\n * for this view in creation mode.\n *\n * Even indices: Directive index\n * Odd indices: Hook function\n * @type {?}\n */\nTView.prototype.contentHooks;\n/**\n * Array of ngAfterContentChecked hooks that should be executed for this view in update\n * mode.\n *\n * Even indices: Directive index\n * Odd indices: Hook function\n * @type {?}\n */\nTView.prototype.contentCheckHooks;\n/**\n * Array of ngAfterViewInit and ngAfterViewChecked hooks that should be executed for\n * this view in creation mode.\n *\n * Even indices: Directive index\n * Odd indices: Hook function\n * @type {?}\n */\nTView.prototype.viewHooks;\n/**\n * Array of ngAfterViewChecked hooks that should be executed for this view in\n * update mode.\n *\n * Even indices: Directive index\n * Odd indices: Hook function\n * @type {?}\n */\nTView.prototype.viewCheckHooks;\n/**\n * Array of ngOnDestroy hooks that should be executed when this view is destroyed.\n *\n * Even indices: Directive index\n * Odd indices: Hook function\n * @type {?}\n */\nTView.prototype.destroyHooks;\n/**\n * Array of pipe ngOnDestroy hooks that should be executed when this view is destroyed.\n *\n * Even indices: Index of pipe in data\n * Odd indices: Hook function\n *\n * These must be stored separately from directive destroy hooks because their contexts\n * are stored in data.\n * @type {?}\n */\nTView.prototype.pipeDestroyHooks;\n/**\n * When a view is destroyed, listeners need to be released and outputs need to be\n * unsubscribed. This cleanup array stores both listener data (in chunks of 4)\n * and output data (in chunks of 2) for a particular view. Combining the arrays\n * saves on memory (70 bytes per array) and on a few bytes of code size (for two\n * separate for loops).\n *\n * If it's a native DOM listener being stored:\n * 1st index is: event name to remove\n * 2nd index is: index of native element in LView.data[]\n * 3rd index is: index of wrapped listener function in LView.cleanupInstances[]\n * 4th index is: useCapture boolean\n *\n * If it's a renderer2 style listener or ViewRef destroy hook being stored:\n * 1st index is: index of the cleanup function in LView.cleanupInstances[]\n * 2nd index is: null\n *\n * If it's an output subscription or query list destroy hook:\n * 1st index is: output unsubscribe function / query list destroy function\n * 2nd index is: index of function context in LView.cleanupInstances[]\n * @type {?}\n */\nTView.prototype.cleanup;\n/**\n * A list of element indices for child components that will need to be\n * refreshed when the current view has finished its check. These indices have\n * already been adjusted for the HEADER_OFFSET.\n *\n * @type {?}\n */\nTView.prototype.components;\n/**\n * A list of indices for child directives that have content queries.\n *\n * Even indices: Directive indices\n * Odd indices: Starting index of content queries (stored in CONTENT_QUERIES) for this directive\n * @type {?}\n */\nTView.prototype.contentQueries;\n/** @enum {number} */\nvar RootContextFlags = {\n    Empty: 0, DetectChanges: 1, FlushPlayers: 2,\n};\nexport { RootContextFlags };\n/**\n * RootContext contains information which is shared for all components which\n * were bootstrapped with {\\@link renderComponent}.\n * @record\n */\nexport function RootContext() { }\n/**\n * A function used for scheduling change detection in the future. Usually\n * this is `requestAnimationFrame`.\n * @type {?}\n */\nRootContext.prototype.scheduler;\n/**\n * A promise which is resolved when all components are considered clean (not dirty).\n *\n * This promise is overwritten every time a first call to {\\@link markDirty} is invoked.\n * @type {?}\n */\nRootContext.prototype.clean;\n/**\n * RootComponents - The components that were instantiated by the call to\n * {\\@link renderComponent}.\n * @type {?}\n */\nRootContext.prototype.components;\n/**\n * The player flushing handler to kick off all animations\n * @type {?}\n */\nRootContext.prototype.playerHandler;\n/**\n * What render-related operations to run once a scheduler has been set\n * @type {?}\n */\nRootContext.prototype.flags;\n/** @typedef {?} */\nvar HookData;\nexport { HookData };\n/** @typedef {?} */\nvar TData;\nexport { TData };\n/** @type {?} */\nexport var unusedValueExportToPlacateAjd = 1;\n//# sourceMappingURL=view.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { assertDefined, assertEqual } from './assert';\n/**\n * @param {?} tNode\n * @param {?} type\n * @return {?}\n */\nexport function assertNodeType(tNode, type) {\n    assertDefined(tNode, 'should be called with a TNode');\n    assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n}\n/**\n * @param {?} tNode\n * @param {...?} types\n * @return {?}\n */\nexport function assertNodeOfPossibleTypes(tNode) {\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        types[_i - 1] = arguments[_i];\n    }\n    assertDefined(tNode, 'should be called with a TNode');\n    /** @type {?} */\n    var found = types.some(function (type) { return tNode.type === type; });\n    assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction typeName(type) {\n    if (type == 1 /* Projection */)\n        return 'Projection';\n    if (type == 0 /* Container */)\n        return 'Container';\n    if (type == 2 /* View */)\n        return 'View';\n    if (type == 3 /* Element */)\n        return 'Element';\n    if (type == 4 /* ElementContainer */)\n        return 'ElementContainer';\n    return '<unknown>';\n}\n//# sourceMappingURL=node_assert.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { assertEqual } from './assert';\nimport { FLAGS } from './interfaces/view';\n/**\n * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n * TView.initHooks during directiveCreate.\n *\n * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n * directive index), then saved in the even indices of the initHooks array. The odd indices\n * hold the hook functions themselves.\n *\n * @param {?} index The index of the directive in LView\n * @param {?} onInit\n * @param {?} doCheck\n * @param {?} tView The current TView\n * @return {?}\n */\nexport function queueInitHooks(index, onInit, doCheck, tView) {\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n    if (onInit) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n    }\n    if (doCheck) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n        (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n    }\n}\n/**\n * Loops through the directives on a node and queues all their hooks except ngOnInit\n * and ngDoCheck, which are queued separately in directiveCreate.\n * @param {?} flags\n * @param {?} tView\n * @return {?}\n */\nexport function queueLifecycleHooks(flags, tView) {\n    if (tView.firstTemplatePass) {\n        /** @type {?} */\n        var start = flags >> 16 /* DirectiveStartingIndexShift */;\n        /** @type {?} */\n        var count = flags & 4095 /* DirectiveCountMask */;\n        /** @type {?} */\n        var end = start + count;\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = start; i < end; i++) {\n            /** @type {?} */\n            var def = /** @type {?} */ (tView.data[i]);\n            queueContentHooks(def, tView, i);\n            queueViewHooks(def, tView, i);\n            queueDestroyHooks(def, tView, i);\n        }\n    }\n}\n/**\n * Queues afterContentInit and afterContentChecked hooks on TView\n * @param {?} def\n * @param {?} tView\n * @param {?} i\n * @return {?}\n */\nfunction queueContentHooks(def, tView, i) {\n    if (def.afterContentInit) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n    }\n    if (def.afterContentChecked) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n        (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n    }\n}\n/**\n * Queues afterViewInit and afterViewChecked hooks on TView\n * @param {?} def\n * @param {?} tView\n * @param {?} i\n * @return {?}\n */\nfunction queueViewHooks(def, tView, i) {\n    if (def.afterViewInit) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n    }\n    if (def.afterViewChecked) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n        (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n    }\n}\n/**\n * Queues onDestroy hooks on TView\n * @param {?} def\n * @param {?} tView\n * @param {?} i\n * @return {?}\n */\nfunction queueDestroyHooks(def, tView, i) {\n    if (def.onDestroy != null) {\n        (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n    }\n}\n/**\n * Calls onInit and doCheck calls if they haven't already been called.\n *\n * @param {?} currentView The current view\n * @param {?} tView\n * @param {?} creationMode\n * @return {?}\n */\nexport function executeInitHooks(currentView, tView, creationMode) {\n    if (currentView[FLAGS] & 16 /* RunInit */) {\n        executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n        currentView[FLAGS] &= ~16 /* RunInit */;\n    }\n}\n/**\n * Iterates over afterViewInit and afterViewChecked functions and calls them.\n *\n * @param {?} data\n * @param {?} allHooks\n * @param {?} checkHooks\n * @param {?} creationMode\n * @return {?}\n */\nexport function executeHooks(data, allHooks, checkHooks, creationMode) {\n    /** @type {?} */\n    var hooksToCall = creationMode ? allHooks : checkHooks;\n    if (hooksToCall) {\n        callHooks(data, hooksToCall);\n    }\n}\n/**\n * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n * creation mode.\n *\n * @param {?} currentView The current view\n * @param {?} arr The array in which the hooks are found\n * @return {?}\n */\nexport function callHooks(currentView, arr) {\n    for (var i = 0; i < arr.length; i += 2) {\n        (/** @type {?} */ (arr[i + 1])).call(currentView[/** @type {?} */ (arr[i])]);\n    }\n}\n//# sourceMappingURL=hooks.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { HOST, NEXT, PARENT, QUERIES } from './view';\n/** *\n * Below are constants for LContainer indices to help us look up LContainer members\n * without having to remember the specific indices.\n * Uglify will inline these when minifying so there shouldn't be a cost.\n  @type {?} */\nexport var ACTIVE_INDEX = 0;\n/** @type {?} */\nexport var VIEWS = 1;\n/** @type {?} */\nexport var NATIVE = 6;\n/** @type {?} */\nexport var RENDER_PARENT = 7;\n/**\n * The state associated with a container.\n *\n * This is an array so that its structure is closer to LView. This helps\n * when traversing the view tree (which is a mix of containers and component\n * views), so we can jump to viewOrContainer[NEXT] in the same way regardless\n * of type.\n * @record\n */\nexport function LContainer() { }\n/** @type {?} */\nexport var unusedValueExportToPlacateAjd = 1;\n//# sourceMappingURL=container.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** *\n * This property will be monkey-patched on elements, components and directives\n  @type {?} */\nexport var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n/**\n * The internal view context which is specific to a given DOM element, directive or\n * component instance. Each value in here (besides the LView and element node details)\n * can be present, null or undefined. If undefined then it implies the value has not been\n * looked up yet, otherwise, if null, then a lookup was executed and nothing was found.\n *\n * Each value will get filled when the respective value is examined within the getContext\n * function. The component, element and each directive instance will share the same instance\n * of the context.\n * @record\n */\nexport function LContext() { }\n/**\n * The component's parent view data.\n * @type {?}\n */\nLContext.prototype.lView;\n/**\n * The index instance of the node.\n * @type {?}\n */\nLContext.prototype.nodeIndex;\n/**\n * The instance of the DOM node that is attached to the lNode.\n * @type {?}\n */\nLContext.prototype.native;\n/**\n * The instance of the Component node.\n * @type {?}\n */\nLContext.prototype.component;\n/**\n * The list of active directives that exist on this element.\n * @type {?}\n */\nLContext.prototype.directives;\n/**\n * The map of local references (local reference name => element or directive instance) that exist\n * on this element.\n * @type {?}\n */\nLContext.prototype.localRefs;\n//# sourceMappingURL=context.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { global } from '../util';\nimport { assertDataInRange, assertDefined } from './assert';\nimport { ACTIVE_INDEX } from './interfaces/container';\nimport { MONKEY_PATCH_KEY_NAME } from './interfaces/context';\nimport { NO_PARENT_INJECTOR } from './interfaces/injector';\nimport { CONTEXT, DECLARATION_VIEW, FLAGS, HEADER_OFFSET, HOST, HOST_NODE, PARENT, TVIEW } from './interfaces/view';\n/**\n * Returns whether the values are different from a change detection stand point.\n *\n * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function isDifferent(a, b) {\n    // NaN is the only value that is not equal to itself so the first\n    // test checks if both a and b are not NaN\n    return !(a !== a && b !== b) && a !== b;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function stringify(value) {\n    if (typeof value == 'function')\n        return value.name || value;\n    if (typeof value == 'string')\n        return value;\n    if (value == null)\n        return '';\n    return '' + value;\n}\n/**\n * Flattens an array in non-recursive way. Input arrays are not modified.\n * @param {?} list\n * @return {?}\n */\nexport function flatten(list) {\n    /** @type {?} */\n    var result = [];\n    /** @type {?} */\n    var i = 0;\n    while (i < list.length) {\n        /** @type {?} */\n        var item = list[i];\n        if (Array.isArray(item)) {\n            if (item.length > 0) {\n                list = item.concat(list.slice(i + 1));\n                i = 0;\n            }\n            else {\n                i++;\n            }\n        }\n        else {\n            result.push(item);\n            i++;\n        }\n    }\n    return result;\n}\n/**\n * Retrieves a value from any `LView` or `TData`.\n * @template T\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function loadInternal(view, index) {\n    ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n    return view[index + HEADER_OFFSET];\n}\n/**\n * Takes the value of a slot in `LView` and returns the element node.\n *\n * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n * it might be wrapped in a styling context. Or if that node has a directive that injects\n * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n * it will be wrapped in LView. It could even have all three, so we keep looping\n * until we find something that isn't an array.\n *\n * @param {?} value The initial value in `LView`\n * @return {?}\n */\nexport function readElementValue(value) {\n    while (Array.isArray(value)) {\n        value = /** @type {?} */ (value[HOST]);\n    }\n    return value;\n}\n/**\n * Retrieves an element value from the provided `viewData`, by unwrapping\n * from any containers, component views, or style contexts.\n * @param {?} index\n * @param {?} lView\n * @return {?}\n */\nexport function getNativeByIndex(index, lView) {\n    return readElementValue(lView[index + HEADER_OFFSET]);\n}\n/**\n * @param {?} tNode\n * @param {?} hostView\n * @return {?}\n */\nexport function getNativeByTNode(tNode, hostView) {\n    return readElementValue(hostView[tNode.index]);\n}\n/**\n * @param {?} index\n * @param {?} view\n * @return {?}\n */\nexport function getTNode(index, view) {\n    return /** @type {?} */ (view[TVIEW].data[index + HEADER_OFFSET]);\n}\n/**\n * @param {?} nodeIndex\n * @param {?} hostView\n * @return {?}\n */\nexport function getComponentViewByIndex(nodeIndex, hostView) {\n    /** @type {?} */\n    var slotValue = hostView[nodeIndex];\n    return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n}\n/**\n * @param {?} tNode\n * @return {?}\n */\nexport function isContentQueryHost(tNode) {\n    return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n}\n/**\n * @param {?} tNode\n * @return {?}\n */\nexport function isComponent(tNode) {\n    return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n}\n/**\n * @template T\n * @param {?} def\n * @return {?}\n */\nexport function isComponentDef(def) {\n    return (/** @type {?} */ (def)).template !== null;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isLContainer(value) {\n    // Styling contexts are also arrays, but their first index contains an element node\n    return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n}\n/**\n * @param {?} target\n * @return {?}\n */\nexport function isRootView(target) {\n    return (target[FLAGS] & 64 /* IsRoot */) !== 0;\n}\n/**\n * Retrieve the root view from any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param {?} target\n * @return {?}\n */\nexport function getRootView(target) {\n    ngDevMode && assertDefined(target, 'component');\n    /** @type {?} */\n    var lView = Array.isArray(target) ? (/** @type {?} */ (target)) : /** @type {?} */ ((readPatchedLView(target)));\n    while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n        lView = /** @type {?} */ ((lView[PARENT]));\n    }\n    return lView;\n}\n/**\n * @param {?} viewOrComponent\n * @return {?}\n */\nexport function getRootContext(viewOrComponent) {\n    /** @type {?} */\n    var rootView = getRootView(viewOrComponent);\n    ngDevMode &&\n        assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n    return /** @type {?} */ (rootView[CONTEXT]);\n}\n/**\n * Returns the monkey-patch value data present on the target (which could be\n * a component, directive or a DOM node).\n * @param {?} target\n * @return {?}\n */\nexport function readPatchedData(target) {\n    return target[MONKEY_PATCH_KEY_NAME];\n}\n/**\n * @param {?} target\n * @return {?}\n */\nexport function readPatchedLView(target) {\n    /** @type {?} */\n    var value = readPatchedData(target);\n    if (value) {\n        return Array.isArray(value) ? value : (/** @type {?} */ (value)).lView;\n    }\n    return null;\n}\n/**\n * @param {?} parentLocation\n * @return {?}\n */\nexport function hasParentInjector(parentLocation) {\n    return parentLocation !== NO_PARENT_INJECTOR;\n}\n/**\n * @param {?} parentLocation\n * @return {?}\n */\nexport function getParentInjectorIndex(parentLocation) {\n    return (/** @type {?} */ ((parentLocation))) & 32767 /* InjectorIndexMask */;\n}\n/**\n * @param {?} parentLocation\n * @return {?}\n */\nexport function getParentInjectorViewOffset(parentLocation) {\n    return (/** @type {?} */ ((parentLocation))) >> 16 /* ViewOffsetShift */;\n}\n/**\n * Unwraps a parent injector location number to find the view offset from the current injector,\n * then walks up the declaration view tree until the view is found that contains the parent\n * injector.\n *\n * @param {?} location The location of the parent injector, which contains the view offset\n * @param {?} startView The LView instance from which to start walking up the view tree\n * @return {?} The LView instance that contains the parent injector\n */\nexport function getParentInjectorView(location, startView) {\n    /** @type {?} */\n    var viewOffset = getParentInjectorViewOffset(location);\n    /** @type {?} */\n    var parentView = startView;\n    // For most cases, the parent injector can be found on the host node (e.g. for component\n    // or container), but we must keep the loop here to support the rarer case of deeply nested\n    // <ng-template> tags or inline views, where the parent injector might live many views\n    // above the child injector.\n    while (viewOffset > 0) {\n        parentView = /** @type {?} */ ((parentView[DECLARATION_VIEW]));\n        viewOffset--;\n    }\n    return parentView;\n}\n/**\n * Unwraps a parent injector location number to find the view offset from the current injector,\n * then walks up the declaration view tree until the TNode of the parent injector is found.\n *\n * @param {?} location The location of the parent injector, which contains the view offset\n * @param {?} startView The LView instance from which to start walking up the view tree\n * @param {?} startTNode The TNode instance of the starting element\n * @return {?} The TNode of the parent injector\n */\nexport function getParentInjectorTNode(location, startView, startTNode) {\n    if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n        /** @type {?} */\n        var injectorIndex = startTNode.parent.injectorIndex;\n        /** @type {?} */\n        var parentTNode_1 = startTNode.parent;\n        while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n            parentTNode_1 = parentTNode_1.parent;\n        }\n        return parentTNode_1;\n    }\n    /** @type {?} */\n    var viewOffset = getParentInjectorViewOffset(location);\n    /** @type {?} */\n    var parentView = startView;\n    /** @type {?} */\n    var parentTNode = /** @type {?} */ (startView[HOST_NODE]);\n    // view offset is superior to 1\n    while (viewOffset > 1) {\n        parentView = /** @type {?} */ ((parentView[DECLARATION_VIEW]));\n        parentTNode = /** @type {?} */ (parentView[HOST_NODE]);\n        viewOffset--;\n    }\n    return parentTNode;\n}\n/** @type {?} */\nexport var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n    setTimeout // everything else\n).bind(global);\n/**\n * Equivalent to ES6 spread, add each item to an array.\n *\n * @param {?} items The items to add\n * @param {?} arr The array to which you want to add the items\n * @return {?}\n */\nexport function addAllToArray(items, arr) {\n    for (var i = 0; i < items.length; i++) {\n        arr.push(items[i]);\n    }\n}\n//# sourceMappingURL=util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { assertDefined } from './assert';\nimport { executeHooks } from './hooks';\nimport { BINDING_INDEX, CONTEXT, DECLARATION_VIEW, FLAGS, HOST_NODE, QUERIES, TVIEW } from './interfaces/view';\nimport { isContentQueryHost } from './util';\n/** *\n * Store the element depth count. This is used to identify the root elements of the template\n * so that we can than attach `LView` to only those elements.\n  @type {?} */\nvar elementDepthCount;\n/**\n * @return {?}\n */\nexport function getElementDepthCount() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return elementDepthCount;\n}\n/**\n * @return {?}\n */\nexport function increaseElementDepthCount() {\n    elementDepthCount++;\n}\n/**\n * @return {?}\n */\nexport function decreaseElementDepthCount() {\n    elementDepthCount--;\n}\n/** @type {?} */\nvar currentDirectiveDef = null;\n/**\n * @return {?}\n */\nexport function getCurrentDirectiveDef() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return currentDirectiveDef;\n}\n/**\n * @param {?} def\n * @return {?}\n */\nexport function setCurrentDirectiveDef(def) {\n    currentDirectiveDef = def;\n}\n/** *\n * Stores whether directives should be matched to elements.\n *\n * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n * directives on children of that element.\n *\n * Example:\n * ```\n * <my-comp my-directive>\n *   Should match component / directive.\n * </my-comp>\n * <div ngNonBindable>\n *   <my-comp my-directive>\n *     Should not match component / directive because we are in ngNonBindable.\n *   </my-comp>\n * </div>\n * ```\n  @type {?} */\nvar bindingsEnabled;\n/**\n * @return {?}\n */\nexport function getBindingsEnabled() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return bindingsEnabled;\n}\n/**\n * Enables directive matching on elements.\n *\n *  * Example:\n * ```\n * <my-comp my-directive>\n *   Should match component / directive.\n * </my-comp>\n * <div ngNonBindable>\n *   <!-- disabledBindings() -->\n *   <my-comp my-directive>\n *     Should not match component / directive because we are in ngNonBindable.\n *   </my-comp>\n *   <!-- enableBindings() -->\n * </div>\n * ```\n * @return {?}\n */\nexport function enableBindings() {\n    bindingsEnabled = true;\n}\n/**\n * Disables directive matching on element.\n *\n *  * Example:\n * ```\n * <my-comp my-directive>\n *   Should match component / directive.\n * </my-comp>\n * <div ngNonBindable>\n *   <!-- disabledBindings() -->\n *   <my-comp my-directive>\n *     Should not match component / directive because we are in ngNonBindable.\n *   </my-comp>\n *   <!-- enableBindings() -->\n * </div>\n * ```\n * @return {?}\n */\nexport function disableBindings() {\n    bindingsEnabled = false;\n}\n/**\n * @return {?}\n */\nexport function getLView() {\n    return lView;\n}\n/**\n * Restores `contextViewData` to the given OpaqueViewState instance.\n *\n * Used in conjunction with the getCurrentView() instruction to save a snapshot\n * of the current view and restore it when listeners are invoked. This allows\n * walking the declaration view tree in listeners to get vars from parent views.\n *\n * @param {?} viewToRestore The OpaqueViewState instance to restore.\n * @return {?}\n */\nexport function restoreView(viewToRestore) {\n    contextLView = /** @type {?} */ ((viewToRestore));\n}\n/** *\n * Used to set the parent property when nodes are created and track query results.\n  @type {?} */\nvar previousOrParentTNode;\n/**\n * @return {?}\n */\nexport function getPreviousOrParentTNode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return previousOrParentTNode;\n}\n/**\n * @param {?} tNode\n * @return {?}\n */\nexport function setPreviousOrParentTNode(tNode) {\n    previousOrParentTNode = tNode;\n}\n/**\n * @param {?} tNode\n * @param {?} view\n * @return {?}\n */\nexport function setTNodeAndViewData(tNode, view) {\n    previousOrParentTNode = tNode;\n    lView = view;\n}\n/** *\n * If `isParent` is:\n *  - `true`: then `previousOrParentTNode` points to a parent node.\n *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n  @type {?} */\nvar isParent;\n/**\n * @return {?}\n */\nexport function getIsParent() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return isParent;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function setIsParent(value) {\n    isParent = value;\n}\n/**\n * Query instructions can ask for \"current queries\" in 2 different cases:\n * - when creating view queries (at the root of a component view, before any node is created - in\n * this case currentQueries points to view queries)\n * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n * create content queries).\n * @param {?} QueryType\n * @return {?}\n */\nexport function getOrCreateCurrentQueries(QueryType) {\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var currentQueries = lView[QUERIES];\n    // if this is the first content query on a node, any existing LQueries needs to be cloned\n    // in subsequent template passes, the cloning occurs before directive instantiation.\n    if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n        !isContentQueryHost(previousOrParentTNode)) {\n        currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n        previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n    }\n    return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n}\n/** *\n * This property gets set before entering a template.\n  @type {?} */\nvar creationMode;\n/**\n * @return {?}\n */\nexport function getCreationMode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return creationMode;\n}\n/** *\n * State of the current view being processed.\n *\n * An array of nodes (text, element, container, etc), pipes, their bindings, and\n * any local variables that need to be stored between invocations.\n  @type {?} */\nvar lView;\n/** *\n * The last viewData retrieved by nextContext().\n * Allows building nextContext() and reference() calls.\n *\n * e.g. const inner = x().$implicit; const outer = x().$implicit;\n  @type {?} */\nvar contextLView = /** @type {?} */ ((null));\n/**\n * @return {?}\n */\nexport function getContextLView() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return contextLView;\n}\n/** *\n * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n *\n * Necessary to support ChangeDetectorRef.checkNoChanges().\n  @type {?} */\nvar checkNoChangesMode = false;\n/**\n * @return {?}\n */\nexport function getCheckNoChangesMode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return checkNoChangesMode;\n}\n/**\n * @param {?} mode\n * @return {?}\n */\nexport function setCheckNoChangesMode(mode) {\n    checkNoChangesMode = mode;\n}\n/** *\n * Whether or not this is the first time the current view has been processed.\n  @type {?} */\nvar firstTemplatePass = true;\n/**\n * @return {?}\n */\nexport function getFirstTemplatePass() {\n    return firstTemplatePass;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function setFirstTemplatePass(value) {\n    firstTemplatePass = value;\n}\n/** *\n * The root index from which pure function instructions should calculate their binding\n * indices. In component views, this is TView.bindingStartIndex. In a host binding\n * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n  @type {?} */\nvar bindingRootIndex = -1;\n/**\n * @return {?}\n */\nexport function getBindingRoot() {\n    return bindingRootIndex;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function setBindingRoot(value) {\n    bindingRootIndex = value;\n}\n/**\n * Swap the current state with a new state.\n *\n * For performance reasons we store the state in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the state for later, and when the view is\n * exited the state has to be restored\n *\n * @param {?} newView New state to become active\n * @param {?} hostTNode\n * @return {?} the previous state;\n */\nexport function enterView(newView, hostTNode) {\n    /** @type {?} */\n    var oldView = lView;\n    if (newView) {\n        /** @type {?} */\n        var tView = newView[TVIEW];\n        creationMode = (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = tView.firstTemplatePass;\n        bindingRootIndex = tView.bindingStartIndex;\n    }\n    previousOrParentTNode = /** @type {?} */ ((hostTNode));\n    isParent = true;\n    lView = contextLView = newView;\n    return oldView;\n}\n/**\n * @template T\n * @param {?=} level\n * @return {?}\n */\nexport function nextContextImpl(level) {\n    if (level === void 0) { level = 1; }\n    contextLView = walkUpViews(level, /** @type {?} */ ((contextLView)));\n    return /** @type {?} */ (contextLView[CONTEXT]);\n}\n/**\n * @param {?} nestingLevel\n * @param {?} currentView\n * @return {?}\n */\nfunction walkUpViews(nestingLevel, currentView) {\n    while (nestingLevel > 0) {\n        ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n        currentView = /** @type {?} */ ((currentView[DECLARATION_VIEW]));\n        nestingLevel--;\n    }\n    return currentView;\n}\n/**\n * Resets the application state.\n * @return {?}\n */\nexport function resetComponentState() {\n    isParent = false;\n    previousOrParentTNode = /** @type {?} */ ((null));\n    elementDepthCount = 0;\n    bindingsEnabled = true;\n}\n/**\n * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n * the direction of traversal (up or down the view tree) a bit clearer.\n *\n * @param {?} newView New state to become active\n * @param {?=} creationOnly An optional boolean to indicate that the view was processed in creation mode\n * only, i.e. the first update will be done later. Only possible for dynamically created views.\n * @return {?}\n */\nexport function leaveView(newView, creationOnly) {\n    /** @type {?} */\n    var tView = lView[TVIEW];\n    if (!creationOnly) {\n        if (!checkNoChangesMode) {\n            executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, creationMode);\n        }\n        // Views are clean and in update mode after being checked, so these bits are cleared\n        lView[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n    }\n    lView[FLAGS] |= 16 /* RunInit */;\n    lView[BINDING_INDEX] = tView.bindingStartIndex;\n    enterView(newView, null);\n}\n//# sourceMappingURL=state.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { getInjectableDef, getInjectorDef } from '../di/defs';\nimport { InjectFlags, injectRootLimpMode, setInjectImplementation } from '../di/injector_compatibility';\nimport { assertDefined, assertEqual } from './assert';\nimport { getComponentDef, getDirectiveDef, getPipeDef } from './definition';\nimport { NG_ELEMENT_ID } from './fields';\nimport { NO_PARENT_INJECTOR, PARENT_INJECTOR, TNODE, isFactory } from './interfaces/injector';\nimport { DECLARATION_VIEW, HOST_NODE, INJECTOR, TVIEW } from './interfaces/view';\nimport { assertNodeOfPossibleTypes } from './node_assert';\nimport { getLView, getPreviousOrParentTNode, setTNodeAndViewData } from './state';\nimport { getParentInjectorIndex, getParentInjectorView, hasParentInjector, isComponent, stringify } from './util';\n/** *\n * Defines if the call to `inject` should include `viewProviders` in its resolution.\n *\n * This is set to true when we try to instantiate a component. This value is reset in\n * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n * instantiated. This is done so that if we are injecting a token which was declared outside of\n * `viewProviders` we don't accidentally pull `viewProviders` in.\n *\n * Example:\n *\n * ```\n * \\@Injectable()\n * class MyService {\n *   constructor(public value: String) {}\n * }\n *\n * \\@Component({\n *   providers: [\n *     MyService,\n *     {provide: String, value: 'providers' }\n *   ]\n *   viewProviders: [\n *     {provide: String, value: 'viewProviders'}\n *   ]\n * })\n * class MyComponent {\n *   constructor(myService: MyService, value: String) {\n *     // We expect that Component can see into `viewProviders`.\n *     expect(value).toEqual('viewProviders');\n *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n *     expect(myService.value).toEqual('providers');\n *   }\n * }\n *\n * ```\n  @type {?} */\nvar includeViewProviders = false;\n/**\n * @param {?} v\n * @return {?}\n */\nfunction setIncludeViewProviders(v) {\n    /** @type {?} */\n    var oldValue = includeViewProviders;\n    includeViewProviders = v;\n    return oldValue;\n}\n/** *\n * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n * directives that will share slots, and thus, the fewer false positives when checking for\n * the existence of a directive.\n  @type {?} */\nvar BLOOM_SIZE = 256;\n/** @type {?} */\nvar BLOOM_MASK = BLOOM_SIZE - 1;\n/** *\n * Counter used to generate unique IDs for directives.\n  @type {?} */\nvar nextNgElementId = 0;\n/**\n * Registers this directive as present in its node's injector by flipping the directive's\n * corresponding bit in the injector's bloom filter.\n *\n * @param {?} injectorIndex The index of the node injector where this token should be registered\n * @param {?} tView The TView for the injector's bloom filters\n * @param {?} type The directive token to register\n * @return {?}\n */\nexport function bloomAdd(injectorIndex, tView, type) {\n    ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n    /** @type {?} */\n    var id = typeof type !== 'string' ? (/** @type {?} */ (type))[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n    // Set a unique ID on the directive type, so if something tries to inject the directive,\n    // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n    if (id == null) {\n        id = (/** @type {?} */ (type))[NG_ELEMENT_ID] = nextNgElementId++;\n    }\n    /** @type {?} */\n    var bloomBit = id & BLOOM_MASK;\n    /** @type {?} */\n    var mask = 1 << bloomBit;\n    /** @type {?} */\n    var b7 = bloomBit & 0x80;\n    /** @type {?} */\n    var b6 = bloomBit & 0x40;\n    /** @type {?} */\n    var b5 = bloomBit & 0x20;\n    /** @type {?} */\n    var tData = /** @type {?} */ (tView.data);\n    if (b7) {\n        b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n            (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n    }\n    else {\n        b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n            (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n    }\n}\n/**\n * Creates (or gets an existing) injector for a given element or container.\n *\n * @param {?} tNode for which an injector should be retrieved / created.\n * @param {?} hostView View where the node is stored\n * @return {?} Node injector\n */\nexport function getOrCreateNodeInjectorForNode(tNode, hostView) {\n    /** @type {?} */\n    var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n    if (existingInjectorIndex !== -1) {\n        return existingInjectorIndex;\n    }\n    /** @type {?} */\n    var tView = hostView[TVIEW];\n    if (tView.firstTemplatePass) {\n        tNode.injectorIndex = hostView.length;\n        insertBloom(tView.data, tNode); // foundation for node bloom\n        insertBloom(hostView, null); // foundation for cumulative bloom\n        insertBloom(tView.blueprint, null);\n        ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 4096 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n    }\n    /** @type {?} */\n    var parentLoc = getParentInjectorLocation(tNode, hostView);\n    /** @type {?} */\n    var parentIndex = getParentInjectorIndex(parentLoc);\n    /** @type {?} */\n    var parentLView = getParentInjectorView(parentLoc, hostView);\n    /** @type {?} */\n    var injectorIndex = tNode.injectorIndex;\n    // If a parent injector can't be found, its location is set to -1.\n    // In that case, we don't need to set up a cumulative bloom\n    if (hasParentInjector(parentLoc)) {\n        /** @type {?} */\n        var parentData = /** @type {?} */ (parentLView[TVIEW].data);\n        // Creates a cumulative bloom filter that merges the parent's bloom filter\n        // and its own cumulative bloom (which contains tokens for all ancestors)\n        for (var i = 0; i < 8; i++) {\n            hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n        }\n    }\n    hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n    return injectorIndex;\n}\n/**\n * @param {?} arr\n * @param {?} footer\n * @return {?}\n */\nfunction insertBloom(arr, footer) {\n    arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n}\n/**\n * @param {?} tNode\n * @param {?} hostView\n * @return {?}\n */\nexport function getInjectorIndex(tNode, hostView) {\n    if (tNode.injectorIndex === -1 ||\n        // If the injector index is the same as its parent's injector index, then the index has been\n        // copied down from the parent node. No injector has been created yet on this node.\n        (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n        // After the first template pass, the injector index might exist but the parent values\n        // might not have been calculated yet for this instance\n        hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n        return -1;\n    }\n    else {\n        return tNode.injectorIndex;\n    }\n}\n/**\n * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n * parent injector initially.\n *\n * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n * @param {?} tNode\n * @param {?} view\n * @return {?}\n */\nexport function getParentInjectorLocation(tNode, view) {\n    if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n        return /** @type {?} */ (tNode.parent.injectorIndex); // ViewOffset is 0, AcrossHostBoundary is 0\n    }\n    /** @type {?} */\n    var hostTNode = view[HOST_NODE];\n    /** @type {?} */\n    var viewOffset = 1;\n    while (hostTNode && hostTNode.injectorIndex === -1) {\n        view = /** @type {?} */ ((view[DECLARATION_VIEW]));\n        hostTNode = /** @type {?} */ ((view[HOST_NODE]));\n        viewOffset++;\n    }\n    /** @type {?} */\n    var acrossHostBoundary = hostTNode && hostTNode.type === 3 /* Element */ ?\n        32768 /* AcrossHostBoundary */ :\n        0;\n    return hostTNode ?\n        hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) |\n            acrossHostBoundary : /** @type {?} */ (-1);\n}\n/**\n * Makes a type or an injection token public to the DI system by adding it to an\n * injector's bloom filter.\n *\n * @param {?} injectorIndex\n * @param {?} view\n * @param {?} token The type or the injection token to be made public\n * @return {?}\n */\nexport function diPublicInInjector(injectorIndex, view, token) {\n    bloomAdd(injectorIndex, view[TVIEW], token);\n}\n/**\n * Inject static attribute value into directive constructor.\n *\n * This method is used with `factory` functions which are generated as part of\n * `defineDirective` or `defineComponent`. The method retrieves the static value\n * of an attribute. (Dynamic attributes are not supported since they are not resolved\n *  at the time of injection and can change over time.)\n *\n * # Example\n * Given:\n * ```\n * \\@Component(...)\n * class MyComponent {\n *   constructor(\\@Attribute('title') title: string) { ... }\n * }\n * ```\n * When instantiated with\n * ```\n * <my-component title=\"Hello\"></my-component>\n * ```\n *\n * Then factory method generated is:\n * ```\n * MyComponent.ngComponentDef = defineComponent({\n *   factory: () => new MyComponent(injectAttribute('title'))\n *   ...\n * })\n * ```\n *\n * \\@publicApi\n * @param {?} tNode\n * @param {?} attrNameToInject\n * @return {?}\n */\nexport function injectAttributeImpl(tNode, attrNameToInject) {\n    ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n    ngDevMode && assertDefined(tNode, 'expecting tNode');\n    /** @type {?} */\n    var attrs = tNode.attrs;\n    if (attrs) {\n        for (var i = 0; i < attrs.length; i = i + 2) {\n            /** @type {?} */\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName == attrNameToInject) {\n                return /** @type {?} */ (attrs[i + 1]);\n            }\n        }\n    }\n    return null;\n}\n/**\n * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n *\n * Look for the injector providing the token by walking up the node injector tree and then\n * the module injector tree.\n *\n * @template T\n * @param {?} tNode\n * @param {?} lView\n * @param {?} token The token to look for\n * @param {?=} flags Injection flags\n * @param {?=} notFoundValue\n * @return {?} the value from the injector or `null` when not found\n */\nexport function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n    if (flags === void 0) { flags = InjectFlags.Default; }\n    /** @type {?} */\n    var bloomHash = bloomHashBitOrFactory(token);\n    // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n    // so just call the factory function to create it.\n    if (typeof bloomHash === 'function') {\n        /** @type {?} */\n        var savePreviousOrParentTNode = getPreviousOrParentTNode();\n        /** @type {?} */\n        var saveLView = getLView();\n        setTNodeAndViewData(tNode, lView);\n        try {\n            /** @type {?} */\n            var value = bloomHash();\n            if (value == null && !(flags & InjectFlags.Optional)) {\n                throw new Error(\"No provider for \" + stringify(token));\n            }\n            else {\n                return value;\n            }\n        }\n        finally {\n            setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n        }\n    }\n    else if (typeof bloomHash == 'number') {\n        /** @type {?} */\n        var previousTView = null;\n        /** @type {?} */\n        var injectorIndex = getInjectorIndex(tNode, lView);\n        /** @type {?} */\n        var parentLocation = NO_PARENT_INJECTOR;\n        // If we should skip this injector, or if there is no injector on this node, start by searching\n        // the parent injector.\n        if (injectorIndex === -1 || flags & InjectFlags.SkipSelf) {\n            parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                lView[injectorIndex + PARENT_INJECTOR];\n            if (!shouldSearchParent(flags, parentLocation)) {\n                injectorIndex = -1;\n            }\n            else {\n                previousTView = lView[TVIEW];\n                injectorIndex = getParentInjectorIndex(parentLocation);\n                lView = getParentInjectorView(parentLocation, lView);\n            }\n        }\n        // Traverse up the injector tree until we find a potential match or until we know there\n        // *isn't* a match.\n        while (injectorIndex !== -1) {\n            parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n            /** @type {?} */\n            var tView = lView[TVIEW];\n            if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                /** @type {?} */\n                var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView);\n                if (instance !== NOT_FOUND) {\n                    return instance;\n                }\n            }\n            if (shouldSearchParent(flags, parentLocation) &&\n                bloomHasToken(bloomHash, injectorIndex, lView)) {\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // Traverse up the tree and continue searching.\n                previousTView = tView;\n                injectorIndex = getParentInjectorIndex(parentLocation);\n                lView = getParentInjectorView(parentLocation, lView);\n            }\n            else {\n                // If we should not search parent OR If the ancestor bloom filter value does not have the\n                // bit corresponding to the directive we can give up on traversing up to find the specific\n                // injector.\n                injectorIndex = -1;\n            }\n        }\n    }\n    if (flags & InjectFlags.Optional && notFoundValue === undefined) {\n        // This must be set or the NullInjector will throw for optional deps\n        notFoundValue = null;\n    }\n    if ((flags & (InjectFlags.Self | InjectFlags.Host)) === 0) {\n        /** @type {?} */\n        var moduleInjector = lView[INJECTOR];\n        if (moduleInjector) {\n            return moduleInjector.get(token, notFoundValue, flags & InjectFlags.Optional);\n        }\n        else {\n            return injectRootLimpMode(token, notFoundValue, flags & InjectFlags.Optional);\n        }\n    }\n    if (flags & InjectFlags.Optional) {\n        return notFoundValue;\n    }\n    else {\n        throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n}\n/** @type {?} */\nvar NOT_FOUND = {};\n/**\n * @template T\n * @param {?} injectorIndex\n * @param {?} injectorView\n * @param {?} token\n * @param {?} previousTView\n * @return {?}\n */\nfunction searchTokensOnInjector(injectorIndex, injectorView, token, previousTView) {\n    /** @type {?} */\n    var currentTView = injectorView[TVIEW];\n    /** @type {?} */\n    var tNode = /** @type {?} */ (currentTView.data[injectorIndex + TNODE]);\n    /** @type {?} */\n    var canAccessViewProviders = false;\n    // We need to determine if view providers can be accessed by the starting element.\n    // It happens in 2 cases:\n    // 1) On the initial element injector , if we are instantiating a token which can see the\n    // viewProviders of the component of that element. Such token are:\n    // - the component itself (but not other directives)\n    // - viewProviders tokens of the component (but not providers tokens)\n    // 2) Upper in the element injector tree, if the starting element is actually in the view of\n    // the current element. To determine this, we track the transition of view during the climb,\n    // and check the host node of the current view to identify component views.\n    if (previousTView == null && isComponent(tNode) && includeViewProviders ||\n        previousTView != null && previousTView != currentTView &&\n            (currentTView.node == null || currentTView.node.type === 3 /* Element */)) {\n        canAccessViewProviders = true;\n    }\n    /** @type {?} */\n    var injectableIdx = locateDirectiveOrProvider(tNode, injectorView, token, canAccessViewProviders);\n    if (injectableIdx !== null) {\n        return getNodeInjectable(currentTView.data, injectorView, injectableIdx, /** @type {?} */ (tNode));\n    }\n    else {\n        return NOT_FOUND;\n    }\n}\n/**\n * Searches for the given token among the node's directives and providers.\n *\n * @template T\n * @param {?} tNode TNode on which directives are present.\n * @param {?} lView The view we are currently processing\n * @param {?} token Provider token or type of a directive to look for.\n * @param {?} canAccessViewProviders Whether view providers should be considered.\n * @return {?} Index of a found directive or provider, or null when none found.\n */\nexport function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders) {\n    /** @type {?} */\n    var tView = lView[TVIEW];\n    /** @type {?} */\n    var nodeFlags = tNode.flags;\n    /** @type {?} */\n    var nodeProviderIndexes = tNode.providerIndexes;\n    /** @type {?} */\n    var tInjectables = tView.data;\n    /** @type {?} */\n    var startInjectables = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n    /** @type {?} */\n    var startDirectives = nodeFlags >> 16 /* DirectiveStartingIndexShift */;\n    /** @type {?} */\n    var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n    /** @type {?} */\n    var startingIndex = canAccessViewProviders ? startInjectables : startInjectables + cptViewProvidersCount;\n    /** @type {?} */\n    var directiveCount = nodeFlags & 4095 /* DirectiveCountMask */;\n    for (var i = startingIndex; i < startDirectives + directiveCount; i++) {\n        /** @type {?} */\n        var providerTokenOrDef = /** @type {?} */ (tInjectables[i]);\n        if (i < startDirectives && token === providerTokenOrDef ||\n            i >= startDirectives && (/** @type {?} */ (providerTokenOrDef)).type === token) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n *\n * This function checks to see if the value has already been instantiated and if so returns the\n * cached `injectable`. Otherwise if it detects that the value is still a factory it\n * instantiates the `injectable` and caches the value.\n * @param {?} tData\n * @param {?} lData\n * @param {?} index\n * @param {?} tNode\n * @return {?}\n */\nexport function getNodeInjectable(tData, lData, index, tNode) {\n    /** @type {?} */\n    var value = lData[index];\n    if (isFactory(value)) {\n        /** @type {?} */\n        var factory = value;\n        if (factory.resolving) {\n            throw new Error(\"Circular dep for \" + stringify(tData[index]));\n        }\n        /** @type {?} */\n        var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n        factory.resolving = true;\n        /** @type {?} */\n        var previousInjectImplementation = void 0;\n        if (factory.injectImpl) {\n            previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n        }\n        /** @type {?} */\n        var savePreviousOrParentTNode = getPreviousOrParentTNode();\n        /** @type {?} */\n        var saveLView = getLView();\n        setTNodeAndViewData(tNode, lData);\n        try {\n            value = lData[index] = factory.factory(null, tData, lData, tNode);\n        }\n        finally {\n            if (factory.injectImpl)\n                setInjectImplementation(previousInjectImplementation);\n            setIncludeViewProviders(previousIncludeViewProviders);\n            factory.resolving = false;\n            setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n        }\n    }\n    return value;\n}\n/**\n * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n * the directive might be provided by the injector.\n *\n * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n * is returned as the node injector can not possibly provide that token.\n *\n * @param {?} token the injection token\n * @return {?} the matching bit to check in the bloom filter or `null` if the token is not known.\n */\nexport function bloomHashBitOrFactory(token) {\n    ngDevMode && assertDefined(token, 'token must be defined');\n    if (typeof token === 'string') {\n        return token.charCodeAt(0) || 0;\n    }\n    /** @type {?} */\n    var tokenId = (/** @type {?} */ (token))[NG_ELEMENT_ID];\n    return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n}\n/**\n * @param {?} bloomHash\n * @param {?} injectorIndex\n * @param {?} injectorView\n * @return {?}\n */\nexport function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n    /** @type {?} */\n    var mask = 1 << bloomHash;\n    /** @type {?} */\n    var b7 = bloomHash & 0x80;\n    /** @type {?} */\n    var b6 = bloomHash & 0x40;\n    /** @type {?} */\n    var b5 = bloomHash & 0x20;\n    /** @type {?} */\n    var value;\n    if (b7) {\n        value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n            (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n    }\n    else {\n        value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n            (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n    }\n    // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n    // this injector is a potential match.\n    return !!(value & mask);\n}\n/**\n * Returns true if flags prevent parent injector from being searched for tokens\n * @param {?} flags\n * @param {?} parentLocation\n * @return {?}\n */\nfunction shouldSearchParent(flags, parentLocation) {\n    return !(flags & InjectFlags.Self ||\n        (flags & InjectFlags.Host &&\n            ((/** @type {?} */ ((parentLocation))) & 32768 /* AcrossHostBoundary */)));\n}\n/**\n * @return {?}\n */\nexport function injectInjector() {\n    /** @type {?} */\n    var tNode = /** @type {?} */ (getPreviousOrParentTNode());\n    return new NodeInjector(tNode, getLView());\n}\nvar NodeInjector = /** @class */ (function () {\n    function NodeInjector(_tNode, _lView) {\n        this._tNode = _tNode;\n        this._lView = _lView;\n        this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _lView);\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    NodeInjector.prototype.get = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        /** @type {?} */\n        var previousTNode = getPreviousOrParentTNode();\n        /** @type {?} */\n        var previousLView = getLView();\n        setTNodeAndViewData(this._tNode, this._lView);\n        try {\n            return getOrCreateInjectable(this._tNode, this._lView, token);\n        }\n        finally {\n            setTNodeAndViewData(previousTNode, previousLView);\n        }\n    };\n    return NodeInjector;\n}());\nexport { NodeInjector };\nif (false) {\n    /** @type {?} */\n    NodeInjector.prototype._injectorIndex;\n    /** @type {?} */\n    NodeInjector.prototype._tNode;\n    /** @type {?} */\n    NodeInjector.prototype._lView;\n}\n/**\n * @template T\n * @param {?} type\n * @return {?}\n */\nexport function getFactoryOf(type) {\n    /** @type {?} */\n    var typeAny = /** @type {?} */ (type);\n    /** @type {?} */\n    var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n        getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n    if (!def || def.factory === undefined) {\n        return null;\n    }\n    return def.factory;\n}\n/**\n * @template T\n * @param {?} type\n * @return {?}\n */\nexport function getInheritedFactory(type) {\n    /** @type {?} */\n    var proto = /** @type {?} */ (Object.getPrototypeOf(type.prototype).constructor);\n    /** @type {?} */\n    var factory = getFactoryOf(proto);\n    if (factory !== null) {\n        return factory;\n    }\n    else {\n        // There is no factory defined. Either this was improper usage of inheritance\n        // (no Angular decorator on the superclass) or there is no constructor at all\n        // in the inheritance chain. Since the two cases cannot be distinguished, the\n        // latter has to be assumed.\n        return function (t) { return new t(); };\n    }\n}\n//# sourceMappingURL=di.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nimport './ng_dev_mode';\nimport { assertDomNode } from './assert';\nimport { EMPTY_ARRAY } from './definition';\nimport { MONKEY_PATCH_KEY_NAME } from './interfaces/context';\nimport { CONTEXT, HEADER_OFFSET, HOST, TVIEW } from './interfaces/view';\nimport { getComponentViewByIndex, getNativeByTNode, readElementValue, readPatchedData } from './util';\n/**\n * Returns the matching `LContext` data for a given DOM node, directive or component instance.\n *\n * This function will examine the provided DOM element, component, or directive instance\\'s\n * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n * value will be that of the newly created `LContext`.\n *\n * If the monkey-patched value is the `LView` instance then the context value for that\n * target will be created and the monkey-patch reference will be updated. Therefore when this\n * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n * directive\\'s monkey-patch values.\n *\n * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n * is found which contains a monkey-patch reference. When that occurs then the provided element\n * will be updated with a new context (which is then returned). If the monkey-patch value is not\n * detected for a component/directive instance then it will throw an error (all components and\n * directives should be automatically monkey-patched by ivy).\n *\n * @param {?} target Component, Directive or DOM Node.\n * @return {?}\n */\nexport function getContext(target) {\n    /** @type {?} */\n    var mpValue = readPatchedData(target);\n    if (mpValue) {\n        // only when it's an array is it considered an LView instance\n        // ... otherwise it's an already constructed LContext instance\n        if (Array.isArray(mpValue)) {\n            /** @type {?} */\n            var lView = /** @type {?} */ ((mpValue));\n            /** @type {?} */\n            var nodeIndex = void 0;\n            /** @type {?} */\n            var component = undefined;\n            /** @type {?} */\n            var directives = undefined;\n            if (isComponentInstance(target)) {\n                nodeIndex = findViaComponent(lView, target);\n                if (nodeIndex == -1) {\n                    throw new Error('The provided component was not found in the application');\n                }\n                component = target;\n            }\n            else if (isDirectiveInstance(target)) {\n                nodeIndex = findViaDirective(lView, target);\n                if (nodeIndex == -1) {\n                    throw new Error('The provided directive was not found in the application');\n                }\n                directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n            }\n            else {\n                nodeIndex = findViaNativeElement(lView, /** @type {?} */ (target));\n                if (nodeIndex == -1) {\n                    return null;\n                }\n            }\n            /** @type {?} */\n            var native = readElementValue(lView[nodeIndex]);\n            /** @type {?} */\n            var existingCtx = readPatchedData(native);\n            /** @type {?} */\n            var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                existingCtx :\n                createLContext(lView, nodeIndex, native);\n            // only when the component has been discovered then update the monkey-patch\n            if (component && context.component === undefined) {\n                context.component = component;\n                attachPatchData(context.component, context);\n            }\n            // only when the directives have been discovered then update the monkey-patch\n            if (directives && context.directives === undefined) {\n                context.directives = directives;\n                for (var i = 0; i < directives.length; i++) {\n                    attachPatchData(directives[i], context);\n                }\n            }\n            attachPatchData(context.native, context);\n            mpValue = context;\n        }\n    }\n    else {\n        /** @type {?} */\n        var rElement = /** @type {?} */ (target);\n        ngDevMode && assertDomNode(rElement);\n        /** @type {?} */\n        var parent_1 = /** @type {?} */ (rElement);\n        while (parent_1 = parent_1.parentNode) {\n            /** @type {?} */\n            var parentContext = readPatchedData(parent_1);\n            if (parentContext) {\n                /** @type {?} */\n                var lView = void 0;\n                if (Array.isArray(parentContext)) {\n                    lView = /** @type {?} */ (parentContext);\n                }\n                else {\n                    lView = parentContext.lView;\n                }\n                // the edge of the app was also reached here through another means\n                // (maybe because the DOM was changed manually).\n                if (!lView) {\n                    return null;\n                }\n                /** @type {?} */\n                var index = findViaNativeElement(lView, rElement);\n                if (index >= 0) {\n                    /** @type {?} */\n                    var native = readElementValue(lView[index]);\n                    /** @type {?} */\n                    var context = createLContext(lView, index, native);\n                    attachPatchData(native, context);\n                    mpValue = context;\n                    break;\n                }\n            }\n        }\n    }\n    return (/** @type {?} */ (mpValue)) || null;\n}\n/**\n * Creates an empty instance of a `LContext` context\n * @param {?} lView\n * @param {?} nodeIndex\n * @param {?} native\n * @return {?}\n */\nfunction createLContext(lView, nodeIndex, native) {\n    return {\n        lView: lView,\n        nodeIndex: nodeIndex,\n        native: native,\n        component: undefined,\n        directives: undefined,\n        localRefs: undefined,\n    };\n}\n/**\n * Takes a component instance and returns the view for that component.\n *\n * @param {?} componentInstance\n * @return {?} The component's view\n */\nexport function getComponentViewByInstance(componentInstance) {\n    /** @type {?} */\n    var lView = readPatchedData(componentInstance);\n    /** @type {?} */\n    var view;\n    if (Array.isArray(lView)) {\n        /** @type {?} */\n        var nodeIndex = findViaComponent(lView, componentInstance);\n        view = getComponentViewByIndex(nodeIndex, lView);\n        /** @type {?} */\n        var context = createLContext(lView, nodeIndex, /** @type {?} */ (view[HOST]));\n        context.component = componentInstance;\n        attachPatchData(componentInstance, context);\n        attachPatchData(context.native, context);\n    }\n    else {\n        /** @type {?} */\n        var context = /** @type {?} */ ((lView));\n        view = getComponentViewByIndex(context.nodeIndex, context.lView);\n    }\n    return view;\n}\n/**\n * Assigns the given data to the given target (which could be a component,\n * directive or DOM node instance) using monkey-patching.\n * @param {?} target\n * @param {?} data\n * @return {?}\n */\nexport function attachPatchData(target, data) {\n    target[MONKEY_PATCH_KEY_NAME] = data;\n}\n/**\n * @param {?} instance\n * @return {?}\n */\nexport function isComponentInstance(instance) {\n    return instance && instance.constructor && instance.constructor.ngComponentDef;\n}\n/**\n * @param {?} instance\n * @return {?}\n */\nexport function isDirectiveInstance(instance) {\n    return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n}\n/**\n * Locates the element within the given LView and returns the matching index\n * @param {?} lView\n * @param {?} target\n * @return {?}\n */\nfunction findViaNativeElement(lView, target) {\n    /** @type {?} */\n    var tNode = lView[TVIEW].firstChild;\n    while (tNode) {\n        /** @type {?} */\n        var native = /** @type {?} */ ((getNativeByTNode(tNode, lView)));\n        if (native === target) {\n            return tNode.index;\n        }\n        tNode = traverseNextElement(tNode);\n    }\n    return -1;\n}\n/**\n * Locates the next tNode (child, sibling or parent).\n * @param {?} tNode\n * @return {?}\n */\nfunction traverseNextElement(tNode) {\n    if (tNode.child) {\n        return tNode.child;\n    }\n    else if (tNode.next) {\n        return tNode.next;\n    }\n    else if (tNode.parent) {\n        return tNode.parent.next || null;\n    }\n    return null;\n}\n/**\n * Locates the component within the given LView and returns the matching index\n * @param {?} lView\n * @param {?} componentInstance\n * @return {?}\n */\nfunction findViaComponent(lView, componentInstance) {\n    /** @type {?} */\n    var componentIndices = lView[TVIEW].components;\n    if (componentIndices) {\n        for (var i = 0; i < componentIndices.length; i++) {\n            /** @type {?} */\n            var elementComponentIndex = componentIndices[i];\n            /** @type {?} */\n            var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n            if (componentView[CONTEXT] === componentInstance) {\n                return elementComponentIndex;\n            }\n        }\n    }\n    else {\n        /** @type {?} */\n        var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n        /** @type {?} */\n        var rootComponent = rootComponentView[CONTEXT];\n        if (rootComponent === componentInstance) {\n            // we are dealing with the root element here therefore we know that the\n            // element is the very first element after the HEADER data in the lView\n            return HEADER_OFFSET;\n        }\n    }\n    return -1;\n}\n/**\n * Locates the directive within the given LView and returns the matching index\n * @param {?} lView\n * @param {?} directiveInstance\n * @return {?}\n */\nfunction findViaDirective(lView, directiveInstance) {\n    /** @type {?} */\n    var tNode = lView[TVIEW].firstChild;\n    while (tNode) {\n        /** @type {?} */\n        var directiveIndexStart = getDirectiveStartIndex(tNode);\n        /** @type {?} */\n        var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n        for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n            if (lView[i] === directiveInstance) {\n                return tNode.index;\n            }\n        }\n        tNode = traverseNextElement(tNode);\n    }\n    return -1;\n}\n/**\n * Returns a list of directives extracted from the given view based on the\n * provided list of directive index values.\n *\n * @param {?} nodeIndex The node index\n * @param {?} lView The target view data\n * @param {?} includeComponents Whether or not to include components in returned directives\n * @return {?}\n */\nexport function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n    /** @type {?} */\n    var tNode = /** @type {?} */ (lView[TVIEW].data[nodeIndex]);\n    /** @type {?} */\n    var directiveStartIndex = getDirectiveStartIndex(tNode);\n    if (directiveStartIndex == 0)\n        return EMPTY_ARRAY;\n    /** @type {?} */\n    var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n    if (!includeComponents && tNode.flags & 4096 /* isComponent */)\n        directiveStartIndex++;\n    return lView.slice(directiveStartIndex, directiveEndIndex);\n}\n/**\n * @param {?} nodeIndex\n * @param {?} lView\n * @return {?}\n */\nexport function getComponentAtNodeIndex(nodeIndex, lView) {\n    /** @type {?} */\n    var tNode = /** @type {?} */ (lView[TVIEW].data[nodeIndex]);\n    /** @type {?} */\n    var directiveStartIndex = getDirectiveStartIndex(tNode);\n    return tNode.flags & 4096 /* isComponent */ ? lView[directiveStartIndex] : null;\n}\n/**\n * Returns a map of local references (local reference name => element or directive instance) that\n * exist on a given element.\n * @param {?} lView\n * @param {?} nodeIndex\n * @return {?}\n */\nexport function discoverLocalRefs(lView, nodeIndex) {\n    /** @type {?} */\n    var tNode = /** @type {?} */ (lView[TVIEW].data[nodeIndex]);\n    if (tNode && tNode.localNames) {\n        /** @type {?} */\n        var result = {};\n        for (var i = 0; i < tNode.localNames.length; i += 2) {\n            /** @type {?} */\n            var localRefName = tNode.localNames[i];\n            /** @type {?} */\n            var directiveIndex = /** @type {?} */ (tNode.localNames[i + 1]);\n            result[localRefName] =\n                directiveIndex === -1 ? /** @type {?} */ ((getNativeByTNode(tNode, lView))) : lView[directiveIndex];\n        }\n        return result;\n    }\n    return null;\n}\n/**\n * @param {?} tNode\n * @return {?}\n */\nfunction getDirectiveStartIndex(tNode) {\n    // the tNode instances store a flag value which then has a\n    // pointer which tells the starting index of where all the\n    // active directives are in the master directive array\n    return tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n}\n/**\n * @param {?} tNode\n * @param {?} startIndex\n * @return {?}\n */\nfunction getDirectiveEndIndex(tNode, startIndex) {\n    /** @type {?} */\n    var count = tNode.flags & 4095 /* DirectiveCountMask */;\n    return count ? (startIndex + count) : -1;\n}\n//# sourceMappingURL=context_discovery.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {...?} args\n * @return {?}\n */\nexport function noop() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    // Do nothing.\n}\n//# sourceMappingURL=noop.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { stringify } from '../util';\nimport { getClosureSafeProperty } from '../util/property';\n/**\n * An interface that a function passed into {\\@link forwardRef} has to implement.\n *\n * \\@usageNotes\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * \\@publicApi\n * @record\n */\nexport function ForwardRefFn() { }\n/** @type {?} */\nvar __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n * a query is not yet defined.\n *\n * \\@usageNotes\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@publicApi\n * @param {?} forwardRefFn\n * @return {?}\n */\nexport function forwardRef(forwardRefFn) {\n    (/** @type {?} */ (forwardRefFn)).__forward_ref__ = forwardRef;\n    (/** @type {?} */ (forwardRefFn)).toString = function () { return stringify(this()); };\n    return (/** @type {?} */ (/** @type {?} */ (forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * \\@usageNotes\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * @see `forwardRef`\n * \\@publicApi\n * @template T\n * @param {?} type\n * @return {?}\n */\nexport function resolveForwardRef(type) {\n    /** @type {?} */\n    var fn = type;\n    if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n        fn.__forward_ref__ === forwardRef) {\n        return fn();\n    }\n    else {\n        return type;\n    }\n}\n//# sourceMappingURL=forward_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { injectInjector } from '../render3/di';\nimport { stringify } from '../util';\nimport { noop } from '../util/noop';\nimport { getClosureSafeProperty } from '../util/property';\nimport { defineInjectable } from './defs';\nimport { resolveForwardRef } from './forward_ref';\nimport { InjectionToken } from './injection_token';\nimport { InjectFlags, inject } from './injector_compatibility';\nimport { Inject, Optional, Self, SkipSelf } from './metadata';\n/** @type {?} */\nexport var SOURCE = '__source';\n/** @type {?} */\nvar _THROW_IF_NOT_FOUND = new Object();\n/** @type {?} */\nexport var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n/** *\n * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n *\n * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n * project.\n *\n * \\@publicApi\n  @type {?} */\nexport var INJECTOR = new InjectionToken('INJECTOR');\nvar NullInjector = /** @class */ (function () {\n    function NullInjector() {\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    NullInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n            // reason why correctly written application should cause this exception.\n            // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n            // if(ngDevMode) debugger;\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return NullInjector;\n}());\nexport { NullInjector };\n/**\n * Concrete injectors implement this interface.\n *\n * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n *\n * \\@usageNotes\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n *\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * \\@publicApi\n * @abstract\n */\nvar Injector = /** @class */ (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} options\n     * @param {?=} parent\n     * @return {?}\n     */\n    Injector.create = /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} options\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (options, parent) {\n        if (Array.isArray(options)) {\n            return new StaticInjector(options, parent);\n        }\n        else {\n            return new StaticInjector(options.providers, options.parent, options.name || null);\n        }\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new NullInjector();\n    /** @nocollapse */\n    /** @nocollapse */ Injector.ngInjectableDef = defineInjectable({\n        providedIn: /** @type {?} */ ('any'),\n        factory: function () { return inject(INJECTOR); },\n    });\n    /**\n     * \\@internal\n     */\n    Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n    return Injector;\n}());\nexport { Injector };\nif (false) {\n    /** @type {?} */\n    Injector.THROW_IF_NOT_FOUND;\n    /** @type {?} */\n    Injector.NULL;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    Injector.ngInjectableDef;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Injector.__NG_ELEMENT_ID__;\n    /**\n     * Retrieves an instance from the injector based on the provided token.\n     * @throws When the `notFoundValue` is `undefined` or `Injector.THROW_IF_NOT_FOUND`.\n     * @abstract\n     * @template T\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} flags\n     * @return {?} The instance from the injector if defined, otherwise the `notFoundValue`.\n     */\n    Injector.prototype.get = function (token, notFoundValue, flags) { };\n    /**\n     * @deprecated from v4.0.0 use Type<T> or InjectionToken<T>\n     * @suppress {duplicate}\n     * @abstract\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector.prototype.get = function (token, notFoundValue) { };\n}\n/** @type {?} */\nexport var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n    return injectInjector();\n};\n/** @type {?} */\nvar SWITCH_INJECTOR_FACTORY__PRE_R3__ = noop;\n/** @type {?} */\nvar SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__PRE_R3__;\n/** @type {?} */\nvar IDENT = function (value) {\n    return value;\n};\nvar ɵ0 = IDENT;\n/** @type {?} */\nvar EMPTY = /** @type {?} */ ([]);\n/** @type {?} */\nvar CIRCULAR = IDENT;\n/** @type {?} */\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar ɵ1 = MULTI_PROVIDER_FN;\n/** @type {?} */\nexport var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n/** @type {?} */\nvar NG_TOKEN_PATH = 'ngTokenPath';\n/** @type {?} */\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n/** @enum {number} */\nvar OptionFlags = {\n    Optional: 1,\n    CheckSelf: 2,\n    CheckParent: 4,\n    Default: 6,\n};\n/** @type {?} */\nvar NULL_INJECTOR = Injector.NULL;\n/** @type {?} */\nvar NEW_LINE = /\\n/gm;\n/** @type {?} */\nvar NO_NEW_LINE = 'ɵ';\nvar StaticInjector = /** @class */ (function () {\n    function StaticInjector(providers, parent, source) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        if (source === void 0) { source = null; }\n        this.parent = parent;\n        this.source = source;\n        /** @type {?} */\n        var records = this._records = new Map();\n        records.set(Injector, /** @type {?} */ ({ token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        records.set(INJECTOR, /** @type {?} */ ({ token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        recursivelyProcessProviders(records, providers);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} flags\n     * @return {?}\n     */\n    StaticInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} flags\n     * @return {?}\n     */\n    function (token, notFoundValue, flags) {\n        if (flags === void 0) { flags = InjectFlags.Default; }\n        /** @type {?} */\n        var record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n        }\n        catch (e) {\n            /** @type {?} */\n            var tokenPath = e[NG_TEMP_TOKEN_PATH];\n            if (token[SOURCE]) {\n                tokenPath.unshift(token[SOURCE]);\n            }\n            e.message = formatError('\\n' + e.message, tokenPath, this.source);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    StaticInjector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var tokens = /** @type {?} */ ([]);\n        /** @type {?} */\n        var records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\nexport { StaticInjector };\nif (false) {\n    /** @type {?} */\n    StaticInjector.prototype.parent;\n    /** @type {?} */\n    StaticInjector.prototype.source;\n    /** @type {?} */\n    StaticInjector.prototype._records;\n}\n/** @typedef {?} */\nvar SupportedProvider;\n/**\n * @record\n */\nfunction Record() { }\n/** @type {?} */\nRecord.prototype.fn;\n/** @type {?} */\nRecord.prototype.useNew;\n/** @type {?} */\nRecord.prototype.deps;\n/** @type {?} */\nRecord.prototype.value;\n/**\n * @record\n */\nfunction DependencyRecord() { }\n/** @type {?} */\nDependencyRecord.prototype.token;\n/** @type {?} */\nDependencyRecord.prototype.options;\n/** @typedef {?} */\nvar TokenPath;\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction resolveProvider(provider) {\n    /** @type {?} */\n    var deps = computeDeps(provider);\n    /** @type {?} */\n    var fn = IDENT;\n    /** @type {?} */\n    var value = EMPTY;\n    /** @type {?} */\n    var useNew = false;\n    /** @type {?} */\n    var provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = (/** @type {?} */ (provider)).useValue;\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        fn = (/** @type {?} */ (provider)).useFactory;\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        // Just use IDENT\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        useNew = true;\n        fn = resolveForwardRef((/** @type {?} */ (provider)).useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\n/**\n * @param {?} records\n * @param {?} provider\n * @return {?}\n */\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            /** @type {?} */\n            var token = resolveForwardRef(provider.provide);\n            /** @type {?} */\n            var resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                /** @type {?} */\n                var multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = /** @type {?} */ ({\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    }));\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            /** @type {?} */\n            var record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @param {?} flags\n * @return {?}\n */\nfunction tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue, flags);\n    }\n    catch (e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        /** @type {?} */\n        var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @param {?} flags\n * @return {?}\n */\nfunction resolveToken(token, record, records, parent, notFoundValue, flags) {\n    var _a;\n    /** @type {?} */\n    var value;\n    if (record && !(flags & InjectFlags.SkipSelf)) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            /** @type {?} */\n            var obj = undefined;\n            /** @type {?} */\n            var useNew = record.useNew;\n            /** @type {?} */\n            var fn = record.fn;\n            /** @type {?} */\n            var depRecords = record.deps;\n            /** @type {?} */\n            var deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var i = 0; i < depRecords.length; i++) {\n                    /** @type {?} */\n                    var depRecord = depRecords[i];\n                    /** @type {?} */\n                    var options = depRecord.options;\n                    /** @type {?} */\n                    var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, childRecord, records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, InjectFlags.Default));\n                }\n            }\n            record.value = value = useNew ? new ((_a = (/** @type {?} */ (fn))).bind.apply(_a, [void 0].concat(deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else if (!(flags & InjectFlags.Self)) {\n        value = parent.get(token, notFoundValue, InjectFlags.Default);\n    }\n    return value;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction computeDeps(provider) {\n    /** @type {?} */\n    var deps = EMPTY;\n    /** @type {?} */\n    var providerDeps = (/** @type {?} */ (provider)).deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var i = 0; i < providerDeps.length; i++) {\n            /** @type {?} */\n            var options = 6 /* Default */;\n            /** @type {?} */\n            var token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var j = 0, annotations = token; j < annotations.length; j++) {\n                    /** @type {?} */\n                    var annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = (/** @type {?} */ (annotation)).token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        /** @type {?} */\n        var token = resolveForwardRef((/** @type {?} */ (provider)).useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @param {?=} source\n * @return {?}\n */\nfunction formatError(text, obj, source) {\n    if (source === void 0) { source = null; }\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    /** @type {?} */\n    var context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        /** @type {?} */\n        var parts = /** @type {?} */ ([]);\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                /** @type {?} */\n                var value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\nexport { ɵ0, ɵ1 };\n//# sourceMappingURL=injector.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@publicApi\n * @abstract\n * @template T\n */\nvar /**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@publicApi\n * @abstract\n * @template T\n */\nNgModuleRef = /** @class */ (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@publicApi\n * @abstract\n * @template T\n */\nexport { NgModuleRef };\nif (false) {\n    /**\n     * The injector that contains all of the providers of the NgModule.\n     * @abstract\n     * @return {?}\n     */\n    NgModuleRef.prototype.injector = function () { };\n    /**\n     * The ComponentFactoryResolver to get hold of the ComponentFactories\n     * declared in the `entryComponents` property of the module.\n     * @abstract\n     * @return {?}\n     */\n    NgModuleRef.prototype.componentFactoryResolver = function () { };\n    /**\n     * The NgModule instance.\n     * @abstract\n     * @return {?}\n     */\n    NgModuleRef.prototype.instance = function () { };\n    /**\n     * Destroys the module instance and all of the data structures associated with it.\n     * @abstract\n     * @return {?}\n     */\n    NgModuleRef.prototype.destroy = function () { };\n    /**\n     * Allows to register a callback that will be called when the module is destroyed.\n     * @abstract\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef.prototype.onDestroy = function (callback) { };\n}\n/**\n * @record\n * @template T\n */\nexport function InternalNgModuleRef() { }\n/** @type {?} */\nInternalNgModuleRef.prototype._bootstrapComponents;\n/**\n * \\@publicApi\n * @abstract\n * @template T\n */\nvar /**\n * \\@publicApi\n * @abstract\n * @template T\n */\nNgModuleFactory = /** @class */ (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n/**\n * \\@publicApi\n * @abstract\n * @template T\n */\nexport { NgModuleFactory };\nif (false) {\n    /**\n     * @abstract\n     * @return {?}\n     */\n    NgModuleFactory.prototype.moduleType = function () { };\n    /**\n     * @abstract\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory.prototype.create = function (parentInjector) { };\n}\n//# sourceMappingURL=ng_module_factory.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} name\n * @return {?}\n */\nexport function normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\n/** @type {?} */\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n//# sourceMappingURL=ng_reflect.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { getSymbolIterator, looseIdentical } from '../util';\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function devModeEqual(a, b) {\n    /** @type {?} */\n    var isListLikeIterableA = isListLikeIterable(a);\n    /** @type {?} */\n    var isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        /** @type {?} */\n        var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        /** @type {?} */\n        var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n * \\@publicApi\n */\nvar /**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n * \\@publicApi\n */\nWrappedValue = /** @class */ (function () {\n    function WrappedValue(value) {\n        this.wrapped = value;\n    }\n    /** Creates a wrapped value. */\n    /**\n     * Creates a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.wrap = /**\n     * Creates a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return new WrappedValue(value); };\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     **/\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.unwrap = /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n    /** Returns true if `value` is a wrapped value. */\n    /**\n     * Returns true if `value` is a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.isWrapped = /**\n     * Returns true if `value` is a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return value instanceof WrappedValue; };\n    return WrappedValue;\n}());\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n * \\@publicApi\n */\nexport { WrappedValue };\nif (false) {\n    /**\n     * @deprecated from 5.3, use `unwrap()` instead - will switch to protected\n     * @type {?}\n     */\n    WrappedValue.prototype.wrapped;\n}\n/**\n * Represents a basic change from a previous to a new value.\n *\n * \\@publicApi\n */\nvar /**\n * Represents a basic change from a previous to a new value.\n *\n * \\@publicApi\n */\nSimpleChange = /** @class */ (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    SimpleChange.prototype.isFirstChange = /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    function () { return this.firstChange; };\n    return SimpleChange;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n *\n * \\@publicApi\n */\nexport { SimpleChange };\nif (false) {\n    /** @type {?} */\n    SimpleChange.prototype.previousValue;\n    /** @type {?} */\n    SimpleChange.prototype.currentValue;\n    /** @type {?} */\n    SimpleChange.prototype.firstChange;\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n            // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nexport function areIterablesEqual(a, b, comparator) {\n    /** @type {?} */\n    var iterator1 = a[getSymbolIterator()]();\n    /** @type {?} */\n    var iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        /** @type {?} */\n        var item1 = iterator1.next();\n        /** @type {?} */\n        var item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nexport function iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        /** @type {?} */\n        var iterator = obj[getSymbolIterator()]();\n        /** @type {?} */\n        var item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nexport function isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n//# sourceMappingURL=change_detection_util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Called when directives inject each other (creating a circular dependency)\n * @param {?} token\n * @return {?}\n */\nexport function throwCyclicDependencyError(token) {\n    throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n}\n/**\n * Called when there are multiple component selectors that match a given node\n * @param {?} tNode\n * @return {?}\n */\nexport function throwMultipleComponentError(tNode) {\n    throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n}\n/**\n * Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on.\n * @param {?} creationMode\n * @param {?} oldValue\n * @param {?} currValue\n * @return {?}\n */\nexport function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n    /** @type {?} */\n    var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (creationMode) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    // TODO: include debug context\n    throw new Error(msg);\n}\n//# sourceMappingURL=errors.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** *\n * A special value which designates that a value has not changed.\n  @type {?} */\nexport var NO_CHANGE = /** @type {?} */ ({});\n//# sourceMappingURL=tokens.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { devModeEqual } from '../change_detection/change_detection_util';\nimport { assertDataInRange, assertLessThan, assertNotEqual } from './assert';\nimport { throwErrorIfNoChangesMode } from './errors';\nimport { getCheckNoChangesMode, getCreationMode } from './state';\nimport { NO_CHANGE } from './tokens';\nimport { isDifferent } from './util';\n/**\n * Updates binding and returns the value.\n * @param {?} lView\n * @param {?} bindingIndex\n * @param {?} value\n * @return {?}\n */\nexport function updateBinding(lView, bindingIndex, value) {\n    return lView[bindingIndex] = value;\n}\n/**\n * Gets the current binding value.\n * @param {?} lView\n * @param {?} bindingIndex\n * @return {?}\n */\nexport function getBinding(lView, bindingIndex) {\n    ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n    ngDevMode &&\n        assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n    return lView[bindingIndex];\n}\n/**\n * Updates binding if changed, then returns whether it was updated.\n * @param {?} lView\n * @param {?} bindingIndex\n * @param {?} value\n * @return {?}\n */\nexport function bindingUpdated(lView, bindingIndex, value) {\n    ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n    ngDevMode &&\n        assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n    if (lView[bindingIndex] === NO_CHANGE) {\n        // initial pass\n        lView[bindingIndex] = value;\n    }\n    else if (isDifferent(lView[bindingIndex], value)) {\n        if (ngDevMode && getCheckNoChangesMode()) {\n            if (!devModeEqual(lView[bindingIndex], value)) {\n                throwErrorIfNoChangesMode(getCreationMode(), lView[bindingIndex], value);\n            }\n        }\n        lView[bindingIndex] = value;\n    }\n    else {\n        return false;\n    }\n    return true;\n}\n/**\n * Updates 2 bindings if changed, then returns whether either was updated.\n * @param {?} lView\n * @param {?} bindingIndex\n * @param {?} exp1\n * @param {?} exp2\n * @return {?}\n */\nexport function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n    /** @type {?} */\n    var different = bindingUpdated(lView, bindingIndex, exp1);\n    return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n}\n/**\n * Updates 3 bindings if changed, then returns whether any was updated.\n * @param {?} lView\n * @param {?} bindingIndex\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @return {?}\n */\nexport function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n    /** @type {?} */\n    var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n    return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n}\n/**\n * Updates 4 bindings if changed, then returns whether any was updated.\n * @param {?} lView\n * @param {?} bindingIndex\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @return {?}\n */\nexport function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n    /** @type {?} */\n    var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n    return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n}\n//# sourceMappingURL=bindings.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @typedef {?} */\nvar CssSelector;\nexport { CssSelector };\n/** @typedef {?} */\nvar CssSelectorList;\nexport { CssSelectorList };\n/** @enum {number} */\nvar SelectorFlags = {\n    /** Indicates this is the beginning of a new negative selector */\n    NOT: 1,\n    /** Mode for matching attributes */\n    ATTRIBUTE: 2,\n    /** Mode for matching tag names */\n    ELEMENT: 4,\n    /** Mode for matching class names */\n    CLASS: 8,\n};\nexport { SelectorFlags };\n/** @type {?} */\nexport var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n/** @type {?} */\nexport var unusedValueExportToPlacateAjd = 1;\n//# sourceMappingURL=projection.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar RendererStyleFlags3 = {\n    Important: 1,\n    DashCase: 2,\n};\nexport { RendererStyleFlags3 };\nRendererStyleFlags3[RendererStyleFlags3.Important] = 'Important';\nRendererStyleFlags3[RendererStyleFlags3.DashCase] = 'DashCase';\n/** @typedef {?} */\nvar Renderer3;\nexport { Renderer3 };\n/**\n * Object Oriented style of API needed to create elements and text nodes.\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade\n * (reducing payload size).\n *\n * @record\n */\nexport function ObjectOrientedRenderer3() { }\n/** @type {?} */\nObjectOrientedRenderer3.prototype.createComment;\n/** @type {?} */\nObjectOrientedRenderer3.prototype.createElement;\n/** @type {?} */\nObjectOrientedRenderer3.prototype.createElementNS;\n/** @type {?} */\nObjectOrientedRenderer3.prototype.createTextNode;\n/** @type {?} */\nObjectOrientedRenderer3.prototype.querySelector;\n/**\n * Returns whether the `renderer` is a `ProceduralRenderer3`\n * @param {?} renderer\n * @return {?}\n */\nexport function isProceduralRenderer(renderer) {\n    return !!((/** @type {?} */ (renderer)).listen);\n}\n/**\n * Procedural style of API needed to create elements and text nodes.\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the\n * facade that enables element manipulation. This also facilitates backwards compatibility\n * with Renderer2.\n * @record\n */\nexport function ProceduralRenderer3() { }\n/** @type {?} */\nProceduralRenderer3.prototype.destroy;\n/** @type {?} */\nProceduralRenderer3.prototype.createComment;\n/** @type {?} */\nProceduralRenderer3.prototype.createElement;\n/** @type {?} */\nProceduralRenderer3.prototype.createText;\n/**\n * This property is allowed to be null / undefined,\n * in which case the view engine won't call it.\n * This is used as a performance optimization for production mode.\n * @type {?|undefined}\n */\nProceduralRenderer3.prototype.destroyNode;\n/** @type {?} */\nProceduralRenderer3.prototype.appendChild;\n/** @type {?} */\nProceduralRenderer3.prototype.insertBefore;\n/** @type {?} */\nProceduralRenderer3.prototype.removeChild;\n/** @type {?} */\nProceduralRenderer3.prototype.selectRootElement;\n/** @type {?} */\nProceduralRenderer3.prototype.parentNode;\n/** @type {?} */\nProceduralRenderer3.prototype.nextSibling;\n/** @type {?} */\nProceduralRenderer3.prototype.setAttribute;\n/** @type {?} */\nProceduralRenderer3.prototype.removeAttribute;\n/** @type {?} */\nProceduralRenderer3.prototype.addClass;\n/** @type {?} */\nProceduralRenderer3.prototype.removeClass;\n/** @type {?} */\nProceduralRenderer3.prototype.setStyle;\n/** @type {?} */\nProceduralRenderer3.prototype.removeStyle;\n/** @type {?} */\nProceduralRenderer3.prototype.setProperty;\n/** @type {?} */\nProceduralRenderer3.prototype.setValue;\n/** @type {?} */\nProceduralRenderer3.prototype.listen;\n/**\n * @record\n */\nexport function RendererFactory3() { }\n/** @type {?} */\nRendererFactory3.prototype.createRenderer;\n/** @type {?|undefined} */\nRendererFactory3.prototype.begin;\n/** @type {?|undefined} */\nRendererFactory3.prototype.end;\n/** @type {?} */\nexport var domRendererFactory3 = {\n    createRenderer: function (hostElement, rendererType) { return document; }\n};\n/**\n * Subset of API needed for appending elements and text nodes.\n * @record\n */\nexport function RNode() { }\n/** @type {?} */\nRNode.prototype.parentNode;\n/** @type {?} */\nRNode.prototype.nextSibling;\n/** @type {?} */\nRNode.prototype.removeChild;\n/**\n * Insert a child node.\n *\n * Used exclusively for adding View root nodes into ViewAnchor location.\n * @type {?}\n */\nRNode.prototype.insertBefore;\n/**\n * Append a child node.\n *\n * Used exclusively for building up DOM which are static (ie not View roots)\n * @type {?}\n */\nRNode.prototype.appendChild;\n/**\n * Subset of API needed for writing attributes, properties, and setting up\n * listeners on Element.\n * @record\n */\nexport function RElement() { }\n/** @type {?} */\nRElement.prototype.style;\n/** @type {?} */\nRElement.prototype.classList;\n/** @type {?} */\nRElement.prototype.className;\n/** @type {?} */\nRElement.prototype.setAttribute;\n/** @type {?} */\nRElement.prototype.removeAttribute;\n/** @type {?} */\nRElement.prototype.setAttributeNS;\n/** @type {?} */\nRElement.prototype.addEventListener;\n/** @type {?} */\nRElement.prototype.removeEventListener;\n/** @type {?|undefined} */\nRElement.prototype.setProperty;\n/**\n * @record\n */\nexport function RCssStyleDeclaration() { }\n/** @type {?} */\nRCssStyleDeclaration.prototype.removeProperty;\n/** @type {?} */\nRCssStyleDeclaration.prototype.setProperty;\n/**\n * @record\n */\nexport function RDomTokenList() { }\n/** @type {?} */\nRDomTokenList.prototype.add;\n/** @type {?} */\nRDomTokenList.prototype.remove;\n/**\n * @record\n */\nexport function RText() { }\n/** @type {?} */\nRText.prototype.textContent;\n/**\n * @record\n */\nexport function RComment() { }\n/** @type {?} */\nexport var unusedValueExportToPlacateAjd = 1;\n//# sourceMappingURL=renderer.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TNodeType = {\n    Container: 0,\n    Projection: 1,\n    View: 2,\n    Element: 3,\n    ViewOrElement: 2,\n    ElementContainer: 4,\n    IcuContainer: 5,\n};\nexport { TNodeType };\n/** @enum {number} */\nvar TNodeFlags = {\n    /** The number of directives on this node is encoded on the least significant bits */\n    DirectiveCountMask: 4095,\n    /** This bit is set if the node is a component */\n    isComponent: 4096,\n    /** This bit is set if the node has been projected */\n    isProjected: 8192,\n    /** This bit is set if the node has any content queries */\n    hasContentQuery: 16384,\n    /** This bit is set if the node has any directives that contain [class properties */\n    hasClassInput: 32768,\n    /** The index of the first directive on this node is encoded on the most significant bits  */\n    DirectiveStartingIndexShift: 16,\n};\nexport { TNodeFlags };\n/** @enum {number} */\nvar TNodeProviderIndexes = {\n    /** The index of the first provider on this node is encoded on the least significant bits */\n    ProvidersStartIndexMask: 65535,\n    /** The count of view providers from the component on this node is encoded on the 16 most\n         significant bits */\n    CptViewProvidersCountShift: 16,\n    CptViewProvidersCountShifter: 65536,\n};\nexport { TNodeProviderIndexes };\n/** @enum {number} */\nvar AttributeMarker = {\n    /**\n       * Marker indicates that the following 3 values in the attributes array are:\n       * namespaceUri, attributeName, attributeValue\n       * in that order.\n       */\n    NamespaceURI: 0,\n    /**\n       * This marker indicates that the following attribute names were extracted from bindings (ex.:\n       * [foo]=\"exp\") and / or event handlers (ex. (bar)=\"doSth()\").\n       * Taking the above bindings and outputs as an example an attributes array could look as follows:\n       * ['class', 'fade in', AttributeMarker.SelectOnly, 'foo', 'bar']\n       */\n    SelectOnly: 1,\n};\nexport { AttributeMarker };\n/** @typedef {?} */\nvar TAttributes;\nexport { TAttributes };\n/**\n * Binding data (flyweight) for a particular node that is shared between all templates\n * of a specific type.\n *\n * If a property is:\n *    - PropertyAliases: that property's data was generated and this is it\n *    - Null: that property's data was already generated and nothing was found.\n *    - Undefined: that property's data has not yet been generated\n *\n * see: https://en.wikipedia.org/wiki/Flyweight_pattern for more on the Flyweight pattern\n * @record\n */\nexport function TNode() { }\n/**\n * The type of the TNode. See TNodeType.\n * @type {?}\n */\nTNode.prototype.type;\n/**\n * Index of the TNode in TView.data and corresponding native element in LView.\n *\n * This is necessary to get from any TNode to its corresponding native element when\n * traversing the node tree.\n *\n * If index is -1, this is a dynamically created container node or embedded view node.\n * @type {?}\n */\nTNode.prototype.index;\n/**\n * The index of the closest injector in this node's LView.\n *\n * If the index === -1, there is no injector on this node or any ancestor node in this view.\n *\n * If the index !== -1, it is the index of this node's injector OR the index of a parent injector\n * in the same view. We pass the parent injector index down the node tree of a view so it's\n * possible to find the parent injector without walking a potentially deep node tree. Injector\n * indices are not set across view boundaries because there could be multiple component hosts.\n *\n * If tNode.injectorIndex === tNode.parent.injectorIndex, then the index belongs to a parent\n * injector.\n * @type {?}\n */\nTNode.prototype.injectorIndex;\n/**\n * This number stores two values using its bits:\n *\n * - the number of directives on that node (first 12 bits)\n * - the starting index of the node's directives in the directives array (last 20 bits).\n *\n * These two values are necessary so DI can effectively search the directives associated\n * with a node without searching the whole directives array.\n * @type {?}\n */\nTNode.prototype.flags;\n/**\n * This number stores two values using its bits:\n *\n * - the index of the first provider on that node (first 16 bits)\n * - the count of view providers from the component on this node (last 16 bits)\n * @type {?}\n */\nTNode.prototype.providerIndexes;\n/**\n * The tag name associated with this node.\n * @type {?}\n */\nTNode.prototype.tagName;\n/**\n * Attributes associated with an element. We need to store attributes to support various use-cases\n * (attribute injection, content projection with selectors, directives matching).\n * Attributes are stored statically because reading them from the DOM would be way too slow for\n * content projection and queries.\n *\n * Since attrs will always be calculated first, they will never need to be marked undefined by\n * other instructions.\n *\n * For regular attributes a name of an attribute and its value alternate in the array.\n * e.g. ['role', 'checkbox']\n * This array can contain flags that will indicate \"special attributes\" (attributes with\n * namespaces, attributes extracted from bindings and outputs).\n * @type {?}\n */\nTNode.prototype.attrs;\n/**\n * A set of local names under which a given element is exported in a template and\n * visible to queries. An entry in this array can be created for different reasons:\n * - an element itself is referenced, ex.: `<div #foo>`\n * - a component is referenced, ex.: `<my-cmpt #foo>`\n * - a directive is referenced, ex.: `<my-cmpt #foo=\"directiveExportAs\">`.\n *\n * A given element might have different local names and those names can be associated\n * with a directive. We store local names at even indexes while odd indexes are reserved\n * for directive index in a view (or `-1` if there is no associated directive).\n *\n * Some examples:\n * - `<div #foo>` => `[\"foo\", -1]`\n * - `<my-cmpt #foo>` => `[\"foo\", myCmptIdx]`\n * - `<my-cmpt #foo #bar=\"directiveExportAs\">` => `[\"foo\", myCmptIdx, \"bar\", directiveIdx]`\n * - `<div #foo #bar=\"directiveExportAs\">` => `[\"foo\", -1, \"bar\", directiveIdx]`\n * @type {?}\n */\nTNode.prototype.localNames;\n/**\n * Information about input properties that need to be set once from attribute data.\n * @type {?}\n */\nTNode.prototype.initialInputs;\n/**\n * Input data for all directives on this node.\n *\n * - `undefined` means that the prop has not been initialized yet,\n * - `null` means that the prop has been initialized but no inputs have been found.\n * @type {?}\n */\nTNode.prototype.inputs;\n/**\n * Output data for all directives on this node.\n *\n * - `undefined` means that the prop has not been initialized yet,\n * - `null` means that the prop has been initialized but no outputs have been found.\n * @type {?}\n */\nTNode.prototype.outputs;\n/**\n * The TView or TViews attached to this node.\n *\n * If this TNode corresponds to an LContainer with inline views, the container will\n * need to store separate static data for each of its view blocks (TView[]). Otherwise,\n * nodes in inline views with the same index as nodes in their parent views will overwrite\n * each other, as they are in the same template.\n *\n * Each index in this array corresponds to the static data for a certain\n * view. So if you had V(0) and V(1) in a container, you might have:\n *\n * [\n *   [{tagName: 'div', attrs: ...}, null],     // V(0) TView\n *   [{tagName: 'button', attrs ...}, null]    // V(1) TView\n *\n * If this TNode corresponds to an LContainer with a template (e.g. structural\n * directive), the template's TView will be stored here.\n *\n * If this TNode corresponds to an element, tViews will be null .\n * @type {?}\n */\nTNode.prototype.tViews;\n/**\n * The next sibling node. Necessary so we can propagate through the root nodes of a view\n * to insert them or remove them from the DOM.\n * @type {?}\n */\nTNode.prototype.next;\n/**\n * First child of the current node.\n *\n * For component nodes, the child will always be a ContentChild (in same view).\n * For embedded view nodes, the child will be in their child view.\n * @type {?}\n */\nTNode.prototype.child;\n/**\n * Parent node (in the same view only).\n *\n * We need a reference to a node's parent so we can append the node to its parent's native\n * element at the appropriate time.\n *\n * If the parent would be in a different view (e.g. component host), this property will be null.\n * It's important that we don't try to cross component boundaries when retrieving the parent\n * because the parent will change (e.g. index, attrs) depending on where the component was\n * used (and thus shouldn't be stored on TNode). In these cases, we retrieve the parent through\n * LView.node instead (which will be instance-specific).\n *\n * If this is an inline view node (V), the parent will be its container.\n * @type {?}\n */\nTNode.prototype.parent;\n/**\n * If this node is part of an i18n block, it indicates whether this node is part of the DOM.\n * If this node is not part of an i18n block, this field is null.\n * @type {?}\n */\nTNode.prototype.detached;\n/** @type {?} */\nTNode.prototype.stylingTemplate;\n/**\n * List of projected TNodes for a given component host element OR index into the said nodes.\n *\n * For easier discussion assume this example:\n * `<parent>`'s view definition:\n * ```\n * <child id=\"c1\">content1</child>\n * <child id=\"c2\"><span>content2</span></child>\n * ```\n * `<child>`'s view definition:\n * ```\n * <ng-content id=\"cont1\"></ng-content>\n * ```\n *\n * If `Array.isArray(projection)` then `TNode` is a host element:\n * - `projection` stores the content nodes which are to be projected.\n *    - The nodes represent categories defined by the selector: For example:\n *      `<ng-content/><ng-content select=\"abc\"/>` would represent the heads for `<ng-content/>`\n *      and `<ng-content select=\"abc\"/>` respectively.\n *    - The nodes we store in `projection` are heads only, we used `.next` to get their\n *      siblings.\n *    - The nodes `.next` is sorted/rewritten as part of the projection setup.\n *    - `projection` size is equal to the number of projections `<ng-content>`. The size of\n *      `c1` will be `1` because `<child>` has only one `<ng-content>`.\n * - we store `projection` with the host (`c1`, `c2`) rather than the `<ng-content>` (`cont1`)\n *   because the same component (`<child>`) can be used in multiple locations (`c1`, `c2`) and as\n *   a result have different set of nodes to project.\n * - without `projection` it would be difficult to efficiently traverse nodes to be projected.\n *\n * If `typeof projection == 'number'` then `TNode` is a `<ng-content>` element:\n * - `projection` is an index of the host's `projection`Nodes.\n *   - This would return the first head node to project:\n *     `getHost(currentTNode).projection[currentTNode.projection]`.\n * - When projecting nodes the parent node retrieved may be a `<ng-content>` node, in which case\n *   the process is recursive in nature (not implementation).\n * @type {?}\n */\nTNode.prototype.projection;\n/**\n * Static data for an element\n * @record\n */\nexport function TElementNode() { }\n/**\n * Index in the data[] array\n * @type {?}\n */\nTElementNode.prototype.index;\n/** @type {?} */\nTElementNode.prototype.child;\n/**\n * Element nodes will have parents unless they are the first node of a component or\n * embedded view (which means their parent is in a different view and must be\n * retrieved using viewData[HOST_NODE]).\n * @type {?}\n */\nTElementNode.prototype.parent;\n/** @type {?} */\nTElementNode.prototype.tViews;\n/**\n * If this is a component TNode with projection, this will be an array of projected\n * TNodes (see TNode.projection for more info). If it's a regular element node or a\n * component without projection, it will be null.\n * @type {?}\n */\nTElementNode.prototype.projection;\n/**\n * Static data for a text node\n * @record\n */\nexport function TTextNode() { }\n/**\n * Index in the data[] array\n * @type {?}\n */\nTTextNode.prototype.index;\n/** @type {?} */\nTTextNode.prototype.child;\n/**\n * Text nodes will have parents unless they are the first node of a component or\n * embedded view (which means their parent is in a different view and must be\n * retrieved using LView.node).\n * @type {?}\n */\nTTextNode.prototype.parent;\n/** @type {?} */\nTTextNode.prototype.tViews;\n/** @type {?} */\nTTextNode.prototype.projection;\n/**\n * Static data for an LContainer\n * @record\n */\nexport function TContainerNode() { }\n/**\n * Index in the data[] array.\n *\n * If it's -1, this is a dynamically created container node that isn't stored in\n * data[] (e.g. when you inject ViewContainerRef) .\n * @type {?}\n */\nTContainerNode.prototype.index;\n/** @type {?} */\nTContainerNode.prototype.child;\n/**\n * Container nodes will have parents unless:\n *\n * - They are the first node of a component or embedded view\n * - They are dynamically created\n * @type {?}\n */\nTContainerNode.prototype.parent;\n/** @type {?} */\nTContainerNode.prototype.tViews;\n/** @type {?} */\nTContainerNode.prototype.projection;\n/**\n * Static data for an <ng-container>\n * @record\n */\nexport function TElementContainerNode() { }\n/**\n * Index in the LView[] array.\n * @type {?}\n */\nTElementContainerNode.prototype.index;\n/** @type {?} */\nTElementContainerNode.prototype.child;\n/** @type {?} */\nTElementContainerNode.prototype.parent;\n/** @type {?} */\nTElementContainerNode.prototype.tViews;\n/** @type {?} */\nTElementContainerNode.prototype.projection;\n/**\n * Static data for an ICU expression\n * @record\n */\nexport function TIcuContainerNode() { }\n/**\n * Index in the LView[] array.\n * @type {?}\n */\nTIcuContainerNode.prototype.index;\n/** @type {?} */\nTIcuContainerNode.prototype.child;\n/** @type {?} */\nTIcuContainerNode.prototype.parent;\n/** @type {?} */\nTIcuContainerNode.prototype.tViews;\n/** @type {?} */\nTIcuContainerNode.prototype.projection;\n/**\n * Indicates the current active case for an ICU expression.\n * It is null when there is no active case.\n * @type {?}\n */\nTIcuContainerNode.prototype.activeCaseIndex;\n/**\n * Static data for a view\n * @record\n */\nexport function TViewNode() { }\n/**\n * If -1, it's a dynamically created view. Otherwise, it is the view block ID.\n * @type {?}\n */\nTViewNode.prototype.index;\n/** @type {?} */\nTViewNode.prototype.child;\n/** @type {?} */\nTViewNode.prototype.parent;\n/** @type {?} */\nTViewNode.prototype.tViews;\n/** @type {?} */\nTViewNode.prototype.projection;\n/**\n * Static data for an LProjectionNode\n * @record\n */\nexport function TProjectionNode() { }\n/**\n * Index in the data[] array\n * @type {?}\n */\nTProjectionNode.prototype.child;\n/**\n * Projection nodes will have parents unless they are the first node of a component\n * or embedded view (which means their parent is in a different view and must be\n * retrieved using LView.node).\n * @type {?}\n */\nTProjectionNode.prototype.parent;\n/** @type {?} */\nTProjectionNode.prototype.tViews;\n/**\n * Index of the projection node. (See TNode.projection for more info.)\n * @type {?}\n */\nTProjectionNode.prototype.projection;\n/** @typedef {?} */\nvar PropertyAliases;\nexport { PropertyAliases };\n/** @typedef {?} */\nvar PropertyAliasValue;\nexport { PropertyAliasValue };\n/** @typedef {?} */\nvar InitialInputData;\nexport { InitialInputData };\n/** @typedef {?} */\nvar InitialInputs;\nexport { InitialInputs };\n/** @type {?} */\nexport var unusedValueExportToPlacateAjd = 1;\n/** @typedef {?} */\nvar TNodeWithLocalRefs;\nexport { TNodeWithLocalRefs };\n/** @typedef {?} */\nvar LocalRefExtractor;\nexport { LocalRefExtractor };\n//# sourceMappingURL=node.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { assertDefined } from './assert';\nimport { attachPatchData } from './context_discovery';\nimport { callHooks } from './hooks';\nimport { NATIVE, RENDER_PARENT, VIEWS, unusedValueExportToPlacateAjd as unused1 } from './interfaces/container';\nimport { unusedValueExportToPlacateAjd as unused2 } from './interfaces/node';\nimport { unusedValueExportToPlacateAjd as unused3 } from './interfaces/projection';\nimport { isProceduralRenderer, unusedValueExportToPlacateAjd as unused4 } from './interfaces/renderer';\nimport { CLEANUP, CONTAINER_INDEX, FLAGS, HEADER_OFFSET, HOST_NODE, NEXT, PARENT, QUERIES, RENDERER, TVIEW, unusedValueExportToPlacateAjd as unused5 } from './interfaces/view';\nimport { assertNodeType } from './node_assert';\nimport { getNativeByTNode, isLContainer, isRootView, readElementValue, stringify } from './util';\n/** @type {?} */\nvar unusedValueToPlacateAjd = unused1 + unused2 + unused3 + unused4 + unused5;\n/**\n * Retrieves the parent element of a given node.\n * @param {?} tNode\n * @param {?} currentView\n * @return {?}\n */\nexport function getParentNative(tNode, currentView) {\n    if (tNode.parent == null) {\n        return getHostNative(currentView);\n    }\n    else {\n        /** @type {?} */\n        var parentTNode = getFirstParentNative(tNode);\n        return getNativeByTNode(parentTNode, currentView);\n    }\n}\n/**\n * Get the first parent of a node that isn't an IcuContainer TNode\n * @param {?} tNode\n * @return {?}\n */\nfunction getFirstParentNative(tNode) {\n    /** @type {?} */\n    var parent = tNode.parent;\n    while (parent && parent.type === 5 /* IcuContainer */) {\n        parent = parent.parent;\n    }\n    return /** @type {?} */ ((parent));\n}\n/**\n * Gets the host element given a view. Will return null if the current view is an embedded view,\n * which does not have a host element.\n * @param {?} currentView\n * @return {?}\n */\nexport function getHostNative(currentView) {\n    /** @type {?} */\n    var hostTNode = /** @type {?} */ (currentView[HOST_NODE]);\n    return hostTNode && hostTNode.type !== 2 /* View */ ?\n        (/** @type {?} */ (getNativeByTNode(hostTNode, /** @type {?} */ ((currentView[PARENT]))))) :\n        null;\n}\n/**\n * @param {?} tNode\n * @param {?} embeddedView\n * @return {?}\n */\nexport function getLContainer(tNode, embeddedView) {\n    if (tNode.index === -1) {\n        /** @type {?} */\n        var containerHostIndex = embeddedView[CONTAINER_INDEX];\n        return containerHostIndex > -1 ? /** @type {?} */ ((embeddedView[PARENT]))[containerHostIndex] : null;\n    }\n    else {\n        // This is a inline view node (e.g. embeddedViewStart)\n        return /** @type {?} */ (((embeddedView[PARENT]))[/** @type {?} */ ((tNode.parent)).index]);\n    }\n}\n/**\n * Retrieves render parent for a given view.\n * Might be null if a view is not yet attached to any container.\n * @param {?} tViewNode\n * @param {?} view\n * @return {?}\n */\nexport function getContainerRenderParent(tViewNode, view) {\n    /** @type {?} */\n    var container = getLContainer(tViewNode, view);\n    return container ? container[RENDER_PARENT] : null;\n}\n/** @enum {number} */\nvar WalkTNodeTreeAction = {\n    /** node insert in the native environment */\n    Insert: 0,\n    /** node detach from the native environment */\n    Detach: 1,\n    /** node destruction using the renderer's API */\n    Destroy: 2,\n};\n/** *\n * Stack used to keep track of projection nodes in walkTNodeTree.\n *\n * This is deliberately created outside of walkTNodeTree to avoid allocating\n * a new array each time the function is called. Instead the array will be\n * re-used by each invocation. This works because the function is not reentrant.\n  @type {?} */\nvar projectionNodeStack = [];\n/**\n * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n * one found, or on all of them.\n *\n * @param {?} viewToWalk the view to walk\n * @param {?} action identifies the action to be performed on the elements\n * @param {?} renderer the current renderer.\n * @param {?} renderParent Optional the render parent node to be set in all LContainers found,\n * required for action modes Insert and Destroy.\n * @param {?=} beforeNode Optional the node before which elements should be added, required for action\n * Insert.\n * @return {?}\n */\nfunction walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n    /** @type {?} */\n    var rootTNode = /** @type {?} */ (viewToWalk[TVIEW].node);\n    /** @type {?} */\n    var projectionNodeIndex = -1;\n    /** @type {?} */\n    var currentView = viewToWalk;\n    /** @type {?} */\n    var tNode = /** @type {?} */ (rootTNode.child);\n    while (tNode) {\n        /** @type {?} */\n        var nextTNode = null;\n        if (tNode.type === 3 /* Element */) {\n            executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n            /** @type {?} */\n            var nodeOrContainer = currentView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                // This element has an LContainer, and its comment needs to be handled\n                executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            /** @type {?} */\n            var lContainer = /** @type {?} */ (((currentView))[tNode.index]);\n            executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n            if (renderParent)\n                lContainer[RENDER_PARENT] = renderParent;\n            if (lContainer[VIEWS].length) {\n                currentView = lContainer[VIEWS][0];\n                nextTNode = currentView[TVIEW].node;\n                // When the walker enters a container, then the beforeNode has to become the local native\n                // comment node.\n                beforeNode = lContainer[NATIVE];\n            }\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            /** @type {?} */\n            var componentView = findComponentView(/** @type {?} */ ((currentView)));\n            /** @type {?} */\n            var componentHost = /** @type {?} */ (componentView[HOST_NODE]);\n            /** @type {?} */\n            var head = (/** @type {?} */ (componentHost.projection))[/** @type {?} */ (tNode.projection)];\n            // Must store both the TNode and the view because this projection node could be nested\n            // deeply inside embedded views, and we need to get back down to this particular nested view.\n            projectionNodeStack[++projectionNodeIndex] = tNode;\n            projectionNodeStack[++projectionNodeIndex] = /** @type {?} */ ((currentView));\n            if (head) {\n                currentView = /** @type {?} */ ((componentView[PARENT]));\n                nextTNode = /** @type {?} */ (currentView[TVIEW].data[head.index]);\n            }\n        }\n        else {\n            // Otherwise, this is a View or an ElementContainer\n            nextTNode = tNode.child;\n        }\n        if (nextTNode === null) {\n            // this last node was projected, we need to get back down to its projection node\n            if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                currentView = /** @type {?} */ (projectionNodeStack[projectionNodeIndex--]);\n                tNode = /** @type {?} */ (projectionNodeStack[projectionNodeIndex--]);\n            }\n            nextTNode = tNode.next;\n            /**\n                   * Find the next node in the TNode tree, taking into account the place where a node is\n                   * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                   *\n                   * If there is no sibling node, then it goes to the next sibling of the parent node...\n                   * until it reaches rootNode (at which point null is returned).\n                   */\n            while (!nextTNode) {\n                // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                tNode = tNode.parent || currentView[TVIEW].node;\n                if (tNode === null || tNode === rootTNode)\n                    return null;\n                // When exiting a container, the beforeNode must be restored to the previous value\n                if (tNode.type === 0 /* Container */) {\n                    currentView = /** @type {?} */ ((currentView[PARENT]));\n                    beforeNode = currentView[tNode.index][NATIVE];\n                }\n                if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                    currentView = /** @type {?} */ (currentView[NEXT]);\n                    nextTNode = currentView[TVIEW].node;\n                }\n                else {\n                    nextTNode = tNode.next;\n                }\n            }\n        }\n        tNode = nextTNode;\n    }\n}\n/**\n * Given a current view, finds the nearest component's host (LElement).\n *\n * @param {?} lView LView for which we want a host element node\n * @return {?} The host node\n */\nexport function findComponentView(lView) {\n    /** @type {?} */\n    var rootTNode = lView[HOST_NODE];\n    while (rootTNode && rootTNode.type === 2 /* View */) {\n        ngDevMode && assertDefined(lView[PARENT], 'lView.parent');\n        lView = /** @type {?} */ ((lView[PARENT]));\n        rootTNode = lView[HOST_NODE];\n    }\n    return lView;\n}\n/**\n * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n * being passed as an argument.\n * @param {?} action\n * @param {?} renderer\n * @param {?} parent\n * @param {?} node\n * @param {?=} beforeNode\n * @return {?}\n */\nfunction executeNodeAction(action, renderer, parent, node, beforeNode) {\n    if (action === 0 /* Insert */) {\n        isProceduralRenderer(/** @type {?} */ ((renderer))) ?\n            (/** @type {?} */ (renderer)).insertBefore(/** @type {?} */ ((parent)), node, /** @type {?} */ (beforeNode)) : /** @type {?} */ ((parent)).insertBefore(node, /** @type {?} */ (beforeNode), true);\n    }\n    else if (action === 1 /* Detach */) {\n        isProceduralRenderer(/** @type {?} */ ((renderer))) ?\n            (/** @type {?} */ (renderer)).removeChild(/** @type {?} */ ((parent)), node) : /** @type {?} */ ((parent)).removeChild(node);\n    }\n    else if (action === 2 /* Destroy */) {\n        ngDevMode && ngDevMode.rendererDestroyNode++; /** @type {?} */\n        (((/** @type {?} */ (renderer)).destroyNode))(node);\n    }\n}\n/**\n * @param {?} value\n * @param {?} renderer\n * @return {?}\n */\nexport function createTextNode(value, renderer) {\n    return isProceduralRenderer(renderer) ? renderer.createText(stringify(value)) :\n        renderer.createTextNode(stringify(value));\n}\n/**\n * @param {?} viewToWalk\n * @param {?} insertMode\n * @param {?=} beforeNode\n * @return {?}\n */\nexport function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n    /** @type {?} */\n    var renderParent = getContainerRenderParent(/** @type {?} */ (viewToWalk[TVIEW].node), viewToWalk);\n    ngDevMode && assertNodeType(/** @type {?} */ (viewToWalk[TVIEW].node), 2 /* View */);\n    if (renderParent) {\n        /** @type {?} */\n        var renderer = viewToWalk[RENDERER];\n        walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n    }\n}\n/**\n * Traverses down and up the tree of views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n * @param {?} rootView The view to destroy\n * @return {?}\n */\nexport function destroyViewTree(rootView) {\n    // If the view has no children, we can clean it up and return early.\n    if (rootView[TVIEW].childIndex === -1) {\n        return cleanUpView(rootView);\n    }\n    /** @type {?} */\n    var viewOrContainer = getLViewChild(rootView);\n    while (viewOrContainer) {\n        /** @type {?} */\n        var next = null;\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            /** @type {?} */\n            var view = /** @type {?} */ (viewOrContainer);\n            if (view[TVIEW].childIndex > -1)\n                next = getLViewChild(view);\n        }\n        else {\n            /** @type {?} */\n            var container = /** @type {?} */ (viewOrContainer);\n            if (container[VIEWS].length)\n                next = container[VIEWS][0];\n        }\n        if (next == null) {\n            // Only clean up view when moving to the side or up, as destroy hooks\n            // should be called in order from the bottom up.\n            while (viewOrContainer && !/** @type {?} */ ((viewOrContainer))[NEXT] && viewOrContainer !== rootView) {\n                cleanUpView(viewOrContainer);\n                viewOrContainer = getParentState(viewOrContainer, rootView);\n            }\n            cleanUpView(viewOrContainer || rootView);\n            next = viewOrContainer && /** @type {?} */ ((viewOrContainer))[NEXT];\n        }\n        viewOrContainer = next;\n    }\n}\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param {?} lView The view to insert\n * @param {?} lContainer The container into which the view should be inserted\n * @param {?} parentView The new parent of the inserted view\n * @param {?} index The index at which to insert the view\n * @param {?} containerIndex The index of the container node, if dynamic\n * @return {?}\n */\nexport function insertView(lView, lContainer, parentView, index, containerIndex) {\n    /** @type {?} */\n    var views = lContainer[VIEWS];\n    if (index > 0) {\n        // This is a new view, we need to add it to the children.\n        views[index - 1][NEXT] = lView;\n    }\n    if (index < views.length) {\n        lView[NEXT] = views[index];\n        views.splice(index, 0, lView);\n    }\n    else {\n        views.push(lView);\n        lView[NEXT] = null;\n    }\n    // Dynamically inserted views need a reference to their parent container's host so it's\n    // possible to jump from a view to its container's next when walking the node tree.\n    if (containerIndex > -1) {\n        lView[CONTAINER_INDEX] = containerIndex;\n        lView[PARENT] = parentView;\n    }\n    // Notify query that a new view has been added\n    if (lView[QUERIES]) {\n        /** @type {?} */ ((lView[QUERIES])).insertView(index);\n    }\n    // Sets the attached flag\n    lView[FLAGS] |= 8 /* Attached */;\n}\n/**\n * Detaches a view from a container.\n *\n * This method splices the view from the container's array of active views. It also\n * removes the view's elements from the DOM.\n *\n * @param {?} lContainer The container from which to detach a view\n * @param {?} removeIndex The index of the view to detach\n * @param {?} detached Whether or not this view is already detached.\n * @return {?}\n */\nexport function detachView(lContainer, removeIndex, detached) {\n    /** @type {?} */\n    var views = lContainer[VIEWS];\n    /** @type {?} */\n    var viewToDetach = views[removeIndex];\n    if (removeIndex > 0) {\n        views[removeIndex - 1][NEXT] = /** @type {?} */ (viewToDetach[NEXT]);\n    }\n    views.splice(removeIndex, 1);\n    if (!detached) {\n        addRemoveViewFromContainer(viewToDetach, false);\n    }\n    if (viewToDetach[QUERIES]) {\n        /** @type {?} */ ((viewToDetach[QUERIES])).removeView();\n    }\n    viewToDetach[CONTAINER_INDEX] = -1;\n    viewToDetach[PARENT] = null;\n    // Unsets the attached flag\n    viewToDetach[FLAGS] &= ~8 /* Attached */;\n}\n/**\n * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n *\n * @param {?} lContainer The container from which to remove a view\n * @param {?} containerHost\n * @param {?} removeIndex The index of the view to remove\n * @return {?}\n */\nexport function removeView(lContainer, containerHost, removeIndex) {\n    /** @type {?} */\n    var view = lContainer[VIEWS][removeIndex];\n    detachView(lContainer, removeIndex, !!containerHost.detached);\n    destroyLView(view);\n}\n/**\n * Gets the child of the given LView\n * @param {?} lView\n * @return {?}\n */\nexport function getLViewChild(lView) {\n    /** @type {?} */\n    var childIndex = lView[TVIEW].childIndex;\n    return childIndex === -1 ? null : lView[childIndex];\n}\n/**\n * A standalone function which destroys an LView,\n * conducting cleanup (e.g. removing listeners, calling onDestroys).\n *\n * @param {?} view The view to be destroyed.\n * @return {?}\n */\nexport function destroyLView(view) {\n    /** @type {?} */\n    var renderer = view[RENDERER];\n    if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n        walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n    }\n    destroyViewTree(view);\n    // Sets the destroyed flag\n    view[FLAGS] |= 32 /* Destroyed */;\n}\n/**\n * Determines which LViewOrLContainer to jump to when traversing back up the\n * tree in destroyViewTree.\n *\n * Normally, the view's parent LView should be checked, but in the case of\n * embedded views, the container (which is the view node's parent, but not the\n * LView's parent) needs to be checked for a possible next property.\n *\n * @param {?} state The LViewOrLContainer for which we need a parent state\n * @param {?} rootView The rootView, so we don't propagate too far up the view tree\n * @return {?} The correct parent LViewOrLContainer\n */\nexport function getParentState(state, rootView) {\n    /** @type {?} */\n    var tNode;\n    if (state.length >= HEADER_OFFSET && (tNode = /** @type {?} */ (((/** @type {?} */ (state))))[HOST_NODE]) &&\n        tNode.type === 2 /* View */) {\n        // if it's an embedded view, the state needs to go up to the container, in case the\n        // container has a next\n        return /** @type {?} */ (getLContainer(/** @type {?} */ (tNode), /** @type {?} */ (state)));\n    }\n    else {\n        // otherwise, use parent view for containers or component views\n        return state[PARENT] === rootView ? null : state[PARENT];\n    }\n}\n/**\n * Removes all listeners and call all onDestroys in a given view.\n *\n * @param {?} viewOrContainer\n * @return {?}\n */\nfunction cleanUpView(viewOrContainer) {\n    if ((/** @type {?} */ (viewOrContainer)).length >= HEADER_OFFSET) {\n        /** @type {?} */\n        var view = /** @type {?} */ (viewOrContainer);\n        removeListeners(view);\n        executeOnDestroys(view);\n        executePipeOnDestroys(view);\n        // For component views only, the local renderer is destroyed as clean up time.\n        if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n            ngDevMode && ngDevMode.rendererDestroy++;\n            (/** @type {?} */ (view[RENDERER])).destroy();\n        }\n    }\n}\n/**\n * Removes listeners and unsubscribes from output subscriptions\n * @param {?} lView\n * @return {?}\n */\nfunction removeListeners(lView) {\n    /** @type {?} */\n    var cleanup = /** @type {?} */ ((lView[TVIEW].cleanup));\n    if (cleanup != null) {\n        for (var i = 0; i < cleanup.length - 1; i += 2) {\n            if (typeof cleanup[i] === 'string') {\n                /** @type {?} */\n                var native = readElementValue(lView[cleanup[i + 1]]);\n                /** @type {?} */\n                var listener = /** @type {?} */ ((lView[CLEANUP]))[cleanup[i + 2]];\n                native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                i += 2;\n            }\n            else if (typeof cleanup[i] === 'number') {\n                /** @type {?} */\n                var cleanupFn = /** @type {?} */ ((lView[CLEANUP]))[cleanup[i]];\n                cleanupFn();\n            }\n            else {\n                /** @type {?} */\n                var context = /** @type {?} */ ((lView[CLEANUP]))[cleanup[i + 1]];\n                cleanup[i].call(context);\n            }\n        }\n        lView[CLEANUP] = null;\n    }\n}\n/**\n * Calls onDestroy hooks for this view\n * @param {?} view\n * @return {?}\n */\nfunction executeOnDestroys(view) {\n    /** @type {?} */\n    var tView = view[TVIEW];\n    /** @type {?} */\n    var destroyHooks;\n    if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n        callHooks(view, destroyHooks);\n    }\n}\n/**\n * Calls pipe destroy hooks for this view\n * @param {?} lView\n * @return {?}\n */\nfunction executePipeOnDestroys(lView) {\n    /** @type {?} */\n    var pipeDestroyHooks = lView[TVIEW] && lView[TVIEW].pipeDestroyHooks;\n    if (pipeDestroyHooks) {\n        callHooks(/** @type {?} */ ((lView)), pipeDestroyHooks);\n    }\n}\n/**\n * @param {?} tNode\n * @param {?} currentView\n * @return {?}\n */\nexport function getRenderParent(tNode, currentView) {\n    if (canInsertNativeNode(tNode, currentView)) {\n        // If we are asked for a render parent of the root component we need to do low-level DOM\n        // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n        // parent of the topmost host node if the root component injects ViewContainerRef.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        /** @type {?} */\n        var hostTNode = currentView[HOST_NODE];\n        /** @type {?} */\n        var tNodeParent = tNode.parent;\n        if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n            tNode = getHighestElementContainer(tNodeParent);\n        }\n        return tNode.parent == null && /** @type {?} */ ((hostTNode)).type === 2 /* View */ ?\n            getContainerRenderParent(/** @type {?} */ (hostTNode), currentView) : /** @type {?} */ (getParentNative(tNode, currentView));\n    }\n    return null;\n}\n/**\n * @param {?} tNode\n * @return {?}\n */\nfunction canInsertNativeChildOfElement(tNode) {\n    // If the parent is null, then we are inserting across views. This happens when we\n    // insert a root element of the component view into the component host element and it\n    // should always be eager.\n    if (tNode.parent == null ||\n        // We should also eagerly insert if the parent is a regular, non-component element\n        // since we know that this relationship will never be broken.\n        tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n        return true;\n    }\n    // Parent is a Component. Component's content nodes are not inserted immediately\n    // because they will be projected, and so doing insert at this point would be wasteful.\n    // Since the projection would than move it to its final destination.\n    return false;\n}\n/**\n * We might delay insertion of children for a given view if it is disconnected.\n * This might happen for 2 main reasons:\n * - view is not inserted into any container (view was created but not inserted yet)\n * - view is inserted into a container but the container itself is not inserted into the DOM\n * (container might be part of projection or child of a view that is not inserted yet).\n *\n * In other words we can insert children of a given view if this view was inserted into a container\n * and\n * the container itself has its render parent determined.\n * @param {?} viewTNode\n * @param {?} view\n * @return {?}\n */\nfunction canInsertNativeChildOfView(viewTNode, view) {\n    /** @type {?} */\n    var container = /** @type {?} */ ((getLContainer(viewTNode, view)));\n    if (container == null || container[RENDER_PARENT] == null) {\n        // The `View` is not inserted into a `Container` or the parent `Container`\n        // itself is disconnected. So we have to delay.\n        return false;\n    }\n    // The parent `Container` is in inserted state, so we can eagerly insert into\n    // this location.\n    return true;\n}\n/**\n * Returns whether a native element can be inserted into the given parent.\n *\n * There are two reasons why we may not be able to insert a element immediately.\n * - Projection: When creating a child content element of a component, we have to skip the\n *   insertion because the content of a component will be projected.\n *   `<component><content>delayed due to projection</content></component>`\n * - Parent container is disconnected: This can happen when we are inserting a view into\n *   parent container, which itself is disconnected. For example the parent container is part\n *   of a View which has not be inserted or is mare for projection but has not been inserted\n *   into destination.\n *\n *\n * @param {?} tNode The tNode of the node that we want to insert.\n * @param {?} currentView Current LView being processed.\n * @return {?} boolean Whether the node should be inserted now (or delayed until later).\n */\nexport function canInsertNativeNode(tNode, currentView) {\n    /** @type {?} */\n    var currentNode = tNode;\n    /** @type {?} */\n    var parent = tNode.parent;\n    if (tNode.parent) {\n        if (tNode.parent.type === 4 /* ElementContainer */) {\n            currentNode = getHighestElementContainer(tNode);\n            parent = currentNode.parent;\n        }\n        else if (tNode.parent.type === 5 /* IcuContainer */) {\n            currentNode = getFirstParentNative(currentNode);\n            parent = currentNode.parent;\n        }\n    }\n    if (parent === null)\n        parent = currentView[HOST_NODE];\n    if (parent && parent.type === 2 /* View */) {\n        return canInsertNativeChildOfView(/** @type {?} */ (parent), currentView);\n    }\n    else {\n        // Parent is a regular element or a component\n        return canInsertNativeChildOfElement(currentNode);\n    }\n}\n/**\n * Inserts a native node before another native node for a given parent using {\\@link Renderer3}.\n * This is a utility function that can be used when native nodes were determined - it abstracts an\n * actual renderer being used.\n * @param {?} renderer\n * @param {?} parent\n * @param {?} child\n * @param {?} beforeNode\n * @return {?}\n */\nexport function nativeInsertBefore(renderer, parent, child, beforeNode) {\n    if (isProceduralRenderer(renderer)) {\n        renderer.insertBefore(parent, child, beforeNode);\n    }\n    else {\n        parent.insertBefore(child, beforeNode, true);\n    }\n}\n/**\n * Returns a native parent of a given native node.\n * @param {?} renderer\n * @param {?} node\n * @return {?}\n */\nexport function nativeParentNode(renderer, node) {\n    return /** @type {?} */ ((isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode));\n}\n/**\n * Returns a native sibling of a given native node.\n * @param {?} renderer\n * @param {?} node\n * @return {?}\n */\nexport function nativeNextSibling(renderer, node) {\n    return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n}\n/**\n * Appends the `child` element to the `parent`.\n *\n * The element insertion might be delayed {\\@link canInsertNativeNode}.\n *\n * @param {?=} childEl The child that should be appended\n * @param {?=} childTNode The TNode of the child element\n * @param {?=} currentView The current LView\n * @return {?} Whether or not the child was appended\n */\nexport function appendChild(childEl, childTNode, currentView) {\n    if (childEl === void 0) { childEl = null; }\n    if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n        /** @type {?} */\n        var renderer = currentView[RENDERER];\n        /** @type {?} */\n        var parentEl = getParentNative(childTNode, currentView);\n        /** @type {?} */\n        var parentTNode = childTNode.parent || /** @type {?} */ ((currentView[HOST_NODE]));\n        if (parentTNode.type === 2 /* View */) {\n            /** @type {?} */\n            var lContainer = /** @type {?} */ (getLContainer(/** @type {?} */ (parentTNode), currentView));\n            /** @type {?} */\n            var views = lContainer[VIEWS];\n            /** @type {?} */\n            var index = views.indexOf(currentView);\n            nativeInsertBefore(renderer, /** @type {?} */ ((lContainer[RENDER_PARENT])), childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */) {\n            /** @type {?} */\n            var renderParent = /** @type {?} */ ((getRenderParent(childTNode, currentView)));\n            nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n        }\n        else if (parentTNode.type === 5 /* IcuContainer */) {\n            /** @type {?} */\n            var icuAnchorNode = /** @type {?} */ (((getNativeByTNode(/** @type {?} */ ((childTNode.parent)), currentView))));\n            nativeInsertBefore(renderer, /** @type {?} */ (parentEl), childEl, icuAnchorNode);\n        }\n        else {\n            isProceduralRenderer(renderer) ? renderer.appendChild(/** @type {?} */ (((parentEl))), childEl) : /** @type {?} */ ((parentEl)).appendChild(childEl);\n        }\n        return true;\n    }\n    return false;\n}\n/**\n * Gets the top-level ng-container if ng-containers are nested.\n *\n * @param {?} ngContainer The TNode of the starting ng-container\n * @return {?} tNode The TNode of the highest level ng-container\n */\nfunction getHighestElementContainer(ngContainer) {\n    while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n        ngContainer = ngContainer.parent;\n    }\n    return ngContainer;\n}\n/**\n * @param {?} index\n * @param {?} views\n * @param {?} containerNative\n * @return {?}\n */\nexport function getBeforeNodeForView(index, views, containerNative) {\n    if (index + 1 < views.length) {\n        /** @type {?} */\n        var view = /** @type {?} */ (views[index + 1]);\n        /** @type {?} */\n        var viewTNode = /** @type {?} */ (view[HOST_NODE]);\n        return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n    }\n    else {\n        return containerNative;\n    }\n}\n/**\n * Removes the `child` element from the DOM if not in view and not projected.\n *\n * @param {?} childTNode The TNode of the child to remove\n * @param {?} childEl The child that should be removed\n * @param {?} currentView The current LView\n * @return {?} Whether or not the child was removed\n */\nexport function removeChild(childTNode, childEl, currentView) {\n    // We only remove the element if not in View or not projected.\n    if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n        /** @type {?} */\n        var parentNative = /** @type {?} */ (((getParentNative(childTNode, currentView))));\n        /** @type {?} */\n        var renderer = currentView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.removeChild(/** @type {?} */ (parentNative), childEl) : /** @type {?} */ ((parentNative)).removeChild(childEl);\n        return true;\n    }\n    return false;\n}\n/**\n * Appends a projected node to the DOM, or in the case of a projected container,\n * appends the nodes from all of the container's active views to the DOM.\n *\n * @param {?} projectedTNode The TNode to be projected\n * @param {?} tProjectionNode The projection (ng-content) TNode\n * @param {?} currentView Current LView\n * @param {?} projectionView Projection view (view above current)\n * @return {?}\n */\nexport function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n    /** @type {?} */\n    var native = getNativeByTNode(projectedTNode, projectionView);\n    appendChild(native, tProjectionNode, currentView);\n    // the projected contents are processed while in the shadow view (which is the currentView)\n    // therefore we need to extract the view where the host element lives since it's the\n    // logical container of the content projected views\n    attachPatchData(native, projectionView);\n    /** @type {?} */\n    var renderParent = getRenderParent(tProjectionNode, currentView);\n    /** @type {?} */\n    var nodeOrContainer = projectionView[projectedTNode.index];\n    if (projectedTNode.type === 0 /* Container */) {\n        // The node we are adding is a container and we are adding it to an element which\n        // is not a component (no more re-projection).\n        // Alternatively a container is projected at the root of a component's template\n        // and can't be re-projected (as not content of any component).\n        // Assign the final projection location in those cases.\n        nodeOrContainer[RENDER_PARENT] = renderParent;\n        /** @type {?} */\n        var views = nodeOrContainer[VIEWS];\n        for (var i = 0; i < views.length; i++) {\n            addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n        }\n    }\n    else {\n        if (projectedTNode.type === 4 /* ElementContainer */) {\n            /** @type {?} */\n            var ngContainerChildTNode = /** @type {?} */ (projectedTNode.child);\n            while (ngContainerChildTNode) {\n                appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                ngContainerChildTNode = ngContainerChildTNode.next;\n            }\n        }\n        if (isLContainer(nodeOrContainer)) {\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n        }\n    }\n}\n//# sourceMappingURL=node_manipulation.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport './ng_dev_mode';\nimport { assertDefined, assertNotEqual } from './assert';\nimport { unusedValueExportToPlacateAjd as unused1 } from './interfaces/node';\nimport { NG_PROJECT_AS_ATTR_NAME, unusedValueExportToPlacateAjd as unused2 } from './interfaces/projection';\n/** @type {?} */\nvar unusedValueToPlacateAjd = unused1 + unused2;\n/**\n * @param {?} nodeClassAttrVal\n * @param {?} cssClassToMatch\n * @return {?}\n */\nfunction isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n    /** @type {?} */\n    var nodeClassesLen = nodeClassAttrVal.length;\n    /** @type {?} */\n    var matchIndex = /** @type {?} */ ((nodeClassAttrVal)).indexOf(cssClassToMatch);\n    /** @type {?} */\n    var matchEndIdx = matchIndex + cssClassToMatch.length;\n    if (matchIndex === -1 // no match\n        || (matchIndex > 0 && /** @type {?} */ ((nodeClassAttrVal))[matchIndex - 1] !== ' ') // no space before\n        ||\n            (matchEndIdx < nodeClassesLen && /** @type {?} */ ((nodeClassAttrVal))[matchEndIdx] !== ' ')) // no space after\n     {\n        return false;\n    }\n    return true;\n}\n/**\n * A utility function to match an Ivy node static data against a simple CSS selector\n *\n * @param {?} tNode\n * @param {?} selector\n * @return {?} true if node matches the selector.\n */\nexport function isNodeMatchingSelector(tNode, selector) {\n    ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n    /** @type {?} */\n    var mode = 4 /* ELEMENT */;\n    /** @type {?} */\n    var nodeAttrs = /** @type {?} */ ((tNode.attrs));\n    /** @type {?} */\n    var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n    /** @type {?} */\n    var skipToNextSelector = false;\n    for (var i = 0; i < selector.length; i++) {\n        /** @type {?} */\n        var current = selector[i];\n        if (typeof current === 'number') {\n            // If we finish processing a :not selector and it hasn't failed, return false\n            if (!skipToNextSelector && !isPositive(mode) && !isPositive(/** @type {?} */ (current))) {\n                return false;\n            }\n            // If we are skipping to the next :not() and this mode flag is positive,\n            // it's a part of the current :not() selector, and we should keep skipping\n            if (skipToNextSelector && isPositive(current))\n                continue;\n            skipToNextSelector = false;\n            mode = (/** @type {?} */ (current)) | (mode & 1 /* NOT */);\n            continue;\n        }\n        if (skipToNextSelector)\n            continue;\n        if (mode & 4 /* ELEMENT */) {\n            mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n            if (current !== '' && current !== tNode.tagName || current === '' && selector.length === 1) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n            }\n        }\n        else {\n            /** @type {?} */\n            var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n            /** @type {?} */\n            var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n            if (attrIndexInNode === -1) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n                continue;\n            }\n            /** @type {?} */\n            var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n            if (selectorAttrValue !== '') {\n                /** @type {?} */\n                var nodeAttrValue = void 0;\n                /** @type {?} */\n                var maybeAttrName = nodeAttrs[attrIndexInNode];\n                if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                    nodeAttrValue = '';\n                }\n                else {\n                    ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                    nodeAttrValue = /** @type {?} */ (nodeAttrs[attrIndexInNode + 1]);\n                }\n                if (mode & 8 /* CLASS */ &&\n                    !isCssClassMatching(/** @type {?} */ (nodeAttrValue), /** @type {?} */ (selectorAttrValue)) ||\n                    mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n        }\n    }\n    return isPositive(mode) || skipToNextSelector;\n}\n/**\n * @param {?} mode\n * @return {?}\n */\nfunction isPositive(mode) {\n    return (mode & 1 /* NOT */) === 0;\n}\n/**\n * Examines an attributes definition array from a node to find the index of the\n * attribute with the specified name.\n *\n * NOTE: Will not find namespaced attributes.\n *\n * @param {?} name the name of the attribute to find\n * @param {?} attrs the attribute array to examine\n * @return {?}\n */\nfunction findAttrIndexInNode(name, attrs) {\n    if (attrs === null)\n        return -1;\n    /** @type {?} */\n    var selectOnlyMode = false;\n    /** @type {?} */\n    var i = 0;\n    while (i < attrs.length) {\n        /** @type {?} */\n        var maybeAttrName = attrs[i];\n        if (maybeAttrName === name) {\n            return i;\n        }\n        else if (maybeAttrName === 0 /* NamespaceURI */) {\n            // NOTE(benlesh): will not find namespaced attributes. This is by design.\n            i += 4;\n        }\n        else {\n            if (maybeAttrName === 1 /* SelectOnly */) {\n                selectOnlyMode = true;\n            }\n            i += selectOnlyMode ? 1 : 2;\n        }\n    }\n    return -1;\n}\n/**\n * @param {?} tNode\n * @param {?} selector\n * @return {?}\n */\nexport function isNodeMatchingSelectorList(tNode, selector) {\n    for (var i = 0; i < selector.length; i++) {\n        if (isNodeMatchingSelector(tNode, selector[i])) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} tNode\n * @return {?}\n */\nexport function getProjectAsAttrValue(tNode) {\n    /** @type {?} */\n    var nodeAttrs = tNode.attrs;\n    if (nodeAttrs != null) {\n        /** @type {?} */\n        var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n        // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n        // (attribute names are stored at even indexes)\n        if ((ngProjectAsAttrIdx & 1) === 0) {\n            return /** @type {?} */ (nodeAttrs[ngProjectAsAttrIdx + 1]);\n        }\n    }\n    return null;\n}\n/**\n * Checks a given node against matching selectors and returns\n * selector index (or 0 if none matched).\n *\n * This function takes into account the ngProjectAs attribute: if present its value will be compared\n * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n * @param {?} tNode\n * @param {?} selectors\n * @param {?} textSelectors\n * @return {?}\n */\nexport function matchingSelectorIndex(tNode, selectors, textSelectors) {\n    /** @type {?} */\n    var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n    for (var i = 0; i < selectors.length; i++) {\n        // if a node has the ngProjectAs attribute match it against unparsed selector\n        // match a node against a parsed selector only if ngProjectAs attribute is not present\n        if (ngProjectAsAttrVal === textSelectors[i] ||\n            ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n            return i + 1; // first matching selector \"captures\" a given node\n        }\n    }\n    return 0;\n}\n//# sourceMappingURL=node_selector_matcher.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Combines the binding value and a factory for an animation player.\n *\n * Used to bind a player to an element template binding (currently only\n * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n * supported). The provided `factoryFn` function will be run once all\n * the associated bindings have been evaluated on the element and is\n * designed to return a player which will then be placed on the element.\n *\n * @template T\n * @param {?} factoryFn The function that is used to create a player\n *   once all the rendering-related (styling values) have been\n *   processed for the element binding.\n * @param {?} value The raw value that will be exposed to the binding\n *   so that the binding can update its internal values when\n *   any changes are evaluated.\n * @return {?}\n */\nexport function bindPlayerFactory(factoryFn, value) {\n    return /** @type {?} */ (new BoundPlayerFactory(factoryFn, value));\n}\n/**\n * @template T\n */\nvar /**\n * @template T\n */\nBoundPlayerFactory = /** @class */ (function () {\n    function BoundPlayerFactory(fn, value) {\n        this.fn = fn;\n        this.value = value;\n    }\n    return BoundPlayerFactory;\n}());\n/**\n * @template T\n */\nexport { BoundPlayerFactory };\nif (false) {\n    /** @type {?} */\n    BoundPlayerFactory.prototype.__brand__;\n    /** @type {?} */\n    BoundPlayerFactory.prototype.fn;\n    /** @type {?} */\n    BoundPlayerFactory.prototype.value;\n}\n//# sourceMappingURL=player_factory.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar CorePlayerHandler = /** @class */ (function () {\n    function CorePlayerHandler() {\n        this._players = [];\n    }\n    /**\n     * @return {?}\n     */\n    CorePlayerHandler.prototype.flushPlayers = /**\n     * @return {?}\n     */\n    function () {\n        for (var i = 0; i < this._players.length; i++) {\n            /** @type {?} */\n            var player = this._players[i];\n            if (!player.parent && player.state === 0 /* Pending */) {\n                player.play();\n            }\n        }\n        this._players.length = 0;\n    };\n    /**\n     * @param {?} player\n     * @return {?}\n     */\n    CorePlayerHandler.prototype.queuePlayer = /**\n     * @param {?} player\n     * @return {?}\n     */\n    function (player) { this._players.push(player); };\n    return CorePlayerHandler;\n}());\nexport { CorePlayerHandler };\nif (false) {\n    /** @type {?} */\n    CorePlayerHandler.prototype._players;\n}\n//# sourceMappingURL=core_player_handler.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nimport '../ng_dev_mode';\nimport { getContext } from '../context_discovery';\nimport { ACTIVE_INDEX } from '../interfaces/container';\nimport { FLAGS, HEADER_OFFSET, HOST } from '../interfaces/view';\nimport { getTNode } from '../util';\nimport { CorePlayerHandler } from './core_player_handler';\n/**\n * @param {?=} element\n * @param {?=} sanitizer\n * @param {?=} initialStylingValues\n * @return {?}\n */\nexport function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n    return [\n        null,\n        // PlayerContext\n        sanitizer || null,\n        // StyleSanitizer\n        initialStylingValues || [null],\n        0,\n        0,\n        // ClassOffset\n        element || null,\n        null,\n        null\n    ];\n}\n/**\n * Used clone a copy of a pre-computed template of a styling context.\n *\n * A pre-computed template is designed to be computed once for a given element\n * (instructions.ts has logic for caching this).\n * @param {?} element\n * @param {?} templateStyleContext\n * @return {?}\n */\nexport function allocStylingContext(element, templateStyleContext) {\n    /** @type {?} */\n    var context = /** @type {?} */ ((templateStyleContext.slice()));\n    context[5 /* ElementPosition */] = element;\n    return context;\n}\n/**\n * Retrieve the `StylingContext` at a given index.\n *\n * This method lazily creates the `StylingContext`. This is because in most cases\n * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n * which would create unnecessary memory pressure.\n *\n * @param {?} index Index of the style allocation. See: `elementStyling`.\n * @param {?} viewData The view to search for the styling context\n * @return {?}\n */\nexport function getStylingContext(index, viewData) {\n    /** @type {?} */\n    var storageIndex = index + HEADER_OFFSET;\n    /** @type {?} */\n    var slotValue = viewData[storageIndex];\n    /** @type {?} */\n    var wrapper = viewData;\n    while (Array.isArray(slotValue)) {\n        wrapper = slotValue;\n        slotValue = /** @type {?} */ (slotValue[HOST]);\n    }\n    if (isStylingContext(wrapper)) {\n        return /** @type {?} */ (wrapper);\n    }\n    else {\n        /** @type {?} */\n        var stylingTemplate = getTNode(index, viewData).stylingTemplate;\n        if (wrapper !== viewData) {\n            storageIndex = HOST;\n        }\n        return wrapper[storageIndex] = stylingTemplate ?\n            allocStylingContext(slotValue, stylingTemplate) :\n            createEmptyStylingContext(slotValue);\n    }\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isStylingContext(value) {\n    // Not an LView or an LContainer\n    return typeof value[FLAGS] !== 'number' && typeof value[ACTIVE_INDEX] !== 'number';\n}\n/**\n * @param {?} playerContext\n * @param {?} rootContext\n * @param {?} element\n * @param {?} player\n * @param {?} playerContextIndex\n * @param {?=} ref\n * @return {?}\n */\nexport function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n    ref = ref || element;\n    if (playerContextIndex) {\n        playerContext[playerContextIndex] = player;\n    }\n    else {\n        playerContext.push(player);\n    }\n    if (player) {\n        player.addEventListener(200 /* Destroyed */, function () {\n            /** @type {?} */\n            var index = playerContext.indexOf(player);\n            /** @type {?} */\n            var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            // if the player is being removed from the factory side of the context\n            // (which is where the [style] and [class] bindings do their thing) then\n            // that side of the array cannot be resized since the respective bindings\n            // have pointer index values that point to the associated factory instance\n            if (index) {\n                if (index < nonFactoryPlayerIndex) {\n                    playerContext[index] = null;\n                }\n                else {\n                    playerContext.splice(index, 1);\n                }\n            }\n            player.destroy();\n        });\n        /** @type {?} */\n        var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n        playerHandler.queuePlayer(player, ref);\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} playerContext\n * @return {?}\n */\nexport function getPlayersInternal(playerContext) {\n    /** @type {?} */\n    var players = [];\n    /** @type {?} */\n    var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n    // add all factory-based players (which are apart of [style] and [class] bindings)\n    for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n        /** @type {?} */\n        var player = /** @type {?} */ (playerContext[i]);\n        if (player) {\n            players.push(player);\n        }\n    }\n    // add all custom players (not apart of [style] and [class] bindings)\n    for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n        players.push(/** @type {?} */ (playerContext[i]));\n    }\n    return players;\n}\n/**\n * @param {?} target\n * @param {?=} context\n * @return {?}\n */\nexport function getOrCreatePlayerContext(target, context) {\n    context = context || /** @type {?} */ ((getContext(target)));\n    if (!context) {\n        ngDevMode && throwInvalidRefError();\n        return null;\n    }\n    var lView = context.lView, nodeIndex = context.nodeIndex;\n    /** @type {?} */\n    var stylingContext = getStylingContext(nodeIndex - HEADER_OFFSET, lView);\n    return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n}\n/**\n * @param {?} stylingContext\n * @return {?}\n */\nexport function getPlayerContext(stylingContext) {\n    return stylingContext[0 /* PlayerContext */];\n}\n/**\n * @param {?} data\n * @return {?}\n */\nexport function allocPlayerContext(data) {\n    return data[0 /* PlayerContext */] =\n        [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n}\n/**\n * @return {?}\n */\nexport function throwInvalidRefError() {\n    throw new Error('Only elements that exist in an Angular application can be used for animations');\n}\n//# sourceMappingURL=util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nimport { RendererStyleFlags3, isProceduralRenderer } from '../interfaces/renderer';\nimport { NO_CHANGE } from '../tokens';\nimport { getRootContext } from '../util';\nimport { BoundPlayerFactory } from './player_factory';\nimport { addPlayerInternal, allocPlayerContext, createEmptyStylingContext, getPlayerContext } from './util';\n/** @type {?} */\nvar EMPTY_ARR = [];\n/** @type {?} */\nvar EMPTY_OBJ = {};\n/**\n * Creates a styling context template where styling information is stored.\n * Any styles that are later referenced using `updateStyleProp` must be\n * passed in within this function. Initial values for those styles are to\n * be declared after all initial style properties are declared (this change in\n * mode between declarations and initial styles is made possible using a special\n * enum value found in `definition.ts`).\n *\n * @param {?=} initialClassDeclarations a list of class declarations and initial class values\n *    that are used later within the styling context.\n *\n *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n *       This implies that `foo` and `bar` will be later styled and that the `foo`\n *       class will be applied to the element as an initial class since it's true\n * @param {?=} initialStyleDeclarations a list of style declarations and initial style values\n *    that are used later within the styling context.\n *\n *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n *       This implies that `width` and `height` will be later styled and that the `width`\n *       property has an initial value of `100px`.\n *\n * @param {?=} styleSanitizer\n * @param {?=} onlyProcessSingleClasses\n * @return {?}\n */\nexport function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer, onlyProcessSingleClasses) {\n    /** @type {?} */\n    var initialStylingValues = [null];\n    /** @type {?} */\n    var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n    /** @type {?} */\n    var stylesLookup = {};\n    /** @type {?} */\n    var classesLookup = {};\n    /** @type {?} */\n    var totalStyleDeclarations = 0;\n    if (initialStyleDeclarations) {\n        /** @type {?} */\n        var hasPassedDeclarations = false;\n        for (var i = 0; i < initialStyleDeclarations.length; i++) {\n            /** @type {?} */\n            var v = /** @type {?} */ (initialStyleDeclarations[i]);\n            // this flag value marks where the declarations end the initial values begin\n            if (v === 1 /* VALUES_MODE */) {\n                hasPassedDeclarations = true;\n            }\n            else {\n                /** @type {?} */\n                var prop = /** @type {?} */ (v);\n                if (hasPassedDeclarations) {\n                    /** @type {?} */\n                    var value = /** @type {?} */ (initialStyleDeclarations[++i]);\n                    initialStylingValues.push(value);\n                    stylesLookup[prop] = initialStylingValues.length - 1;\n                }\n                else {\n                    totalStyleDeclarations++;\n                    stylesLookup[prop] = 0;\n                }\n            }\n        }\n    }\n    // make where the class offsets begin\n    context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n    /** @type {?} */\n    var initialStaticClasses = onlyProcessSingleClasses ? [] : null;\n    if (initialClassDeclarations) {\n        /** @type {?} */\n        var hasPassedDeclarations = false;\n        for (var i = 0; i < initialClassDeclarations.length; i++) {\n            /** @type {?} */\n            var v = /** @type {?} */ (initialClassDeclarations[i]);\n            // this flag value marks where the declarations end the initial values begin\n            if (v === 1 /* VALUES_MODE */) {\n                hasPassedDeclarations = true;\n            }\n            else {\n                /** @type {?} */\n                var className = /** @type {?} */ (v);\n                if (hasPassedDeclarations) {\n                    /** @type {?} */\n                    var value = /** @type {?} */ (initialClassDeclarations[++i]);\n                    initialStylingValues.push(value);\n                    classesLookup[className] = initialStylingValues.length - 1;\n                    initialStaticClasses && initialStaticClasses.push(className);\n                }\n                else {\n                    classesLookup[className] = 0;\n                }\n            }\n        }\n    }\n    /** @type {?} */\n    var styleProps = Object.keys(stylesLookup);\n    /** @type {?} */\n    var classNames = Object.keys(classesLookup);\n    /** @type {?} */\n    var classNamesIndexStart = styleProps.length;\n    /** @type {?} */\n    var totalProps = styleProps.length + classNames.length;\n    /** @type {?} */\n    var maxLength = totalProps * 4 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n    // we need to fill the array from the start so that we can access\n    // both the multi and the single array positions in the same loop block\n    for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n        context.push(null);\n    }\n    /** @type {?} */\n    var singleStart = 8 /* SingleStylesStartPosition */;\n    /** @type {?} */\n    var multiStart = totalProps * 4 /* Size */ + 8 /* SingleStylesStartPosition */;\n    // fill single and multi-level styles\n    for (var i = 0; i < totalProps; i++) {\n        /** @type {?} */\n        var isClassBased_1 = i >= classNamesIndexStart;\n        /** @type {?} */\n        var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n        /** @type {?} */\n        var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n        /** @type {?} */\n        var initialValue = initialStylingValues[indexForInitial];\n        /** @type {?} */\n        var indexForMulti = i * 4 /* Size */ + multiStart;\n        /** @type {?} */\n        var indexForSingle = i * 4 /* Size */ + singleStart;\n        /** @type {?} */\n        var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n        setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n        setProp(context, indexForSingle, prop);\n        setValue(context, indexForSingle, null);\n        setPlayerBuilderIndex(context, indexForSingle, 0);\n        /** @type {?} */\n        var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n        setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n        setProp(context, indexForMulti, prop);\n        setValue(context, indexForMulti, null);\n        setPlayerBuilderIndex(context, indexForMulti, 0);\n    }\n    /** @type {?} */\n    var masterFlag = pointers(0, 0, multiStart) |\n        (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n    setFlag(context, 3 /* MasterFlagPosition */, masterFlag);\n    setContextDirty(context, initialStylingValues.length > 1);\n    if (initialStaticClasses) {\n        context[6 /* PreviousOrCachedMultiClassValue */] = initialStaticClasses.join(' ');\n    }\n    return context;\n}\n/**\n * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n * applied to the element once `renderStyleAndClassBindings` is called.\n *\n * All missing styles/class (any values that are not provided in the new `styles`\n * or `classes` params) will resolve to `null` within their respective positions\n * in the context.\n *\n * @param {?} context The styling context that will be updated with the\n *    newly provided style values.\n * @param {?} classesInput The key/value map of CSS class names that will be used for the update.\n * @param {?=} stylesInput The key/value map of CSS styles that will be used for the update.\n * @return {?}\n */\nexport function updateStylingMap(context, classesInput, stylesInput) {\n    stylesInput = stylesInput || null;\n    /** @type {?} */\n    var element = /** @type {?} */ (((context[5 /* ElementPosition */])));\n    /** @type {?} */\n    var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n        new ClassAndStylePlayerBuilder(/** @type {?} */ (classesInput), element, 1 /* Class */) :\n        null;\n    /** @type {?} */\n    var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n        new ClassAndStylePlayerBuilder(/** @type {?} */ (stylesInput), element, 2 /* Style */) :\n        null;\n    /** @type {?} */\n    var classesValue = classesPlayerBuilder ? /** @type {?} */ (((/** @type {?} */ (classesInput)))).value :\n        classesInput;\n    /** @type {?} */\n    var stylesValue = stylesPlayerBuilder ? stylesInput[\"value\"] : stylesInput;\n    /** @type {?} */\n    var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n        classesValue === context[6 /* PreviousOrCachedMultiClassValue */];\n    /** @type {?} */\n    var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* PreviousMultiStyleValue */];\n    if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n        return;\n    context[6 /* PreviousOrCachedMultiClassValue */] = classesValue;\n    context[7 /* PreviousMultiStyleValue */] = stylesValue;\n    /** @type {?} */\n    var classNames = EMPTY_ARR;\n    /** @type {?} */\n    var applyAllClasses = false;\n    /** @type {?} */\n    var playerBuildersAreDirty = false;\n    /** @type {?} */\n    var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n    if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n        setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n        playerBuildersAreDirty = true;\n    }\n    /** @type {?} */\n    var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n    if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n        setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n        playerBuildersAreDirty = true;\n    }\n    // each time a string-based value pops up then it shouldn't require a deep\n    // check of what's changed.\n    if (!ignoreAllClassUpdates) {\n        if (typeof classesValue == 'string') {\n            classNames = classesValue.split(/\\s+/);\n            // this boolean is used to avoid having to create a key/value map of `true` values\n            // since a classname string implies that all those classes are added\n            applyAllClasses = true;\n        }\n        else {\n            classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARR;\n        }\n    }\n    /** @type {?} */\n    var classes = /** @type {?} */ ((classesValue || EMPTY_OBJ));\n    /** @type {?} */\n    var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARR;\n    /** @type {?} */\n    var styles = stylesValue || EMPTY_OBJ;\n    /** @type {?} */\n    var classesStartIndex = styleProps.length;\n    /** @type {?} */\n    var multiStartIndex = getMultiStartIndex(context);\n    /** @type {?} */\n    var dirty = false;\n    /** @type {?} */\n    var ctxIndex = multiStartIndex;\n    /** @type {?} */\n    var propIndex = 0;\n    /** @type {?} */\n    var propLimit = styleProps.length + classNames.length;\n    // the main loop here will try and figure out how the shape of the provided\n    // styles differ with respect to the context. Later if the context/styles/classes\n    // are off-balance then they will be dealt in another loop after this one\n    while (ctxIndex < context.length && propIndex < propLimit) {\n        /** @type {?} */\n        var isClassBased_2 = propIndex >= classesStartIndex;\n        /** @type {?} */\n        var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n        // when there is a cache-hit for a string-based class then we should\n        // avoid doing any work diffing any of the changes\n        if (processValue) {\n            /** @type {?} */\n            var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n            /** @type {?} */\n            var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            /** @type {?} */\n            var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n            /** @type {?} */\n            var playerBuilderIndex = isClassBased_2 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n            /** @type {?} */\n            var prop = getProp(context, ctxIndex);\n            if (prop === newProp) {\n                /** @type {?} */\n                var value = getValue(context, ctxIndex);\n                /** @type {?} */\n                var flag = getPointers(context, ctxIndex);\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                if (hasValueChanged(flag, value, newValue)) {\n                    setValue(context, ctxIndex, newValue);\n                    playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                    /** @type {?} */\n                    var initialValue = getInitialValue(context, flag);\n                    // there is no point in setting this to dirty if the previously\n                    // rendered value was being referenced by the initial style (or null)\n                    if (hasValueChanged(flag, initialValue, newValue)) {\n                        setDirty(context, ctxIndex, true);\n                        dirty = true;\n                    }\n                }\n            }\n            else {\n                /** @type {?} */\n                var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                if (indexOfEntry > 0) {\n                    /** @type {?} */\n                    var valueToCompare = getValue(context, indexOfEntry);\n                    /** @type {?} */\n                    var flagToCompare = getPointers(context, indexOfEntry);\n                    swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                    if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                        /** @type {?} */\n                        var initialValue = getInitialValue(context, flagToCompare);\n                        setValue(context, ctxIndex, newValue);\n                        if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    /** @type {?} */\n                    var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                    playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                    insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n        }\n        ctxIndex += 4 /* Size */;\n        propIndex++;\n    }\n    // this means that there are left-over values in the context that\n    // were not included in the provided styles/classes and in this\n    // case the  goal is to \"remove\" them from the context (by nullifying)\n    while (ctxIndex < context.length) {\n        /** @type {?} */\n        var flag = getPointers(context, ctxIndex);\n        /** @type {?} */\n        var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n        /** @type {?} */\n        var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n        if (processValue) {\n            /** @type {?} */\n            var value = getValue(context, ctxIndex);\n            /** @type {?} */\n            var doRemoveValue = valueExists(value, isClassBased_3);\n            if (doRemoveValue) {\n                setDirty(context, ctxIndex, true);\n                setValue(context, ctxIndex, null);\n                /** @type {?} */\n                var playerBuilderIndex = isClassBased_3 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                dirty = true;\n            }\n        }\n        ctxIndex += 4 /* Size */;\n    }\n    /** @type {?} */\n    var sanitizer = getStyleSanitizer(context);\n    while (propIndex < propLimit) {\n        /** @type {?} */\n        var isClassBased_4 = propIndex >= classesStartIndex;\n        /** @type {?} */\n        var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n        if (processValue) {\n            /** @type {?} */\n            var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n            /** @type {?} */\n            var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            /** @type {?} */\n            var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n            /** @type {?} */\n            var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n            /** @type {?} */\n            var playerBuilderIndex = isClassBased_4 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n            context.push(flag, prop, value, playerBuilderIndex);\n            dirty = true;\n        }\n        propIndex++;\n    }\n    if (dirty) {\n        setContextDirty(context, true);\n    }\n    if (playerBuildersAreDirty) {\n        setContextPlayersDirty(context, true);\n    }\n}\n/**\n * Sets and resolves a single styling property/value on the provided `StylingContext` so\n * that they can be applied to the element once `renderStyleAndClassBindings` is called.\n *\n * Note that prop-level styling values are considered higher priority than any styling that\n * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n * then any styles/classes that have been applied using this function will be considered first\n * (then multi values second and then initial values as a backup).\n *\n * @param {?} context The styling context that will be updated with the\n *    newly provided style value.\n * @param {?} index The index of the property which is being updated.\n * @param {?} input\n * @return {?}\n */\nexport function updateStyleProp(context, index, input) {\n    /** @type {?} */\n    var singleIndex = 8 /* SingleStylesStartPosition */ + index * 4 /* Size */;\n    /** @type {?} */\n    var currValue = getValue(context, singleIndex);\n    /** @type {?} */\n    var currFlag = getPointers(context, singleIndex);\n    /** @type {?} */\n    var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n    // didn't change ... nothing to make a note of\n    if (hasValueChanged(currFlag, currValue, value)) {\n        /** @type {?} */\n        var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n        /** @type {?} */\n        var element = /** @type {?} */ (((context[5 /* ElementPosition */])));\n        /** @type {?} */\n        var playerBuilder = input instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(/** @type {?} */ (input), element, isClassBased_5 ? 1 /* Class */ : 2 /* Style */) :\n            null;\n        /** @type {?} */\n        var value_1 = /** @type {?} */ ((playerBuilder ? (/** @type {?} */ (input)).value : input));\n        /** @type {?} */\n        var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n        /** @type {?} */\n        var playerBuildersAreDirty = false;\n        /** @type {?} */\n        var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n        if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n            /** @type {?} */\n            var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n            playerBuilderIndex = playerBuilder ? newIndex : 0;\n            setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex);\n            playerBuildersAreDirty = true;\n        }\n        // the value will always get updated (even if the dirty flag is skipped)\n        setValue(context, singleIndex, value_1);\n        /** @type {?} */\n        var indexForMulti = getMultiOrSingleIndex(currFlag);\n        /** @type {?} */\n        var valueForMulti = getValue(context, indexForMulti);\n        if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n            /** @type {?} */\n            var multiDirty = false;\n            /** @type {?} */\n            var singleDirty = true;\n            // only when the value is set to `null` should the multi-value get flagged\n            if (!valueExists(value_1, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                multiDirty = true;\n                singleDirty = false;\n            }\n            setDirty(context, indexForMulti, multiDirty);\n            setDirty(context, singleIndex, singleDirty);\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n}\n/**\n * This method will toggle the referenced CSS class (by the provided index)\n * within the given context.\n *\n * @param {?} context The styling context that will be updated with the\n *    newly provided class value.\n * @param {?} index The index of the CSS class which is being updated.\n * @param {?} addOrRemove Whether or not to add or remove the CSS class\n * @return {?}\n */\nexport function updateClassProp(context, index, addOrRemove) {\n    /** @type {?} */\n    var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n    updateStyleProp(context, adjustedIndex, addOrRemove);\n}\n/**\n * Renders all queued styling using a renderer onto the given element.\n *\n * This function works by rendering any styles (that have been applied\n * using `updateStylingMap`) and any classes (that have been applied using\n * `updateStyleProp`) onto the provided element using the provided renderer.\n * Just before the styles/classes are rendered a final key/value style map\n * will be assembled (if `styleStore` or `classStore` are provided).\n *\n * @param {?} context The styling context that will be used to determine\n *      what styles will be rendered\n * @param {?} renderer the renderer that will be used to apply the styling\n * @param {?} rootOrView\n * @param {?} isFirstRender\n * @param {?=} classesStore if provided, the updated class values will be applied\n *    to this key/value map instead of being renderered via the renderer.\n * @param {?=} stylesStore if provided, the updated style values will be applied\n *    to this key/value map instead of being renderered via the renderer.\n * @return {?} number the total amount of players that got queued for animation (if any)\n */\nexport function renderStyleAndClassBindings(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore) {\n    /** @type {?} */\n    var totalPlayersQueued = 0;\n    if (isContextDirty(context)) {\n        /** @type {?} */\n        var flushPlayerBuilders = context[3 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n        /** @type {?} */\n        var native = /** @type {?} */ ((context[5 /* ElementPosition */]));\n        /** @type {?} */\n        var multiStartIndex = getMultiStartIndex(context);\n        /** @type {?} */\n        var styleSanitizer = getStyleSanitizer(context);\n        /** @type {?} */\n        var onlySingleClasses = limitToSingleClasses(context);\n        for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n            // there is no point in rendering styles that have not changed on screen\n            if (isDirty(context, i)) {\n                /** @type {?} */\n                var prop = getProp(context, i);\n                /** @type {?} */\n                var value = getValue(context, i);\n                /** @type {?} */\n                var flag = getPointers(context, i);\n                /** @type {?} */\n                var playerBuilder = getPlayerBuilder(context, i);\n                /** @type {?} */\n                var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                /** @type {?} */\n                var isInSingleRegion = i < multiStartIndex;\n                /** @type {?} */\n                var readInitialValue = !isClassBased_6 || !onlySingleClasses;\n                /** @type {?} */\n                var valueToApply = value;\n                // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                // this check implies that a single value was removed and we\n                // should now defer to a multi value and use that (if set).\n                if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                    /** @type {?} */\n                    var multiIndex = getMultiOrSingleIndex(flag);\n                    valueToApply = getValue(context, multiIndex);\n                }\n                // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                // the initial value will always be a string or null,\n                // therefore we can safely adopt it incase there's nothing else\n                // note that this should always be a falsy check since `false` is used\n                // for both class and style comparisons (styles can't be false and false\n                // classes are turned off and should therefore defer to their initial values)\n                if (!valueExists(valueToApply, isClassBased_6) && readInitialValue) {\n                    valueToApply = getInitialValue(context, flag);\n                }\n                /** @type {?} */\n                var doApplyValue = isFirstRender ? valueToApply : true;\n                if (doApplyValue) {\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                    }\n                    else {\n                        /** @type {?} */\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, /** @type {?} */ (valueToApply), renderer, sanitizer, stylesStore, playerBuilder);\n                    }\n                }\n                setDirty(context, i, false);\n            }\n        }\n        if (flushPlayerBuilders) {\n            /** @type {?} */\n            var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : /** @type {?} */ (rootOrView);\n            /** @type {?} */\n            var playerContext = /** @type {?} */ ((getPlayerContext(context)));\n            /** @type {?} */\n            var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                /** @type {?} */\n                var builder = /** @type {?} */ (playerContext[i]);\n                /** @type {?} */\n                var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                /** @type {?} */\n                var oldPlayer = /** @type {?} */ (playerContext[playerInsertionIndex]);\n                if (builder) {\n                    /** @type {?} */\n                    var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                    if (player !== undefined) {\n                        if (player != null) {\n                            /** @type {?} */\n                            var wasQueued = addPlayerInternal(playerContext, rootContext, /** @type {?} */ (native), player, playerInsertionIndex);\n                            wasQueued && totalPlayersQueued++;\n                        }\n                        if (oldPlayer) {\n                            oldPlayer.destroy();\n                        }\n                    }\n                }\n                else if (oldPlayer) {\n                    // the player builder has been removed ... therefore we should delete the associated\n                    // player\n                    oldPlayer.destroy();\n                }\n            }\n            setContextPlayersDirty(context, false);\n        }\n        setContextDirty(context, false);\n    }\n    return totalPlayersQueued;\n}\n/**\n * This function renders a given CSS prop/value entry using the\n * provided renderer. If a `store` value is provided then\n * that will be used a render context instead of the provided\n * renderer.\n *\n * @param {?} native the DOM Element\n * @param {?} prop the CSS style property that will be rendered\n * @param {?} value the CSS style value that will be rendered\n * @param {?} renderer\n * @param {?} sanitizer\n * @param {?=} store an optional key/value map that will be used as a context to render styles on\n * @param {?=} playerBuilder\n * @return {?}\n */\nfunction setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n    value = sanitizer && value ? sanitizer(prop, value) : value;\n    if (store || playerBuilder) {\n        if (store) {\n            store.setValue(prop, value);\n        }\n        if (playerBuilder) {\n            playerBuilder.setValue(prop, value);\n        }\n    }\n    else if (value) {\n        ngDevMode && ngDevMode.rendererSetStyle++;\n        isProceduralRenderer(renderer) ?\n            renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n            native['style'].setProperty(prop, value);\n    }\n    else {\n        ngDevMode && ngDevMode.rendererRemoveStyle++;\n        isProceduralRenderer(renderer) ?\n            renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n            native['style'].removeProperty(prop);\n    }\n}\n/**\n * This function renders a given CSS class value using the provided\n * renderer (by adding or removing it from the provided element).\n * If a `store` value is provided then that will be used a render\n * context instead of the provided renderer.\n *\n * @param {?} native the DOM Element\n * @param {?} className\n * @param {?} add\n * @param {?} renderer\n * @param {?=} store an optional key/value map that will be used as a context to render styles on\n * @param {?=} playerBuilder\n * @return {?}\n */\nfunction setClass(native, className, add, renderer, store, playerBuilder) {\n    if (store || playerBuilder) {\n        if (store) {\n            store.setValue(className, add);\n        }\n        if (playerBuilder) {\n            playerBuilder.setValue(className, add);\n        }\n    }\n    else if (add) {\n        ngDevMode && ngDevMode.rendererAddClass++;\n        isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n            native['classList'].add(className);\n    }\n    else {\n        ngDevMode && ngDevMode.rendererRemoveClass++;\n        isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n            native['classList'].remove(className);\n    }\n}\n/**\n * @param {?} context\n * @param {?} index\n * @param {?} isDirtyYes\n * @return {?}\n */\nfunction setDirty(context, index, isDirtyYes) {\n    /** @type {?} */\n    var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n    if (isDirtyYes) {\n        (/** @type {?} */ (context[adjustedIndex])) |= 1 /* Dirty */;\n    }\n    else {\n        (/** @type {?} */ (context[adjustedIndex])) &= ~1 /* Dirty */;\n    }\n}\n/**\n * @param {?} context\n * @param {?} index\n * @return {?}\n */\nfunction isDirty(context, index) {\n    /** @type {?} */\n    var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n    return ((/** @type {?} */ (context[adjustedIndex])) & 1 /* Dirty */) == 1 /* Dirty */;\n}\n/**\n * @param {?} context\n * @param {?} index\n * @return {?}\n */\nfunction isClassBased(context, index) {\n    /** @type {?} */\n    var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n    return ((/** @type {?} */ (context[adjustedIndex])) & 2 /* Class */) == 2 /* Class */;\n}\n/**\n * @param {?} context\n * @param {?} index\n * @return {?}\n */\nfunction isSanitizable(context, index) {\n    /** @type {?} */\n    var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n    return ((/** @type {?} */ (context[adjustedIndex])) & 4 /* Sanitize */) == 4 /* Sanitize */;\n}\n/**\n * @param {?} configFlag\n * @param {?} staticIndex\n * @param {?} dynamicIndex\n * @return {?}\n */\nfunction pointers(configFlag, staticIndex, dynamicIndex) {\n    return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n        (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n}\n/**\n * @param {?} context\n * @param {?} flag\n * @return {?}\n */\nfunction getInitialValue(context, flag) {\n    /** @type {?} */\n    var index = getInitialIndex(flag);\n    return /** @type {?} */ (context[2 /* InitialStylesPosition */][index]);\n}\n/**\n * @param {?} flag\n * @return {?}\n */\nfunction getInitialIndex(flag) {\n    return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n}\n/**\n * @param {?} flag\n * @return {?}\n */\nfunction getMultiOrSingleIndex(flag) {\n    /** @type {?} */\n    var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n    return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n}\n/**\n * @param {?} context\n * @return {?}\n */\nfunction getMultiStartIndex(context) {\n    return /** @type {?} */ (getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]));\n}\n/**\n * @param {?} context\n * @return {?}\n */\nfunction getStyleSanitizer(context) {\n    return context[1 /* StyleSanitizerPosition */];\n}\n/**\n * @param {?} context\n * @param {?} index\n * @param {?} prop\n * @return {?}\n */\nfunction setProp(context, index, prop) {\n    context[index + 1 /* PropertyOffset */] = prop;\n}\n/**\n * @param {?} context\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction setValue(context, index, value) {\n    context[index + 2 /* ValueOffset */] = value;\n}\n/**\n * @param {?} context\n * @param {?} builder\n * @param {?} index\n * @return {?}\n */\nfunction hasPlayerBuilderChanged(context, builder, index) {\n    /** @type {?} */\n    var playerContext = /** @type {?} */ ((context[0 /* PlayerContext */]));\n    if (builder) {\n        if (!playerContext || index === 0) {\n            return true;\n        }\n    }\n    else if (!playerContext) {\n        return false;\n    }\n    return playerContext[index] !== builder;\n}\n/**\n * @param {?} context\n * @param {?} builder\n * @param {?} insertionIndex\n * @return {?}\n */\nfunction setPlayerBuilder(context, builder, insertionIndex) {\n    /** @type {?} */\n    var playerContext = context[0 /* PlayerContext */] || allocPlayerContext(context);\n    if (insertionIndex > 0) {\n        playerContext[insertionIndex] = builder;\n    }\n    else {\n        insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n        playerContext.splice(insertionIndex, 0, builder, null);\n        playerContext[0 /* NonBuilderPlayersStart */] +=\n            2 /* PlayerAndPlayerBuildersTupleSize */;\n    }\n    return insertionIndex;\n}\n/**\n * @param {?} context\n * @param {?} index\n * @param {?} playerBuilderIndex\n * @return {?}\n */\nfunction setPlayerBuilderIndex(context, index, playerBuilderIndex) {\n    context[index + 3 /* PlayerBuilderIndexOffset */] = playerBuilderIndex;\n}\n/**\n * @param {?} context\n * @param {?} index\n * @return {?}\n */\nfunction getPlayerBuilderIndex(context, index) {\n    return (/** @type {?} */ (context[index + 3 /* PlayerBuilderIndexOffset */])) || 0;\n}\n/**\n * @param {?} context\n * @param {?} index\n * @return {?}\n */\nfunction getPlayerBuilder(context, index) {\n    /** @type {?} */\n    var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n    if (playerBuilderIndex) {\n        /** @type {?} */\n        var playerContext = context[0 /* PlayerContext */];\n        if (playerContext) {\n            return /** @type {?} */ (playerContext[playerBuilderIndex]);\n        }\n    }\n    return null;\n}\n/**\n * @param {?} context\n * @param {?} index\n * @param {?} flag\n * @return {?}\n */\nfunction setFlag(context, index, flag) {\n    /** @type {?} */\n    var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n    context[adjustedIndex] = flag;\n}\n/**\n * @param {?} context\n * @param {?} index\n * @return {?}\n */\nfunction getPointers(context, index) {\n    /** @type {?} */\n    var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n    return /** @type {?} */ (context[adjustedIndex]);\n}\n/**\n * @param {?} context\n * @param {?} index\n * @return {?}\n */\nfunction getValue(context, index) {\n    return /** @type {?} */ (context[index + 2 /* ValueOffset */]);\n}\n/**\n * @param {?} context\n * @param {?} index\n * @return {?}\n */\nfunction getProp(context, index) {\n    return /** @type {?} */ (context[index + 1 /* PropertyOffset */]);\n}\n/**\n * @param {?} context\n * @return {?}\n */\nexport function isContextDirty(context) {\n    return isDirty(context, 3 /* MasterFlagPosition */);\n}\n/**\n * @param {?} context\n * @return {?}\n */\nexport function limitToSingleClasses(context) {\n    return context[3 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n}\n/**\n * @param {?} context\n * @param {?} isDirtyYes\n * @return {?}\n */\nexport function setContextDirty(context, isDirtyYes) {\n    setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n}\n/**\n * @param {?} context\n * @param {?} isDirtyYes\n * @return {?}\n */\nexport function setContextPlayersDirty(context, isDirtyYes) {\n    if (isDirtyYes) {\n        (/** @type {?} */ (context[3 /* MasterFlagPosition */])) |= 8 /* PlayerBuildersDirty */;\n    }\n    else {\n        (/** @type {?} */ (context[3 /* MasterFlagPosition */])) &= ~8 /* PlayerBuildersDirty */;\n    }\n}\n/**\n * @param {?} context\n * @param {?} prop\n * @param {?=} startIndex\n * @return {?}\n */\nfunction findEntryPositionByProp(context, prop, startIndex) {\n    for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n        /** @type {?} */\n        var thisProp = context[i];\n        if (thisProp == prop) {\n            return i - 1 /* PropertyOffset */;\n        }\n    }\n    return -1;\n}\n/**\n * @param {?} context\n * @param {?} indexA\n * @param {?} indexB\n * @return {?}\n */\nfunction swapMultiContextEntries(context, indexA, indexB) {\n    /** @type {?} */\n    var tmpValue = getValue(context, indexA);\n    /** @type {?} */\n    var tmpProp = getProp(context, indexA);\n    /** @type {?} */\n    var tmpFlag = getPointers(context, indexA);\n    /** @type {?} */\n    var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n    /** @type {?} */\n    var flagA = tmpFlag;\n    /** @type {?} */\n    var flagB = getPointers(context, indexB);\n    /** @type {?} */\n    var singleIndexA = getMultiOrSingleIndex(flagA);\n    if (singleIndexA >= 0) {\n        /** @type {?} */\n        var _flag = getPointers(context, singleIndexA);\n        /** @type {?} */\n        var _initial = getInitialIndex(_flag);\n        setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n    }\n    /** @type {?} */\n    var singleIndexB = getMultiOrSingleIndex(flagB);\n    if (singleIndexB >= 0) {\n        /** @type {?} */\n        var _flag = getPointers(context, singleIndexB);\n        /** @type {?} */\n        var _initial = getInitialIndex(_flag);\n        setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n    }\n    setValue(context, indexA, getValue(context, indexB));\n    setProp(context, indexA, getProp(context, indexB));\n    setFlag(context, indexA, getPointers(context, indexB));\n    setPlayerBuilderIndex(context, indexA, getPlayerBuilderIndex(context, indexB));\n    setValue(context, indexB, tmpValue);\n    setProp(context, indexB, tmpProp);\n    setFlag(context, indexB, tmpFlag);\n    setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex);\n}\n/**\n * @param {?} context\n * @param {?} indexStartPosition\n * @return {?}\n */\nfunction updateSinglePointerValues(context, indexStartPosition) {\n    for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n        /** @type {?} */\n        var multiFlag = getPointers(context, i);\n        /** @type {?} */\n        var singleIndex = getMultiOrSingleIndex(multiFlag);\n        if (singleIndex > 0) {\n            /** @type {?} */\n            var singleFlag = getPointers(context, singleIndex);\n            /** @type {?} */\n            var initialIndexForSingle = getInitialIndex(singleFlag);\n            /** @type {?} */\n            var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n            /** @type {?} */\n            var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n            setFlag(context, singleIndex, updatedFlag);\n        }\n    }\n}\n/**\n * @param {?} context\n * @param {?} index\n * @param {?} classBased\n * @param {?} name\n * @param {?} flag\n * @param {?} value\n * @param {?} playerIndex\n * @return {?}\n */\nfunction insertNewMultiProperty(context, index, classBased, name, flag, value, playerIndex) {\n    /** @type {?} */\n    var doShift = index < context.length;\n    // prop does not exist in the list, add it in\n    context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, playerIndex);\n    if (doShift) {\n        // because the value was inserted midway into the array then we\n        // need to update all the shifted multi values' single value\n        // pointers to point to the newly shifted location\n        updateSinglePointerValues(context, index + 4 /* Size */);\n    }\n}\n/**\n * @param {?} value\n * @param {?=} isClassBased\n * @return {?}\n */\nfunction valueExists(value, isClassBased) {\n    if (isClassBased) {\n        return value ? true : false;\n    }\n    return value !== null;\n}\n/**\n * @param {?} name\n * @param {?} isClassBased\n * @param {?=} sanitizer\n * @return {?}\n */\nfunction prepareInitialFlag(name, isClassBased, sanitizer) {\n    if (isClassBased) {\n        return 2 /* Class */;\n    }\n    else if (sanitizer && sanitizer(name)) {\n        return 4 /* Sanitize */;\n    }\n    return 0 /* None */;\n}\n/**\n * @param {?} flag\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction hasValueChanged(flag, a, b) {\n    /** @type {?} */\n    var isClassBased = flag & 2 /* Class */;\n    /** @type {?} */\n    var hasValues = a && b;\n    /** @type {?} */\n    var usesSanitizer = flag & 4 /* Sanitize */;\n    // the toString() comparison ensures that a value is checked\n    // ... otherwise (during sanitization bypassing) the === comparsion\n    // would fail since a new String() instance is created\n    if (!isClassBased && hasValues && usesSanitizer) {\n        // we know for sure we're dealing with strings at this point\n        return (/** @type {?} */ (a)).toString() !== (/** @type {?} */ (b)).toString();\n    }\n    // everything else is safe to check with a normal equality check\n    return a !== b;\n}\n/**\n * @template T\n */\nvar /**\n * @template T\n */\nClassAndStylePlayerBuilder = /** @class */ (function () {\n    function ClassAndStylePlayerBuilder(factory, _element, _type) {\n        this._element = _element;\n        this._type = _type;\n        this._values = {};\n        this._dirty = false;\n        this._factory = /** @type {?} */ (factory);\n    }\n    /**\n     * @param {?} prop\n     * @param {?} value\n     * @return {?}\n     */\n    ClassAndStylePlayerBuilder.prototype.setValue = /**\n     * @param {?} prop\n     * @param {?} value\n     * @return {?}\n     */\n    function (prop, value) {\n        if (this._values[prop] !== value) {\n            this._values[prop] = value;\n            this._dirty = true;\n        }\n    };\n    /**\n     * @param {?} currentPlayer\n     * @param {?} isFirstRender\n     * @return {?}\n     */\n    ClassAndStylePlayerBuilder.prototype.buildPlayer = /**\n     * @param {?} currentPlayer\n     * @param {?} isFirstRender\n     * @return {?}\n     */\n    function (currentPlayer, isFirstRender) {\n        // if no values have been set here then this means the binding didn't\n        // change and therefore the binding values were not updated through\n        // `setValue` which means no new player will be provided.\n        if (this._dirty) {\n            /** @type {?} */\n            var player = this._factory.fn(this._element, this._type, /** @type {?} */ ((this._values)), isFirstRender, currentPlayer || null);\n            this._values = {};\n            this._dirty = false;\n            return player;\n        }\n        return undefined;\n    };\n    return ClassAndStylePlayerBuilder;\n}());\n/**\n * @template T\n */\nexport { ClassAndStylePlayerBuilder };\nif (false) {\n    /** @type {?} */\n    ClassAndStylePlayerBuilder.prototype._values;\n    /** @type {?} */\n    ClassAndStylePlayerBuilder.prototype._dirty;\n    /** @type {?} */\n    ClassAndStylePlayerBuilder.prototype._factory;\n    /** @type {?} */\n    ClassAndStylePlayerBuilder.prototype._element;\n    /** @type {?} */\n    ClassAndStylePlayerBuilder.prototype._type;\n}\n//# sourceMappingURL=class_and_style_bindings.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { resolveForwardRef } from '../di/forward_ref';\nimport { InjectFlags } from '../di/injector_compatibility';\nimport { normalizeDebugBindingName, normalizeDebugBindingValue } from '../util/ng_reflect';\nimport { assertDataInRange, assertDefined, assertEqual, assertHasParent, assertLessThan, assertNotEqual, assertPreviousIsParent } from './assert';\nimport { bindingUpdated, bindingUpdated2, bindingUpdated3, bindingUpdated4 } from './bindings';\nimport { attachPatchData, getComponentViewByInstance } from './context_discovery';\nimport { diPublicInInjector, getNodeInjectable, getOrCreateInjectable, getOrCreateNodeInjectorForNode, injectAttributeImpl } from './di';\nimport { throwMultipleComponentError } from './errors';\nimport { executeHooks, executeInitHooks, queueInitHooks, queueLifecycleHooks } from './hooks';\nimport { ACTIVE_INDEX, VIEWS } from './interfaces/container';\nimport { INJECTOR_SIZE, NodeInjectorFactory } from './interfaces/injector';\nimport { NG_PROJECT_AS_ATTR_NAME } from './interfaces/projection';\nimport { isProceduralRenderer } from './interfaces/renderer';\nimport { BINDING_INDEX, CLEANUP, CONTAINER_INDEX, CONTENT_QUERIES, CONTEXT, DECLARATION_VIEW, FLAGS, HEADER_OFFSET, HOST, HOST_NODE, INJECTOR, NEXT, PARENT, QUERIES, RENDERER, RENDERER_FACTORY, SANITIZER, TAIL, TVIEW } from './interfaces/view';\nimport { assertNodeOfPossibleTypes, assertNodeType } from './node_assert';\nimport { appendChild, appendProjectedNode, createTextNode, findComponentView, getLViewChild, getRenderParent, insertView, removeView } from './node_manipulation';\nimport { isNodeMatchingSelectorList, matchingSelectorIndex } from './node_selector_matcher';\nimport { decreaseElementDepthCount, enterView, getBindingsEnabled, getCheckNoChangesMode, getContextLView, getCreationMode, getCurrentDirectiveDef, getElementDepthCount, getFirstTemplatePass, getIsParent, getLView, getPreviousOrParentTNode, increaseElementDepthCount, leaveView, nextContextImpl, resetComponentState, setBindingRoot, setCheckNoChangesMode, setCurrentDirectiveDef, setFirstTemplatePass, setIsParent, setPreviousOrParentTNode } from './state';\nimport { createStylingContextTemplate, renderStyleAndClassBindings, updateClassProp as updateElementClassProp, updateStyleProp as updateElementStyleProp, updateStylingMap } from './styling/class_and_style_bindings';\nimport { BoundPlayerFactory } from './styling/player_factory';\nimport { getStylingContext } from './styling/util';\nimport { NO_CHANGE } from './tokens';\nimport { getComponentViewByIndex, getNativeByIndex, getNativeByTNode, getRootContext, getRootView, getTNode, isComponent, isComponentDef, loadInternal, readElementValue, readPatchedLView, stringify } from './util';\n/** *\n * A permanent marker promise which signifies that the current CD tree is\n * clean.\n  @type {?} */\nvar _CLEAN_PROMISE = Promise.resolve(null);\n/** @enum {number} */\nvar BindingDirection = {\n    Input: 0,\n    Output: 1,\n};\n/**\n * Refreshes the view, executing the following steps in that order:\n * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n * bindings, refreshes child components.\n * Note: view hooks are triggered later when leaving the view.\n * @param {?} lView\n * @param {?} rf\n * @return {?}\n */\nexport function refreshDescendantViews(lView, rf) {\n    /** @type {?} */\n    var tView = lView[TVIEW];\n    // This needs to be set before children are processed to support recursive components\n    tView.firstTemplatePass = false;\n    setFirstTemplatePass(false);\n    // Dynamically created views must run first only in creation mode. If this is a\n    // creation-only pass, we should not call lifecycle hooks or evaluate bindings.\n    // This will be done in the update-only pass.\n    if (rf !== 1 /* Create */) {\n        /** @type {?} */\n        var creationMode = getCreationMode();\n        /** @type {?} */\n        var checkNoChangesMode = getCheckNoChangesMode();\n        if (!checkNoChangesMode) {\n            executeInitHooks(lView, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(lView);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        setHostBindings(tView, lView);\n    }\n    refreshChildComponents(tView.components, rf);\n}\n/**\n * Sets the host bindings for the current view.\n * @param {?} tView\n * @param {?} viewData\n * @return {?}\n */\nexport function setHostBindings(tView, viewData) {\n    if (tView.expandoInstructions) {\n        /** @type {?} */\n        var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n        setBindingRoot(bindingRootIndex);\n        /** @type {?} */\n        var currentDirectiveIndex = -1;\n        /** @type {?} */\n        var currentElementIndex = -1;\n        for (var i = 0; i < tView.expandoInstructions.length; i++) {\n            /** @type {?} */\n            var instruction = tView.expandoInstructions[i];\n            if (typeof instruction === 'number') {\n                if (instruction <= 0) {\n                    // Negative numbers mean that we are starting new EXPANDO block and need to update\n                    // the current element and directive index.\n                    currentElementIndex = -instruction;\n                    /** @type {?} */\n                    var providerCount = (/** @type {?} */ (tView.expandoInstructions[++i]));\n                    bindingRootIndex += INJECTOR_SIZE + providerCount;\n                    currentDirectiveIndex = bindingRootIndex;\n                }\n                else {\n                    // This is either the injector size (so the binding root can skip over directives\n                    // and get to the first set of host bindings on this node) or the host var count\n                    // (to get to the next set of host bindings on this node).\n                    bindingRootIndex += instruction;\n                }\n                setBindingRoot(bindingRootIndex);\n            }\n            else {\n                // If it's not a number, it's a host binding function that needs to be executed.\n                if (instruction !== null) {\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                }\n                currentDirectiveIndex++;\n            }\n        }\n    }\n}\n/**\n * Refreshes content queries for all directives in the given view.\n * @param {?} tView\n * @return {?}\n */\nfunction refreshContentQueries(tView) {\n    if (tView.contentQueries != null) {\n        for (var i = 0; i < tView.contentQueries.length; i += 2) {\n            /** @type {?} */\n            var directiveDefIdx = tView.contentQueries[i];\n            /** @type {?} */\n            var directiveDef = /** @type {?} */ (tView.data[directiveDefIdx]); /** @type {?} */\n            ((directiveDef.contentQueriesRefresh))(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n        }\n    }\n}\n/**\n * Refreshes child components in the current view.\n * @param {?} components\n * @param {?} rf\n * @return {?}\n */\nfunction refreshChildComponents(components, rf) {\n    if (components != null) {\n        for (var i = 0; i < components.length; i++) {\n            componentRefresh(components[i], rf);\n        }\n    }\n}\n/**\n * @template T\n * @param {?} parentLView\n * @param {?} tView\n * @param {?} context\n * @param {?} flags\n * @param {?=} rendererFactory\n * @param {?=} renderer\n * @param {?=} sanitizer\n * @param {?=} injector\n * @return {?}\n */\nexport function createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n    /** @type {?} */\n    var lView = /** @type {?} */ (tView.blueprint.slice());\n    lView[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n    lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n    lView[CONTEXT] = context;\n    lView[RENDERER_FACTORY] = /** @type {?} */ (((rendererFactory || parentLView && parentLView[RENDERER_FACTORY])));\n    ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n    lView[RENDERER] = /** @type {?} */ (((renderer || parentLView && parentLView[RENDERER])));\n    ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n    lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || /** @type {?} */ ((null));\n    lView[/** @type {?} */ (INJECTOR)] = injector || parentLView && parentLView[INJECTOR] || null;\n    return lView;\n}\n/**\n * @param {?} index\n * @param {?} type\n * @param {?} native\n * @param {?} name\n * @param {?} attrs\n * @return {?}\n */\nexport function createNodeAtIndex(index, type, native, name, attrs) {\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var tView = lView[TVIEW];\n    /** @type {?} */\n    var adjustedIndex = index + HEADER_OFFSET;\n    ngDevMode &&\n        assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n    lView[adjustedIndex] = native;\n    /** @type {?} */\n    var tNode = /** @type {?} */ (tView.data[adjustedIndex]);\n    if (tNode == null) {\n        /** @type {?} */\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        /** @type {?} */\n        var isParent = getIsParent();\n        tNode = tView.data[adjustedIndex] = createTNode(lView, type, adjustedIndex, name, attrs, null);\n        // Now link ourselves into the tree.\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n    }\n    if (tView.firstChild == null && type === 3 /* Element */) {\n        tView.firstChild = tNode;\n    }\n    setPreviousOrParentTNode(tNode);\n    setIsParent(true);\n    return /** @type {?} */ (tNode);\n}\n/**\n * @param {?} index\n * @param {?} view\n * @return {?}\n */\nexport function createViewNode(index, view) {\n    // View nodes are not stored in data because they can be added / removed at runtime (which\n    // would cause indices to change). Their TNodes are instead stored in tView.node.\n    if (view[TVIEW].node == null) {\n        view[TVIEW].node = /** @type {?} */ (createTNode(view, 2 /* View */, index, null, null, null));\n    }\n    setIsParent(true);\n    /** @type {?} */\n    var tNode = /** @type {?} */ (view[TVIEW].node);\n    setPreviousOrParentTNode(tNode);\n    return view[HOST_NODE] = tNode;\n}\n/**\n * When elements are created dynamically after a view blueprint is created (e.g. through\n * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n * template passes.\n * @param {?} view\n * @return {?}\n */\nexport function allocExpando(view) {\n    /** @type {?} */\n    var tView = view[TVIEW];\n    if (tView.firstTemplatePass) {\n        tView.expandoStartIndex++;\n        tView.blueprint.push(null);\n        tView.data.push(null);\n        view.push(null);\n    }\n}\n/**\n *\n * @template T\n * @param {?} hostNode Existing node to render into.\n * @param {?} templateFn Template function with the instructions.\n * @param {?} consts The number of nodes, local refs, and pipes in this template\n * @param {?} vars\n * @param {?} context to pass into the template.\n * @param {?} providedRendererFactory renderer factory to use\n * @param {?} hostView\n * @param {?=} directives Directive defs that should be used for matching\n * @param {?=} pipes Pipe defs that should be used for matching\n * @param {?=} sanitizer\n * @return {?}\n */\nexport function renderTemplate(hostNode, templateFn, consts, vars, context, providedRendererFactory, hostView, directives, pipes, sanitizer) {\n    if (hostView == null) {\n        resetComponentState();\n        /** @type {?} */\n        var renderer = providedRendererFactory.createRenderer(null, null);\n        /** @type {?} */\n        var hostLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), {}, 2 /* CheckAlways */ | 64 /* IsRoot */, providedRendererFactory, renderer);\n        enterView(hostLView, null);\n        /** @type {?} */\n        var componentTView = getOrCreateTView(templateFn, consts, vars, directives || null, pipes || null, null);\n        hostView = createLView(hostLView, componentTView, context, 2 /* CheckAlways */, providedRendererFactory, renderer, sanitizer);\n        hostView[HOST_NODE] = createNodeAtIndex(0, 3 /* Element */, hostNode, null, null);\n    }\n    renderComponentOrTemplate(hostView, context, null, templateFn);\n    return hostView;\n}\n/**\n * Used for creating the LViewNode of a dynamic embedded view,\n * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n * @template T\n * @param {?} tView\n * @param {?} context\n * @param {?} declarationView\n * @param {?} renderer\n * @param {?} queries\n * @param {?} injectorIndex\n * @return {?}\n */\nexport function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n    /** @type {?} */\n    var _isParent = getIsParent();\n    /** @type {?} */\n    var _previousOrParentTNode = getPreviousOrParentTNode();\n    setIsParent(true);\n    setPreviousOrParentTNode(/** @type {?} */ ((null)));\n    /** @type {?} */\n    var lView = createLView(declarationView, tView, context, 2 /* CheckAlways */);\n    lView[DECLARATION_VIEW] = declarationView;\n    if (queries) {\n        lView[QUERIES] = queries.createView();\n    }\n    createViewNode(-1, lView);\n    if (tView.firstTemplatePass) {\n        /** @type {?} */ ((tView.node)).injectorIndex = injectorIndex;\n    }\n    setIsParent(_isParent);\n    setPreviousOrParentTNode(_previousOrParentTNode);\n    return lView;\n}\n/**\n * Used for rendering embedded views (e.g. dynamically created views)\n *\n * Dynamically created views must store/retrieve their TViews differently from component views\n * because their template functions are nested in the template functions of their hosts, creating\n * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n * TView for dynamically created views on their host TNode, which only has one instance.\n * @template T\n * @param {?} viewToRender\n * @param {?} tView\n * @param {?} context\n * @param {?} rf\n * @return {?}\n */\nexport function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n    /** @type {?} */\n    var _isParent = getIsParent();\n    /** @type {?} */\n    var _previousOrParentTNode = getPreviousOrParentTNode();\n    setIsParent(true);\n    setPreviousOrParentTNode(/** @type {?} */ ((null)));\n    /** @type {?} */\n    var oldView;\n    if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n        // This is a root view inside the view tree\n        tickRootContext(getRootContext(viewToRender));\n    }\n    else {\n        try {\n            setIsParent(true);\n            setPreviousOrParentTNode(/** @type {?} */ ((null)));\n            oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n            namespaceHTML(); /** @type {?} */\n            ((tView.template))(rf, context);\n            if (rf & 2 /* Update */) {\n                refreshDescendantViews(viewToRender, null);\n            }\n            else {\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                setFirstTemplatePass(false);\n            }\n        }\n        finally {\n            /** @type {?} */\n            var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n            leaveView(/** @type {?} */ ((oldView)), isCreationOnly);\n            setIsParent(_isParent);\n            setPreviousOrParentTNode(_previousOrParentTNode);\n        }\n    }\n}\n/**\n * Retrieves a context at the level specified and saves it as the global, contextViewData.\n * Will get the next level up if level is not specified.\n *\n * This is used to save contexts of parent views so they can be bound in embedded views, or\n * in conjunction with reference() to bind a ref from a parent view.\n *\n * @template T\n * @param {?=} level The relative level of the view from which to grab context compared to contextVewData\n * @return {?} context\n */\nexport function nextContext(level) {\n    if (level === void 0) { level = 1; }\n    return nextContextImpl(level);\n}\n/**\n * @template T\n * @param {?} hostView\n * @param {?} componentOrContext\n * @param {?} rf\n * @param {?=} templateFn\n * @return {?}\n */\nfunction renderComponentOrTemplate(hostView, componentOrContext, rf, templateFn) {\n    /** @type {?} */\n    var rendererFactory = hostView[RENDERER_FACTORY];\n    /** @type {?} */\n    var oldView = enterView(hostView, hostView[HOST_NODE]);\n    try {\n        if (rendererFactory.begin) {\n            rendererFactory.begin();\n        }\n        if (templateFn) {\n            namespaceHTML();\n            templateFn(rf || getRenderFlags(hostView), /** @type {?} */ ((componentOrContext)));\n        }\n        refreshDescendantViews(hostView, rf);\n    }\n    finally {\n        if (rendererFactory.end) {\n            rendererFactory.end();\n        }\n        leaveView(oldView);\n    }\n}\n/**\n * This function returns the default configuration of rendering flags depending on when the\n * template is in creation mode or update mode. By default, the update block is run with the\n * creation block when the view is in creation mode. Otherwise, the update block is run\n * alone.\n *\n * Dynamically created views do NOT use this configuration (update block and create block are\n * always run separately).\n * @param {?} view\n * @return {?}\n */\nfunction getRenderFlags(view) {\n    return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n        2 /* Update */;\n}\n/** @type {?} */\nvar _currentNamespace = null;\n/**\n * @return {?}\n */\nexport function namespaceSVG() {\n    _currentNamespace = 'http://www.w3.org/2000/svg/';\n}\n/**\n * @return {?}\n */\nexport function namespaceMathML() {\n    _currentNamespace = 'http://www.w3.org/1998/MathML/';\n}\n/**\n * @return {?}\n */\nexport function namespaceHTML() {\n    _currentNamespace = null;\n}\n/**\n * Creates an empty element using {\\@link elementStart} and {\\@link elementEnd}\n *\n * @param {?} index Index of the element in the data array\n * @param {?} name Name of the DOM Node\n * @param {?=} attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param {?=} localRefs A set of local reference bindings on the element.\n * @return {?}\n */\nexport function element(index, name, attrs, localRefs) {\n    elementStart(index, name, attrs, localRefs);\n    elementEnd();\n}\n/**\n * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n * The instruction must later be followed by `elementContainerEnd()` call.\n *\n * @param {?} index Index of the element in the LView array\n * @param {?=} attrs Set of attributes to be used when matching directives.\n * @param {?=} localRefs A set of local reference bindings on the element.\n *\n * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n * matching purposes and setting initial inputs of directives.\n * @return {?}\n */\nexport function elementContainerStart(index, attrs, localRefs) {\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var tView = lView[TVIEW];\n    /** @type {?} */\n    var renderer = lView[RENDERER];\n    ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n    ngDevMode && ngDevMode.rendererCreateComment++;\n    /** @type {?} */\n    var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n    ngDevMode && assertDataInRange(lView, index - 1);\n    /** @type {?} */\n    var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null);\n    appendChild(native, tNode, lView);\n    createDirectivesAndLocals(tView, lView, localRefs);\n}\n/**\n * Mark the end of the <ng-container>.\n * @return {?}\n */\nexport function elementContainerEnd() {\n    /** @type {?} */\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var tView = lView[TVIEW];\n    if (getIsParent()) {\n        setIsParent(false);\n    }\n    else {\n        ngDevMode && assertHasParent(getPreviousOrParentTNode());\n        previousOrParentTNode = /** @type {?} */ ((previousOrParentTNode.parent));\n        setPreviousOrParentTNode(previousOrParentTNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n    /** @type {?} */\n    var currentQueries = lView[QUERIES];\n    if (currentQueries) {\n        lView[QUERIES] = currentQueries.addNode(/** @type {?} */ (previousOrParentTNode));\n    }\n    queueLifecycleHooks(previousOrParentTNode.flags, tView);\n}\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param {?} index Index of the element in the LView array\n * @param {?} name Name of the DOM Node\n * @param {?=} attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param {?=} localRefs A set of local reference bindings on the element.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n * @return {?}\n */\nexport function elementStart(index, name, attrs, localRefs) {\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var tView = lView[TVIEW];\n    ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n    ngDevMode && ngDevMode.rendererCreateElement++;\n    /** @type {?} */\n    var native = elementCreate(name);\n    ngDevMode && assertDataInRange(lView, index - 1);\n    /** @type {?} */\n    var tNode = createNodeAtIndex(index, 3 /* Element */, /** @type {?} */ ((native)), name, attrs || null);\n    if (attrs) {\n        setUpAttributes(native, attrs);\n    }\n    appendChild(native, tNode, lView);\n    createDirectivesAndLocals(tView, lView, localRefs);\n    // any immediate children of a component or template container must be pre-emptively\n    // monkey-patched with the component view data so that the element can be inspected\n    // later on using any element discovery utility methods (see `element_discovery.ts`)\n    if (getElementDepthCount() === 0) {\n        attachPatchData(native, lView);\n    }\n    increaseElementDepthCount();\n}\n/**\n * Creates a native element from a tag name, using a renderer.\n * @param {?} name the tag name\n * @param {?=} overriddenRenderer Optional A renderer to override the default one\n * @return {?} the element created\n */\nexport function elementCreate(name, overriddenRenderer) {\n    /** @type {?} */\n    var native;\n    /** @type {?} */\n    var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n    if (isProceduralRenderer(rendererToUse)) {\n        native = rendererToUse.createElement(name, _currentNamespace);\n    }\n    else {\n        if (_currentNamespace === null) {\n            native = rendererToUse.createElement(name);\n        }\n        else {\n            native = rendererToUse.createElementNS(_currentNamespace, name);\n        }\n    }\n    return native;\n}\n/**\n * Creates directive instances and populates local refs.\n *\n * @param {?} tView\n * @param {?} viewData\n * @param {?} localRefs Local refs of the node in question\n * @param {?=} localRefExtractor mapping function that extracts local ref value from TNode\n * @return {?}\n */\nfunction createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n    if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n    if (!getBindingsEnabled())\n        return;\n    /** @type {?} */\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    if (getFirstTemplatePass()) {\n        ngDevMode && ngDevMode.firstTemplatePass++;\n        resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n    }\n    instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n    invokeDirectivesHostBindings(tView, viewData, previousOrParentTNode);\n    saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n}\n/**\n * Takes a list of local names and indices and pushes the resolved local variable values\n * to LView in the same order as they are loaded in the template with load().\n * @param {?} viewData\n * @param {?} tNode\n * @param {?} localRefExtractor\n * @return {?}\n */\nfunction saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n    /** @type {?} */\n    var localNames = tNode.localNames;\n    if (localNames) {\n        /** @type {?} */\n        var localIndex = tNode.index + 1;\n        for (var i = 0; i < localNames.length; i += 2) {\n            /** @type {?} */\n            var index = /** @type {?} */ (localNames[i + 1]);\n            /** @type {?} */\n            var value = index === -1 ?\n                localRefExtractor(/** @type {?} */ (tNode), viewData) :\n                viewData[index];\n            viewData[localIndex++] = value;\n        }\n    }\n}\n/**\n * Gets TView from a template function or creates a new TView\n * if it doesn't already exist.\n *\n * @param {?} templateFn The template from which to get static data\n * @param {?} consts The number of nodes, local refs, and pipes in this view\n * @param {?} vars The number of bindings and pure function bindings in this view\n * @param {?} directives Directive defs that should be saved on TView\n * @param {?} pipes Pipe defs that should be saved on TView\n * @param {?} viewQuery\n * @return {?} TView\n */\nexport function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n    // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n    // 1. It is a megamorphic call on each invocation.\n    // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n    //    outer template invocation, which means that no such property will exist\n    // Correct solution is to only put `ngPrivateData` on the Component template\n    // and not on embedded templates.\n    return templateFn.ngPrivateData ||\n        (templateFn.ngPrivateData = /** @type {?} */ (createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery)));\n}\n/**\n * Creates a TView instance\n *\n * @param {?} viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n * @param {?} templateFn Template function\n * @param {?} consts The number of nodes, local refs, and pipes in this template\n * @param {?} vars\n * @param {?} directives Registry of directives for this view\n * @param {?} pipes Registry of pipes for this view\n * @param {?} viewQuery\n * @return {?}\n */\nexport function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n    ngDevMode && ngDevMode.tView++;\n    /** @type {?} */\n    var bindingStartIndex = HEADER_OFFSET + consts;\n    /** @type {?} */\n    var initialViewLength = bindingStartIndex + vars;\n    /** @type {?} */\n    var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n    return blueprint[/** @type {?} */ (TVIEW)] = {\n        id: viewIndex,\n        blueprint: blueprint,\n        template: templateFn,\n        viewQuery: viewQuery,\n        node: /** @type {?} */ ((null)),\n        data: blueprint.slice(),\n        // Fill in to match HEADER_OFFSET in LView\n        childIndex: -1,\n        // Children set in addToViewTree(), if any\n        bindingStartIndex: bindingStartIndex,\n        expandoStartIndex: initialViewLength,\n        expandoInstructions: null,\n        firstTemplatePass: true,\n        initHooks: null,\n        checkHooks: null,\n        contentHooks: null,\n        contentCheckHooks: null,\n        viewHooks: null,\n        viewCheckHooks: null,\n        destroyHooks: null,\n        pipeDestroyHooks: null,\n        cleanup: null,\n        contentQueries: null,\n        components: null,\n        directiveRegistry: typeof directives === 'function' ? directives() : directives,\n        pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n        firstChild: null,\n    };\n}\n/**\n * @param {?} bindingStartIndex\n * @param {?} initialViewLength\n * @return {?}\n */\nfunction createViewBlueprint(bindingStartIndex, initialViewLength) {\n    /** @type {?} */\n    var blueprint = /** @type {?} */ (new Array(initialViewLength)\n        .fill(null, 0, bindingStartIndex)\n        .fill(NO_CHANGE, bindingStartIndex));\n    blueprint[CONTAINER_INDEX] = -1;\n    blueprint[BINDING_INDEX] = bindingStartIndex;\n    return blueprint;\n}\n/**\n * @param {?} native\n * @param {?} attrs\n * @return {?}\n */\nfunction setUpAttributes(native, attrs) {\n    /** @type {?} */\n    var renderer = getLView()[RENDERER];\n    /** @type {?} */\n    var isProc = isProceduralRenderer(renderer);\n    /** @type {?} */\n    var i = 0;\n    while (i < attrs.length) {\n        /** @type {?} */\n        var attrName = attrs[i];\n        if (attrName === 1 /* SelectOnly */)\n            break;\n        if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n            i += 2;\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            if (attrName === 0 /* NamespaceURI */) {\n                /** @type {?} */\n                var namespaceURI = /** @type {?} */ (attrs[i + 1]);\n                /** @type {?} */\n                var attrName_1 = /** @type {?} */ (attrs[i + 2]);\n                /** @type {?} */\n                var attrVal = /** @type {?} */ (attrs[i + 3]);\n                isProc ?\n                    (/** @type {?} */ (renderer))\n                        .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                i += 4;\n            }\n            else {\n                /** @type {?} */\n                var attrVal = attrs[i + 1];\n                isProc ?\n                    (/** @type {?} */ (renderer))\n                        .setAttribute(native, /** @type {?} */ (attrName), /** @type {?} */ (attrVal)) :\n                    native.setAttribute(/** @type {?} */ (attrName), /** @type {?} */ (attrVal));\n                i += 2;\n            }\n        }\n    }\n}\n/**\n * @param {?} text\n * @param {?} token\n * @return {?}\n */\nexport function createError(text, token) {\n    return new Error(\"Renderer: \" + text + \" [\" + stringify(token) + \"]\");\n}\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param {?} factory\n * @param {?} elementOrSelector Render element or CSS selector to locate the element.\n * @return {?}\n */\nexport function locateHostElement(factory, elementOrSelector) {\n    /** @type {?} */\n    var defaultRenderer = factory.createRenderer(null, null);\n    /** @type {?} */\n    var rNode = typeof elementOrSelector === 'string' ?\n        (isProceduralRenderer(defaultRenderer) ?\n            defaultRenderer.selectRootElement(elementOrSelector) :\n            defaultRenderer.querySelector(elementOrSelector)) :\n        elementOrSelector;\n    if (ngDevMode && !rNode) {\n        if (typeof elementOrSelector === 'string') {\n            throw createError('Host node with selector not found:', elementOrSelector);\n        }\n        else {\n            throw createError('Host node is required:', elementOrSelector);\n        }\n    }\n    return rNode;\n}\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param {?} eventName Name of the event\n * @param {?} listenerFn The function to be called when event emits\n * @param {?=} useCapture Whether or not to use capture in event listener.\n * @return {?}\n */\nexport function listener(eventName, listenerFn, useCapture) {\n    if (useCapture === void 0) { useCapture = false; }\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var tNode = getPreviousOrParentTNode();\n    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n    // add native event listener - applicable to elements only\n    if (tNode.type === 3 /* Element */) {\n        /** @type {?} */\n        var native = /** @type {?} */ (getNativeByTNode(tNode, lView));\n        ngDevMode && ngDevMode.rendererAddEventListener++;\n        /** @type {?} */\n        var renderer = lView[RENDERER];\n        // In order to match current behavior, native DOM event listeners must be added for all\n        // events (including outputs).\n        if (isProceduralRenderer(renderer)) {\n            /** @type {?} */\n            var cleanupFn = renderer.listen(native, eventName, listenerFn);\n            storeCleanupFn(lView, cleanupFn);\n        }\n        else {\n            /** @type {?} */\n            var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n            native.addEventListener(eventName, wrappedListener, useCapture);\n            /** @type {?} */\n            var cleanupInstances = getCleanup(lView);\n            cleanupInstances.push(wrappedListener);\n            if (getFirstTemplatePass()) {\n                getTViewCleanup(lView).push(eventName, tNode.index, /** @type {?} */ ((cleanupInstances)).length - 1, useCapture);\n            }\n        }\n    }\n    // subscribe to directive outputs\n    if (tNode.outputs === undefined) {\n        // if we create TNode here, inputs must be undefined so we know they still need to be\n        // checked\n        tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n    }\n    /** @type {?} */\n    var outputs = tNode.outputs;\n    /** @type {?} */\n    var outputData;\n    if (outputs && (outputData = outputs[eventName])) {\n        createOutput(lView, outputData, listenerFn);\n    }\n}\n/**\n * Iterates through the outputs associated with a particular event name and subscribes to\n * each output.\n * @param {?} lView\n * @param {?} outputs\n * @param {?} listener\n * @return {?}\n */\nfunction createOutput(lView, outputs, listener) {\n    for (var i = 0; i < outputs.length; i += 2) {\n        ngDevMode && assertDataInRange(lView, /** @type {?} */ (outputs[i]));\n        /** @type {?} */\n        var subscription = lView[/** @type {?} */ (outputs[i])][outputs[i + 1]].subscribe(listener);\n        storeCleanupWithContext(lView, subscription, subscription.unsubscribe);\n    }\n}\n/**\n * Saves context for this cleanup function in LView.cleanupInstances.\n *\n * On the first template pass, saves in TView:\n * - Cleanup function\n * - Index of context we just saved in LView.cleanupInstances\n * @param {?} lView\n * @param {?} context\n * @param {?} cleanupFn\n * @return {?}\n */\nexport function storeCleanupWithContext(lView, context, cleanupFn) {\n    getCleanup(lView).push(context);\n    if (lView[TVIEW].firstTemplatePass) {\n        getTViewCleanup(lView).push(cleanupFn, /** @type {?} */ ((lView[CLEANUP])).length - 1);\n    }\n}\n/**\n * Saves the cleanup function itself in LView.cleanupInstances.\n *\n * This is necessary for functions that are wrapped with their contexts, like in renderer2\n * listeners.\n *\n * On the first template pass, the index of the cleanup function is saved in TView.\n * @param {?} view\n * @param {?} cleanupFn\n * @return {?}\n */\nexport function storeCleanupFn(view, cleanupFn) {\n    getCleanup(view).push(cleanupFn);\n    if (view[TVIEW].firstTemplatePass) {\n        getTViewCleanup(view).push(/** @type {?} */ ((view[CLEANUP])).length - 1, null);\n    }\n}\n/**\n * Mark the end of the element.\n * @return {?}\n */\nexport function elementEnd() {\n    /** @type {?} */\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    if (getIsParent()) {\n        setIsParent(false);\n    }\n    else {\n        ngDevMode && assertHasParent(getPreviousOrParentTNode());\n        previousOrParentTNode = /** @type {?} */ ((previousOrParentTNode.parent));\n        setPreviousOrParentTNode(previousOrParentTNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var currentQueries = lView[QUERIES];\n    if (currentQueries) {\n        lView[QUERIES] = currentQueries.addNode(/** @type {?} */ (previousOrParentTNode));\n    }\n    queueLifecycleHooks(previousOrParentTNode.flags, getLView()[TVIEW]);\n    decreaseElementDepthCount();\n}\n/**\n * Updates the value of removes an attribute on an Element.\n *\n * @param {?} index\n * @param {?} name name The name of the attribute.\n * @param {?} value value The attribute is removed when value is `null` or `undefined`.\n *                  Otherwise the attribute value is set to the stringified value.\n * @param {?=} sanitizer An optional function used to sanitize the value.\n * @return {?}\n */\nexport function elementAttribute(index, name, value, sanitizer) {\n    if (value !== NO_CHANGE) {\n        /** @type {?} */\n        var lView = getLView();\n        /** @type {?} */\n        var renderer = lView[RENDERER];\n        /** @type {?} */\n        var element_1 = getNativeByIndex(index, lView);\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                element_1.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            /** @type {?} */\n            var strValue = sanitizer == null ? stringify(value) : sanitizer(value);\n            isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                element_1.setAttribute(name, strValue);\n        }\n    }\n}\n/**\n * Update a property on an Element.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new \\@Inputs don't have to be re-compiled.\n *\n * @template T\n * @param {?} index The index of the element to update in the data array\n * @param {?} propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param {?} value New value to write.\n * @param {?=} sanitizer An optional function used to sanitize the value.\n * @return {?}\n */\nexport function elementProperty(index, propName, value, sanitizer) {\n    if (value === NO_CHANGE)\n        return;\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var element = /** @type {?} */ (getNativeByIndex(index, lView));\n    /** @type {?} */\n    var tNode = getTNode(index, lView);\n    /** @type {?} */\n    var inputData = initializeTNodeInputs(tNode);\n    /** @type {?} */\n    var dataValue;\n    if (inputData && (dataValue = inputData[propName])) {\n        setInputsForProperty(lView, dataValue, value);\n        if (isComponent(tNode))\n            markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n        if (ngDevMode && tNode.type === 3 /* Element */) {\n            setNgReflectProperties(lView, /** @type {?} */ (element), propName, value);\n        }\n    }\n    else if (tNode.type === 3 /* Element */) {\n        /** @type {?} */\n        var renderer = lView[RENDERER];\n        // It is assumed that the sanitizer is only added when the compiler determines that the property\n        // is risky, so sanitization can be done without further checks.\n        value = sanitizer != null ? (/** @type {?} */ (sanitizer(value))) : value;\n        ngDevMode && ngDevMode.rendererSetProperty++;\n        isProceduralRenderer(renderer) ?\n            renderer.setProperty(/** @type {?} */ (element), propName, value) :\n            ((/** @type {?} */ (element)).setProperty ? (/** @type {?} */ (element)).setProperty(propName, value) :\n                (/** @type {?} */ (element))[propName] = value);\n    }\n}\n/**\n * Constructs a TNode object from the arguments.\n *\n * @param {?} viewData\n * @param {?} type The type of the node\n * @param {?} adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n * @param {?} tagName The tag name of the node\n * @param {?} attrs The attributes defined on this node\n * @param {?} tViews Any TViews attached to this node\n * @return {?} the TNode object\n */\nexport function createTNode(viewData, type, adjustedIndex, tagName, attrs, tViews) {\n    /** @type {?} */\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    ngDevMode && ngDevMode.tNode++;\n    /** @type {?} */\n    var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n    /** @type {?} */\n    var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n    /** @type {?} */\n    var tParent = parentInSameView ? /** @type {?} */ (parent) : null;\n    return {\n        type: type,\n        index: adjustedIndex,\n        injectorIndex: tParent ? tParent.injectorIndex : -1,\n        flags: 0,\n        providerIndexes: 0,\n        tagName: tagName,\n        attrs: attrs,\n        localNames: null,\n        initialInputs: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        tViews: tViews,\n        next: null,\n        child: null,\n        parent: tParent,\n        detached: null,\n        stylingTemplate: null,\n        projection: null\n    };\n}\n/**\n * Given a list of directive indices and minified input names, sets the\n * input properties on the corresponding directives.\n * @param {?} lView\n * @param {?} inputs\n * @param {?} value\n * @return {?}\n */\nfunction setInputsForProperty(lView, inputs, value) {\n    for (var i = 0; i < inputs.length; i += 2) {\n        ngDevMode && assertDataInRange(lView, /** @type {?} */ (inputs[i]));\n        lView[/** @type {?} */ (inputs[i])][inputs[i + 1]] = value;\n    }\n}\n/**\n * @param {?} lView\n * @param {?} element\n * @param {?} propName\n * @param {?} value\n * @return {?}\n */\nfunction setNgReflectProperties(lView, element, propName, value) {\n    /** @type {?} */\n    var renderer = lView[RENDERER];\n    /** @type {?} */\n    var attrName = normalizeDebugBindingName(propName);\n    /** @type {?} */\n    var debugValue = normalizeDebugBindingValue(value);\n    isProceduralRenderer(renderer) ? renderer.setAttribute(element, attrName, debugValue) :\n        element.setAttribute(attrName, debugValue);\n}\n/**\n * Consolidates all inputs or outputs of all directives on this logical node.\n *\n * @param {?} tNodeFlags\n * @param {?} direction\n * @return {?} PropertyAliases|null aggregate of all properties if any, `null` otherwise\n */\nfunction generatePropertyAliases(tNodeFlags, direction) {\n    /** @type {?} */\n    var tView = getLView()[TVIEW];\n    /** @type {?} */\n    var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n    /** @type {?} */\n    var propStore = null;\n    if (count > 0) {\n        /** @type {?} */\n        var start = tNodeFlags >> 16 /* DirectiveStartingIndexShift */;\n        /** @type {?} */\n        var end = start + count;\n        /** @type {?} */\n        var isInput = direction === 0 /* Input */;\n        /** @type {?} */\n        var defs = tView.data;\n        for (var i = start; i < end; i++) {\n            /** @type {?} */\n            var directiveDef = /** @type {?} */ (defs[i]);\n            /** @type {?} */\n            var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n            for (var publicName in propertyAliasMap) {\n                if (propertyAliasMap.hasOwnProperty(publicName)) {\n                    propStore = propStore || {};\n                    /** @type {?} */\n                    var internalName = propertyAliasMap[publicName];\n                    /** @type {?} */\n                    var hasProperty = propStore.hasOwnProperty(publicName);\n                    hasProperty ? propStore[publicName].push(i, internalName) :\n                        (propStore[publicName] = [i, internalName]);\n                }\n            }\n        }\n    }\n    return propStore;\n}\n/**\n * Add or remove a class in a `classList` on a DOM element.\n *\n * This instruction is meant to handle the [class.foo]=\"exp\" case\n *\n * @param {?} index The index of the element to update in the data array\n * @param {?} classIndex Index of class to toggle. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param {?} value A value indicating if a given class should be added or removed.\n * @param {?=} directive the ref to the directive that is attempting to change styling.\n * @return {?}\n */\nexport function elementClassProp(index, classIndex, value, directive) {\n    if (directive != undefined) {\n        return hackImplementationOfElementClassProp(index, classIndex, value, directive); // proper supported in next PR\n    }\n    /** @type {?} */\n    var val = (value instanceof BoundPlayerFactory) ? (/** @type {?} */ (value)) : (!!value);\n    updateElementClassProp(getStylingContext(index, getLView()), classIndex, val);\n}\n/**\n * Assign any inline style values to the element during creation mode.\n *\n * This instruction is meant to be called during creation mode to apply all styling\n * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n * value is allocated for the styling details for its corresponding element (the element\n * index is the previous index value from this one).\n *\n * (Note this function calls `elementStylingApply` immediately when called.)\n *\n *\n * @param {?=} classDeclarations A key/value array of CSS classes that will be registered on the element.\n *   Each individual style will be used on the element as long as it is not overridden\n *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n *   bindings. If a class binding changes its value to a falsy value then the matching initial\n *   class value that are passed in here will be applied to the element (if matched).\n * @param {?=} styleDeclarations A key/value array of CSS styles that will be registered on the element.\n *   Each individual style will be used on the element as long as it is not overridden\n *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n *   bindings. If a style binding changes its value to null then the initial styling\n *   values that are passed in here will be applied to the element (if matched).\n * @param {?=} styleSanitizer An optional sanitizer function that will be used (if provided)\n *   to sanitize the any CSS property values that are applied to the element (during rendering).\n * @param {?=} directive the ref to the directive that is attempting to change styling.\n * @return {?}\n */\nexport function elementStyling(classDeclarations, styleDeclarations, styleSanitizer, directive) {\n    if (directive != undefined) {\n        getCreationMode() &&\n            hackImplementationOfElementStyling(classDeclarations || null, styleDeclarations || null, styleSanitizer || null, directive); // supported in next PR\n        return;\n    }\n    /** @type {?} */\n    var tNode = getPreviousOrParentTNode();\n    /** @type {?} */\n    var inputData = initializeTNodeInputs(tNode);\n    if (!tNode.stylingTemplate) {\n        /** @type {?} */\n        var hasClassInput = inputData && inputData.hasOwnProperty('class') ? true : false;\n        if (hasClassInput) {\n            tNode.flags |= 32768 /* hasClassInput */;\n        }\n        // initialize the styling template.\n        tNode.stylingTemplate = createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer, hasClassInput);\n    }\n    if (styleDeclarations && styleDeclarations.length ||\n        classDeclarations && classDeclarations.length) {\n        /** @type {?} */\n        var index = tNode.index - HEADER_OFFSET;\n        if (delegateToClassInput(tNode)) {\n            /** @type {?} */\n            var lView = getLView();\n            /** @type {?} */\n            var stylingContext = getStylingContext(index, lView);\n            /** @type {?} */\n            var initialClasses = /** @type {?} */ (stylingContext[6 /* PreviousOrCachedMultiClassValue */]);\n            setInputsForProperty(lView, /** @type {?} */ ((/** @type {?} */ ((tNode.inputs))['class'])), initialClasses);\n        }\n        elementStylingApply(index);\n    }\n}\n/**\n * Apply all styling values to the element which have been queued by any styling instructions.\n *\n * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n * have been issued against the element. This function will also determine if any styles have\n * changed and will then skip the operation if there is nothing new to render.\n *\n * Once called then all queued styles will be flushed.\n *\n * @param {?} index Index of the element's styling storage that will be rendered.\n *        (Note that this is not the element index, but rather an index value allocated\n *        specifically for element styling--the index must be the next index after the element\n *        index.)\n * @param {?=} directive the ref to the directive that is attempting to change styling.\n * @return {?}\n */\nexport function elementStylingApply(index, directive) {\n    if (directive != undefined) {\n        return hackImplementationOfElementStylingApply(index, directive); // supported in next PR\n    }\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var isFirstRender = (lView[FLAGS] & 1 /* CreationMode */) !== 0;\n    /** @type {?} */\n    var totalPlayersQueued = renderStyleAndClassBindings(getStylingContext(index, lView), lView[RENDERER], lView, isFirstRender);\n    if (totalPlayersQueued > 0) {\n        /** @type {?} */\n        var rootContext = getRootContext(lView);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n}\n/**\n * Queue a given style to be rendered on an Element.\n *\n * If the style value is `null` then it will be removed from the element\n * (or assigned a different value depending if there are any styles placed\n * on the element with `elementStyle` or any styles that are present\n * from when the element was created (with `elementStyling`).\n *\n * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n *\n * @param {?} index Index of the element's styling storage to change in the data array.\n *        (Note that this is not the element index, but rather an index value allocated\n *        specifically for element styling--the index must be the next index after the element\n *        index.)\n * @param {?} styleIndex Index of the style property on this element. (Monotonically increasing.)\n * @param {?} value New value to write (null to remove).\n * @param {?=} suffix Optional suffix. Used with scalar values to add unit such as `px`.\n *        Note that when a suffix is provided then the underlying sanitizer will\n *        be ignored.\n * @param {?=} directive the ref to the directive that is attempting to change styling.\n * @return {?}\n */\nexport function elementStyleProp(index, styleIndex, value, suffix, directive) {\n    if (directive != undefined)\n        return hackImplementationOfElementStyleProp(index, styleIndex, value, suffix, directive);\n    /** @type {?} */\n    var valueToAdd = null;\n    if (value) {\n        if (suffix) {\n            // when a suffix is applied then it will bypass\n            // sanitization entirely (b/c a new string is created)\n            valueToAdd = stringify(value) + suffix;\n        }\n        else {\n            // sanitization happens by dealing with a String value\n            // this means that the string value will be passed through\n            // into the style rendering later (which is where the value\n            // will be sanitized before it is applied)\n            valueToAdd = /** @type {?} */ ((value));\n        }\n    }\n    updateElementStyleProp(getStylingContext(index, getLView()), styleIndex, valueToAdd);\n}\n/**\n * Queue a key/value map of styles to be rendered on an Element.\n *\n * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n * If any styles are set to `null` then they will be removed from the element (unless the same\n * style properties have been assigned to the element during creation using `elementStyling`).\n *\n * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n *\n * @template T\n * @param {?} index Index of the element's styling storage to change in the data array.\n *        (Note that this is not the element index, but rather an index value allocated\n *        specifically for element styling--the index must be the next index after the element\n *        index.)\n * @param {?} classes A key/value style map of CSS classes that will be added to the given element.\n *        Any missing classes (that have already been applied to the element beforehand) will be\n *        removed (unset) from the element's list of CSS classes.\n * @param {?=} styles A key/value style map of the styles that will be applied to the given element.\n *        Any missing styles (that have already been applied to the element beforehand) will be\n *        removed (unset) from the element's styling.\n * @param {?=} directive the ref to the directive that is attempting to change styling.\n * @return {?}\n */\nexport function elementStylingMap(index, classes, styles, directive) {\n    if (directive != undefined)\n        return hackImplementationOfElementStylingMap(index, classes, styles, directive);\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var tNode = getTNode(index, lView);\n    /** @type {?} */\n    var stylingContext = getStylingContext(index, lView);\n    if (delegateToClassInput(tNode) && classes !== NO_CHANGE) {\n        /** @type {?} */\n        var initialClasses = /** @type {?} */ (stylingContext[6 /* PreviousOrCachedMultiClassValue */]);\n        /** @type {?} */\n        var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + (/** @type {?} */ (classes));\n        setInputsForProperty(lView, /** @type {?} */ ((/** @type {?} */ ((tNode.inputs))['class'])), classInputVal);\n    }\n    updateStylingMap(stylingContext, classes, styles);\n}\n/**\n * @record\n */\nfunction HostStylingHack() { }\n/** @type {?} */\nHostStylingHack.prototype.classDeclarations;\n/** @type {?} */\nHostStylingHack.prototype.styleDeclarations;\n/** @type {?} */\nHostStylingHack.prototype.styleSanitizer;\n/** @typedef {?} */\nvar HostStylingHackMap;\n/**\n * @param {?} classDeclarations\n * @param {?} styleDeclarations\n * @param {?} styleSanitizer\n * @param {?} directive\n * @return {?}\n */\nfunction hackImplementationOfElementStyling(classDeclarations, styleDeclarations, styleSanitizer, directive) {\n    /** @type {?} */\n    var node = getNativeByTNode(getPreviousOrParentTNode(), getLView());\n    ngDevMode && assertDefined(node, 'expecting parent DOM node');\n    /** @type {?} */\n    var hostStylingHackMap = ((/** @type {?} */ (node)).hostStylingHack || ((/** @type {?} */ (node)).hostStylingHack = new Map()));\n    hostStylingHackMap.set(directive, {\n        classDeclarations: hackSquashDeclaration(classDeclarations),\n        styleDeclarations: hackSquashDeclaration(styleDeclarations), styleSanitizer: styleSanitizer\n    });\n}\n/**\n * @param {?} declarations\n * @return {?}\n */\nfunction hackSquashDeclaration(declarations) {\n    // assume the array is correct. This should be fine for View Engine compatibility.\n    return declarations || /** @type {?} */ ([]);\n}\n/**\n * @param {?} index\n * @param {?} classIndex\n * @param {?} value\n * @param {?} directive\n * @return {?}\n */\nfunction hackImplementationOfElementClassProp(index, classIndex, value, directive) {\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var node = getNativeByIndex(index, lView);\n    ngDevMode && assertDefined(node, 'could not locate node');\n    /** @type {?} */\n    var hostStylingHack = (/** @type {?} */ (node)).hostStylingHack.get(directive);\n    /** @type {?} */\n    var className = hostStylingHack.classDeclarations[classIndex];\n    /** @type {?} */\n    var renderer = lView[RENDERER];\n    if (isProceduralRenderer(renderer)) {\n        value ? renderer.addClass(node, className) : renderer.removeClass(node, className);\n    }\n    else {\n        /** @type {?} */\n        var classList = (/** @type {?} */ (node)).classList;\n        value ? classList.add(className) : classList.remove(className);\n    }\n}\n/**\n * @param {?} index\n * @param {?=} directive\n * @return {?}\n */\nfunction hackImplementationOfElementStylingApply(index, directive) {\n    // Do nothing because the hack implementation is eager.\n}\n/**\n * @param {?} index\n * @param {?} styleIndex\n * @param {?} value\n * @param {?=} suffix\n * @param {?=} directive\n * @return {?}\n */\nfunction hackImplementationOfElementStyleProp(index, styleIndex, value, suffix, directive) {\n    throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n}\n/**\n * @template T\n * @param {?} index\n * @param {?} classes\n * @param {?=} styles\n * @param {?=} directive\n * @return {?}\n */\nfunction hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n    throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n}\n/**\n * Create static text node\n *\n * @param {?} index Index of the node in the data array\n * @param {?=} value Value to write. This value will be stringified.\n * @return {?}\n */\nexport function text(index, value) {\n    /** @type {?} */\n    var lView = getLView();\n    ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n    ngDevMode && ngDevMode.rendererCreateTextNode++;\n    /** @type {?} */\n    var textNative = createTextNode(value, lView[RENDERER]);\n    /** @type {?} */\n    var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n    // Text nodes are self closing.\n    setIsParent(false);\n    appendChild(textNative, tNode, lView);\n}\n/**\n * Create text node with binding\n * Bindings should be handled externally with the proper interpolation(1-8) method\n *\n * @template T\n * @param {?} index Index of the node in the data array.\n * @param {?} value Stringified value to write.\n * @return {?}\n */\nexport function textBinding(index, value) {\n    if (value !== NO_CHANGE) {\n        /** @type {?} */\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        /** @type {?} */\n        var element_2 = /** @type {?} */ ((getNativeByIndex(index, lView)));\n        ngDevMode && assertDefined(element_2, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        /** @type {?} */\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify(value)) :\n            element_2.textContent = stringify(value);\n    }\n}\n/**\n * Instantiate a root component.\n * @template T\n * @param {?} tView\n * @param {?} viewData\n * @param {?} def\n * @return {?}\n */\nexport function instantiateRootComponent(tView, viewData, def) {\n    /** @type {?} */\n    var rootTNode = getPreviousOrParentTNode();\n    if (tView.firstTemplatePass) {\n        if (def.providersResolver)\n            def.providersResolver(def);\n        generateExpandoInstructionBlock(tView, rootTNode, 1);\n        baseResolveDirective(tView, viewData, def, def.factory);\n    }\n    /** @type {?} */\n    var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, /** @type {?} */ (rootTNode));\n    postProcessBaseDirective(viewData, rootTNode, directive, /** @type {?} */ (def));\n    return directive;\n}\n/**\n * Resolve the matched directives on a node.\n * @param {?} tView\n * @param {?} viewData\n * @param {?} directives\n * @param {?} tNode\n * @param {?} localRefs\n * @return {?}\n */\nfunction resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n    // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n    ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n    /** @type {?} */\n    var exportsMap = localRefs ? { '': -1 } : null;\n    if (directives) {\n        initNodeFlags(tNode, tView.data.length, directives.length);\n        // When the same token is provided by several directives on the same node, some rules apply in\n        // the viewEngine:\n        // - viewProviders have priority over providers\n        // - the last directive in NgModule.declarations has priority over the previous one\n        // So to match these rules, the order in which providers are added in the arrays is very\n        // important.\n        for (var i = 0; i < directives.length; i++) {\n            /** @type {?} */\n            var def = /** @type {?} */ (directives[i]);\n            if (def.providersResolver)\n                def.providersResolver(def);\n        }\n        generateExpandoInstructionBlock(tView, tNode, directives.length);\n        for (var i = 0; i < directives.length; i++) {\n            /** @type {?} */\n            var def = /** @type {?} */ (directives[i]);\n            /** @type {?} */\n            var directiveDefIdx = tView.data.length;\n            baseResolveDirective(tView, viewData, def, def.factory);\n            saveNameToExportMap(/** @type {?} */ ((tView.data)).length - 1, def, exportsMap);\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n        }\n    }\n    if (exportsMap)\n        cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n}\n/**\n * Instantiate all the directives that were previously resolved on the current node.\n * @param {?} tView\n * @param {?} viewData\n * @param {?} previousOrParentTNode\n * @return {?}\n */\nfunction instantiateAllDirectives(tView, viewData, previousOrParentTNode) {\n    /** @type {?} */\n    var start = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n    /** @type {?} */\n    var end = start + (previousOrParentTNode.flags & 4095 /* DirectiveCountMask */);\n    if (!getFirstTemplatePass() && start < end) {\n        getOrCreateNodeInjectorForNode(/** @type {?} */ (previousOrParentTNode), viewData);\n    }\n    for (var i = start; i < end; i++) {\n        /** @type {?} */\n        var def = /** @type {?} */ (tView.data[i]);\n        if (isComponentDef(def)) {\n            addComponentLogic(viewData, previousOrParentTNode, /** @type {?} */ (def));\n        }\n        /** @type {?} */\n        var directive = getNodeInjectable(tView.data, /** @type {?} */ ((viewData)), i, /** @type {?} */ (previousOrParentTNode));\n        postProcessDirective(viewData, directive, def, i);\n    }\n}\n/**\n * @param {?} tView\n * @param {?} viewData\n * @param {?} previousOrParentTNode\n * @return {?}\n */\nfunction invokeDirectivesHostBindings(tView, viewData, previousOrParentTNode) {\n    /** @type {?} */\n    var start = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n    /** @type {?} */\n    var end = start + (previousOrParentTNode.flags & 4095 /* DirectiveCountMask */);\n    /** @type {?} */\n    var expando = /** @type {?} */ ((tView.expandoInstructions));\n    /** @type {?} */\n    var firstTemplatePass = getFirstTemplatePass();\n    for (var i = start; i < end; i++) {\n        /** @type {?} */\n        var def = /** @type {?} */ (tView.data[i]);\n        /** @type {?} */\n        var directive = viewData[i];\n        if (def.hostBindings) {\n            /** @type {?} */\n            var previousExpandoLength = expando.length;\n            setCurrentDirectiveDef(def); /** @type {?} */\n            ((def.hostBindings))(1 /* Create */, directive, previousOrParentTNode.index);\n            setCurrentDirectiveDef(null);\n            // `hostBindings` function may or may not contain `allocHostVars` call\n            // (e.g. it may not if it only contains host listeners), so we need to check whether\n            // `expandoInstructions` has changed and if not - we push `null` to keep indices in sync\n            if (previousExpandoLength === expando.length && firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n        else if (firstTemplatePass) {\n            expando.push(null);\n        }\n    }\n}\n/**\n * Generates a new block in TView.expandoInstructions for this node.\n *\n * Each expando block starts with the element index (turned negative so we can distinguish\n * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n * @param {?} tView\n * @param {?} tNode\n * @param {?} directiveCount\n * @return {?}\n */\nexport function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n    ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n    /** @type {?} */\n    var elementIndex = -(tNode.index - HEADER_OFFSET);\n    /** @type {?} */\n    var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n    /** @type {?} */\n    var providerCount = tView.data.length - providerStartIndex;\n    (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n}\n/**\n * On the first template pass, we need to reserve space for host binding values\n * after directives are matched (so all directives are saved, then bindings).\n * Because we are updating the blueprint, we only need to do this once.\n * @param {?} tView\n * @param {?} lView\n * @param {?} totalHostVars\n * @return {?}\n */\nfunction prefillHostVars(tView, lView, totalHostVars) {\n    ngDevMode &&\n        assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n    for (var i = 0; i < totalHostVars; i++) {\n        lView.push(NO_CHANGE);\n        tView.blueprint.push(NO_CHANGE);\n        tView.data.push(null);\n    }\n}\n/**\n * Process a directive on the current node after its creation.\n * @template T\n * @param {?} viewData\n * @param {?} directive\n * @param {?} def\n * @param {?} directiveDefIdx\n * @return {?}\n */\nfunction postProcessDirective(viewData, directive, def, directiveDefIdx) {\n    /** @type {?} */\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n    ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n    if (previousOrParentTNode && previousOrParentTNode.attrs) {\n        setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n    }\n    if (def.contentQueries) {\n        def.contentQueries(directiveDefIdx);\n    }\n    if (isComponentDef(def)) {\n        /** @type {?} */\n        var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n        componentView[CONTEXT] = directive;\n    }\n}\n/**\n * A lighter version of postProcessDirective() that is used for the root component.\n * @template T\n * @param {?} lView\n * @param {?} previousOrParentTNode\n * @param {?} directive\n * @param {?} def\n * @return {?}\n */\nfunction postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n    /** @type {?} */\n    var native = getNativeByTNode(previousOrParentTNode, lView);\n    ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n    ngDevMode && assertPreviousIsParent(getIsParent());\n    attachPatchData(directive, lView);\n    if (native) {\n        attachPatchData(native, lView);\n    }\n    // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n    if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n        setUpAttributes(/** @type {?} */ (native), /** @type {?} */ (def.attributes));\n    }\n}\n/**\n * Matches the current node against all available selectors.\n * If a component is matched (at most one), it is returned in first position in the array.\n * @param {?} tView\n * @param {?} viewData\n * @param {?} tNode\n * @return {?}\n */\nfunction findDirectiveMatches(tView, viewData, tNode) {\n    ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n    /** @type {?} */\n    var registry = tView.directiveRegistry;\n    /** @type {?} */\n    var matches = null;\n    if (registry) {\n        for (var i = 0; i < registry.length; i++) {\n            /** @type {?} */\n            var def = /** @type {?} */ (registry[i]);\n            if (isNodeMatchingSelectorList(tNode, /** @type {?} */ ((def.selectors)))) {\n                matches || (matches = []);\n                diPublicInInjector(getOrCreateNodeInjectorForNode(/** @type {?} */ (getPreviousOrParentTNode()), viewData), viewData, def.type);\n                if (isComponentDef(def)) {\n                    if (tNode.flags & 4096 /* isComponent */)\n                        throwMultipleComponentError(tNode);\n                    tNode.flags = 4096 /* isComponent */;\n                    // The component is always stored first with directives after.\n                    matches.unshift(def);\n                }\n                else {\n                    matches.push(def);\n                }\n            }\n        }\n    }\n    return matches;\n}\n/**\n * Stores index of component's host element so it will be queued for view refresh during CD.\n * @param {?} previousOrParentTNode\n * @return {?}\n */\nexport function queueComponentIndexForCheck(previousOrParentTNode) {\n    ngDevMode &&\n        assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n    /** @type {?} */\n    var tView = getLView()[TVIEW];\n    (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n}\n/**\n * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n * CD.\n * @param {?} tView\n * @param {?} def\n * @param {?} hostVars\n * @return {?}\n */\nfunction queueHostBindingForCheck(tView, def, hostVars) {\n    ngDevMode &&\n        assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n    /** @type {?} */\n    var expando = /** @type {?} */ ((tView.expandoInstructions));\n    // check whether a given `hostBindings` function already exists in expandoInstructions,\n    // which can happen in case directive definition was extended from base definition (as a part of\n    // the `InheritDefinitionFeature` logic)\n    if (expando.length < 2 || expando[expando.length - 2] !== def.hostBindings) {\n        expando.push(/** @type {?} */ ((def.hostBindings)), hostVars);\n    }\n}\n/**\n * Caches local names and their matching directive indices for query and template lookups.\n * @param {?} tNode\n * @param {?} localRefs\n * @param {?} exportsMap\n * @return {?}\n */\nfunction cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n    if (localRefs) {\n        /** @type {?} */\n        var localNames = tNode.localNames = [];\n        // Local names must be stored in tNode in the same order that localRefs are defined\n        // in the template to ensure the data is loaded in the same slots as their refs\n        // in the template (for template queries).\n        for (var i = 0; i < localRefs.length; i += 2) {\n            /** @type {?} */\n            var index = exportsMap[localRefs[i + 1]];\n            if (index == null)\n                throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n            localNames.push(localRefs[i], index);\n        }\n    }\n}\n/**\n * Builds up an export map as directives are created, so local refs can be quickly mapped\n * to their directive instances.\n * @param {?} index\n * @param {?} def\n * @param {?} exportsMap\n * @return {?}\n */\nfunction saveNameToExportMap(index, def, exportsMap) {\n    if (exportsMap) {\n        if (def.exportAs)\n            exportsMap[def.exportAs] = index;\n        if ((/** @type {?} */ (def)).template)\n            exportsMap[''] = index;\n    }\n}\n/**\n * Initializes the flags on the current node, setting all indices to the initial index,\n * the directive count to 0, and adding the isComponent flag.\n * @param {?} tNode\n * @param {?} index the initial index\n * @param {?} numberOfDirectives\n * @return {?}\n */\nexport function initNodeFlags(tNode, index, numberOfDirectives) {\n    ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n    /** @type {?} */\n    var flags = tNode.flags;\n    ngDevMode && assertEqual(flags === 0 || flags === 4096 /* isComponent */, true, 'expected node flags to not be initialized');\n    ngDevMode && assertNotEqual(numberOfDirectives, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n    // When the first directive is created on a node, save the index\n    tNode.flags = index << 16 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ |\n        numberOfDirectives;\n    tNode.providerIndexes = index;\n}\n/**\n * @template T\n * @param {?} tView\n * @param {?} viewData\n * @param {?} def\n * @param {?} directiveFactory\n * @return {?}\n */\nfunction baseResolveDirective(tView, viewData, def, directiveFactory) {\n    tView.data.push(def);\n    /** @type {?} */\n    var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n    tView.blueprint.push(nodeInjectorFactory);\n    viewData.push(nodeInjectorFactory);\n}\n/**\n * @template T\n * @param {?} lView\n * @param {?} previousOrParentTNode\n * @param {?} def\n * @return {?}\n */\nfunction addComponentLogic(lView, previousOrParentTNode, def) {\n    /** @type {?} */\n    var native = getNativeByTNode(previousOrParentTNode, lView);\n    /** @type {?} */\n    var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n    /** @type {?} */\n    var rendererFactory = lView[RENDERER_FACTORY];\n    /** @type {?} */\n    var componentView = addToViewTree(lView, /** @type {?} */ (previousOrParentTNode.index), createLView(lView, tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, rendererFactory, lView[RENDERER_FACTORY].createRenderer(/** @type {?} */ (native), def)));\n    componentView[HOST_NODE] = /** @type {?} */ (previousOrParentTNode);\n    // Component view will always be created before any injected LContainers,\n    // so this is a regular element, wrap it with the component view\n    componentView[HOST] = lView[previousOrParentTNode.index];\n    lView[previousOrParentTNode.index] = componentView;\n    if (getFirstTemplatePass()) {\n        queueComponentIndexForCheck(previousOrParentTNode);\n    }\n}\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @template T\n * @param {?} directiveIndex Index of the directive in directives array\n * @param {?} instance Instance of the directive on which to set the initial inputs\n * @param {?} inputs The list of inputs from the directive def\n * @param {?} tNode The static data for this node\n * @return {?}\n */\nfunction setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n    /** @type {?} */\n    var initialInputData = /** @type {?} */ (tNode.initialInputs);\n    if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n        initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n    }\n    /** @type {?} */\n    var initialInputs = initialInputData[directiveIndex];\n    if (initialInputs) {\n        for (var i = 0; i < initialInputs.length; i += 2) {\n            (/** @type {?} */ (instance))[initialInputs[i]] = initialInputs[i + 1];\n        }\n    }\n}\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an \\@Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` \\@Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param {?} directiveIndex Index to store the initial input data\n * @param {?} inputs The list of inputs from the directive def\n * @param {?} tNode The static data on this node\n * @return {?}\n */\nfunction generateInitialInputs(directiveIndex, inputs, tNode) {\n    /** @type {?} */\n    var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n    initialInputData[directiveIndex] = null;\n    /** @type {?} */\n    var attrs = /** @type {?} */ ((tNode.attrs));\n    /** @type {?} */\n    var i = 0;\n    while (i < attrs.length) {\n        /** @type {?} */\n        var attrName = attrs[i];\n        if (attrName === 1 /* SelectOnly */)\n            break;\n        if (attrName === 0 /* NamespaceURI */) {\n            // We do not allow inputs on namespaced attributes.\n            i += 4;\n            continue;\n        }\n        /** @type {?} */\n        var minifiedInputName = inputs[attrName];\n        /** @type {?} */\n        var attrValue = attrs[i + 1];\n        if (minifiedInputName !== undefined) {\n            /** @type {?} */\n            var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n            inputsToStore.push(minifiedInputName, /** @type {?} */ (attrValue));\n        }\n        i += 2;\n    }\n    return initialInputData;\n}\n/**\n * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n *\n * @param {?} hostNative The host element for the LContainer\n * @param {?} hostTNode The host TNode for the LContainer\n * @param {?} currentView The parent view of the LContainer\n * @param {?} native The native comment element\n * @param {?=} isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n * @return {?} LContainer\n */\nexport function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n    return [\n        isForViewContainerRef ? -1 : 0,\n        // active index\n        [],\n        currentView,\n        null,\n        null,\n        hostNative,\n        native,\n        // native\n        getRenderParent(hostTNode, currentView) // renderParent\n    ];\n}\n/**\n * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n *\n * <ng-template #foo>\n *    <div></div>\n * </ng-template>\n *\n * @param {?} index The index of the container in the data array\n * @param {?} templateFn Inline template\n * @param {?} consts The number of nodes, local refs, and pipes for this template\n * @param {?} vars The number of bindings for this template\n * @param {?=} tagName The name of the container element, if applicable\n * @param {?=} attrs The attrs attached to the container, if applicable\n * @param {?=} localRefs A set of local reference bindings on the element.\n * @param {?=} localRefExtractor A function which extracts local-refs values from the template.\n *        Defaults to the current element associated with the local-ref.\n * @return {?}\n */\nexport function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var tView = lView[TVIEW];\n    /** @type {?} */\n    var tNode = containerInternal(index, tagName || null, attrs || null);\n    if (getFirstTemplatePass()) {\n        tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n    }\n    createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n    /** @type {?} */\n    var currentQueries = lView[QUERIES];\n    /** @type {?} */\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    if (currentQueries) {\n        lView[QUERIES] = currentQueries.addNode(/** @type {?} */ (previousOrParentTNode));\n    }\n    queueLifecycleHooks(tNode.flags, tView);\n    setIsParent(false);\n}\n/**\n * Creates an LContainer for inline views, e.g.\n *\n * % if (showing) {\n *   <div></div>\n * % }\n *\n * @param {?} index The index of the container in the data array\n * @return {?}\n */\nexport function container(index) {\n    /** @type {?} */\n    var tNode = containerInternal(index, null, null);\n    getFirstTemplatePass() && (tNode.tViews = []);\n    setIsParent(false);\n}\n/**\n * @param {?} index\n * @param {?} tagName\n * @param {?} attrs\n * @return {?}\n */\nfunction containerInternal(index, tagName, attrs) {\n    /** @type {?} */\n    var lView = getLView();\n    ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n    /** @type {?} */\n    var adjustedIndex = index + HEADER_OFFSET;\n    /** @type {?} */\n    var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n    ngDevMode && ngDevMode.rendererCreateComment++;\n    /** @type {?} */\n    var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n    /** @type {?} */\n    var lContainer = lView[adjustedIndex] =\n        createLContainer(lView[adjustedIndex], tNode, lView, comment);\n    appendChild(comment, tNode, lView);\n    // Containers are added to the current view tree instead of their embedded views\n    // because views can be removed and re-inserted.\n    addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n    /** @type {?} */\n    var currentQueries = lView[QUERIES];\n    if (currentQueries) {\n        // prepare place for matching nodes from views inserted into a given container\n        lContainer[QUERIES] = currentQueries.container();\n    }\n    ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n    return tNode;\n}\n/**\n * Sets a container up to receive views.\n *\n * @param {?} index The index of the container in the data array\n * @return {?}\n */\nexport function containerRefreshStart(index) {\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var tView = lView[TVIEW];\n    /** @type {?} */\n    var previousOrParentTNode = /** @type {?} */ (loadInternal(tView.data, index));\n    setPreviousOrParentTNode(previousOrParentTNode);\n    ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n    setIsParent(true);\n    lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n    if (!getCheckNoChangesMode()) {\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(lView, tView, getCreationMode());\n    }\n}\n/**\n * Marks the end of the LContainer.\n *\n * Marking the end of LContainer is the time when to child views get inserted or removed.\n * @return {?}\n */\nexport function containerRefreshEnd() {\n    /** @type {?} */\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    if (getIsParent()) {\n        setIsParent(false);\n    }\n    else {\n        ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n        ngDevMode && assertHasParent(previousOrParentTNode);\n        previousOrParentTNode = /** @type {?} */ ((previousOrParentTNode.parent));\n        setPreviousOrParentTNode(previousOrParentTNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n    /** @type {?} */\n    var lContainer = getLView()[previousOrParentTNode.index];\n    /** @type {?} */\n    var nextIndex = lContainer[ACTIVE_INDEX];\n    // remove extra views at the end of the container\n    while (nextIndex < lContainer[VIEWS].length) {\n        removeView(lContainer, /** @type {?} */ (previousOrParentTNode), nextIndex);\n    }\n}\n/**\n * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n * by executing an associated template function.\n * @param {?} lView\n * @return {?}\n */\nfunction refreshDynamicEmbeddedViews(lView) {\n    for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n        // Note: current can be an LView or an LContainer instance, but here we are only interested\n        // in LContainer. We can tell it's an LContainer because its length is less than the LView\n        // header.\n        if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n            /** @type {?} */\n            var container_1 = /** @type {?} */ (current);\n            for (var i = 0; i < container_1[VIEWS].length; i++) {\n                /** @type {?} */\n                var dynamicViewData = container_1[VIEWS][i];\n                // The directives and pipes are not needed here as an existing view is only being refreshed.\n                ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], /** @type {?} */ ((dynamicViewData[CONTEXT])), 2 /* Update */);\n            }\n        }\n    }\n}\n/**\n * Looks for a view with a given view block id inside a provided LContainer.\n * Removes views that need to be deleted in the process.\n *\n * @param {?} lContainer to search for views\n * @param {?} tContainerNode to search for views\n * @param {?} startIdx starting index in the views array to search from\n * @param {?} viewBlockId exact view block id to look for\n * @return {?} index of a found view or -1 if not found\n */\nfunction scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n    /** @type {?} */\n    var views = lContainer[VIEWS];\n    for (var i = startIdx; i < views.length; i++) {\n        /** @type {?} */\n        var viewAtPositionId = views[i][TVIEW].id;\n        if (viewAtPositionId === viewBlockId) {\n            return views[i];\n        }\n        else if (viewAtPositionId < viewBlockId) {\n            // found a view that should not be at this position - remove\n            removeView(lContainer, tContainerNode, i);\n        }\n        else {\n            // found a view with id greater than the one we are searching for\n            // which means that required view doesn't exist and can't be found at\n            // later positions in the views array - stop the searchdef.cont here\n            break;\n        }\n    }\n    return null;\n}\n/**\n * Marks the start of an embedded view.\n *\n * @param {?} viewBlockId The ID of this view\n * @param {?} consts\n * @param {?} vars\n * @return {?} boolean Whether or not this view is in creation mode\n */\nexport function embeddedViewStart(viewBlockId, consts, vars) {\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    /** @type {?} */\n    var containerTNode = previousOrParentTNode.type === 2 /* View */ ? /** @type {?} */\n        ((previousOrParentTNode.parent)) :\n        previousOrParentTNode;\n    /** @type {?} */\n    var lContainer = /** @type {?} */ (lView[containerTNode.index]);\n    ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n    /** @type {?} */\n    var viewToRender = scanForView(lContainer, /** @type {?} */ (containerTNode), /** @type {?} */ ((lContainer[ACTIVE_INDEX])), viewBlockId);\n    if (viewToRender) {\n        setIsParent(true);\n        enterView(viewToRender, viewToRender[TVIEW].node);\n    }\n    else {\n        // When we create a new LView, we always reset the state of the instructions.\n        viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, /** @type {?} */ (containerTNode)), null, 2 /* CheckAlways */);\n        if (lContainer[QUERIES]) {\n            viewToRender[QUERIES] = /** @type {?} */ ((lContainer[QUERIES])).createView();\n        }\n        createViewNode(viewBlockId, viewToRender);\n        enterView(viewToRender, viewToRender[TVIEW].node);\n    }\n    if (lContainer) {\n        if (getCreationMode()) {\n            // it is a new view, insert it into collection of views for a given container\n            insertView(viewToRender, lContainer, lView, /** @type {?} */ ((lContainer[ACTIVE_INDEX])), -1);\n        } /** @type {?} */\n        ((lContainer[ACTIVE_INDEX]))++;\n    }\n    return getRenderFlags(viewToRender);\n}\n/**\n * Initialize the TView (e.g. static data) for the active embedded view.\n *\n * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n * static data for a particular node would overwrite the static data for a node in the view above\n * it with the same index (since it's in the same template).\n *\n * @param {?} viewIndex The index of the TView in TNode.tViews\n * @param {?} consts The number of nodes, local refs, and pipes in this template\n * @param {?} vars The number of bindings and pure function bindings in this template\n * @param {?} parent\n * @return {?} TView\n */\nfunction getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n    /** @type {?} */\n    var tView = getLView()[TVIEW];\n    ngDevMode && assertNodeType(parent, 0 /* Container */);\n    /** @type {?} */\n    var containerTViews = /** @type {?} */ (parent.tViews);\n    ngDevMode && assertDefined(containerTViews, 'TView expected');\n    ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n    if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n        containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n    }\n    return containerTViews[viewIndex];\n}\n/**\n * Marks the end of an embedded view.\n * @return {?}\n */\nexport function embeddedViewEnd() {\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var viewHost = lView[HOST_NODE];\n    refreshDescendantViews(lView, null);\n    leaveView(/** @type {?} */ ((lView[PARENT])));\n    setPreviousOrParentTNode(/** @type {?} */ ((viewHost)));\n    setIsParent(false);\n}\n/**\n * Refreshes components by entering the component view and processing its bindings, queries, etc.\n *\n * @template T\n * @param {?} adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n * @param {?} rf  The render flags that should be used to process this template\n * @return {?}\n */\nexport function componentRefresh(adjustedElementIndex, rf) {\n    /** @type {?} */\n    var lView = getLView();\n    ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n    /** @type {?} */\n    var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n    ngDevMode && assertNodeType(/** @type {?} */ (lView[TVIEW].data[adjustedElementIndex]), 3 /* Element */);\n    // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n    if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n        syncViewWithBlueprint(hostView);\n        detectChangesInternal(hostView, hostView[CONTEXT], rf);\n    }\n}\n/**\n * Syncs an LView instance with its blueprint if they have gotten out of sync.\n *\n * Typically, blueprints and their view instances should always be in sync, so the loop here\n * will be skipped. However, consider this case of two components side-by-side:\n *\n * App template:\n * ```\n * <comp></comp>\n * <comp></comp>\n * ```\n *\n * The following will happen:\n * 1. App template begins processing.\n * 2. First <comp> is matched as a component and its LView is created.\n * 3. Second <comp> is matched as a component and its LView is created.\n * 4. App template completes processing, so it's time to check child templates.\n * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n * <comp> template, but its LView was created before this update, so it is out of sync.\n *\n * Note that embedded views inside ngFor loops will never be out of sync because these views\n * are processed as soon as they are created.\n *\n * @param {?} componentView The view to sync\n * @return {?}\n */\nfunction syncViewWithBlueprint(componentView) {\n    /** @type {?} */\n    var componentTView = componentView[TVIEW];\n    for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n        componentView[i] = componentTView.blueprint[i];\n    }\n}\n/**\n * Returns a boolean for whether the view is attached\n * @param {?} view\n * @return {?}\n */\nexport function viewAttached(view) {\n    return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n}\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n * un-parsed form.\n *\n * The parsed form is needed for efficient matching of a node against a given CSS selector.\n * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n *\n * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n * drawbacks:\n * - having only a textual form would require runtime parsing of CSS selectors;\n * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n * template author).\n *\n * @param {?=} selectors A collection of parsed CSS selectors\n * @param {?=} textSelectors\n * @return {?}\n */\nexport function projectionDef(selectors, textSelectors) {\n    /** @type {?} */\n    var componentNode = /** @type {?} */ (findComponentView(getLView())[HOST_NODE]);\n    if (!componentNode.projection) {\n        /** @type {?} */\n        var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n        /** @type {?} */\n        var pData = componentNode.projection =\n            new Array(noOfNodeBuckets).fill(null);\n        /** @type {?} */\n        var tails = pData.slice();\n        /** @type {?} */\n        var componentChild = componentNode.child;\n        while (componentChild !== null) {\n            /** @type {?} */\n            var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, /** @type {?} */ ((textSelectors))) : 0;\n            /** @type {?} */\n            var nextNode = componentChild.next;\n            if (tails[bucketIndex]) {\n                /** @type {?} */ ((tails[bucketIndex])).next = componentChild;\n            }\n            else {\n                pData[bucketIndex] = componentChild;\n                componentChild.next = null;\n            }\n            tails[bucketIndex] = componentChild;\n            componentChild = nextNode;\n        }\n    }\n}\n/** *\n * Stack used to keep track of projection nodes in projection() instruction.\n *\n * This is deliberately created outside of projection() to avoid allocating\n * a new array each time the function is called. Instead the array will be\n * re-used by each invocation. This works because the function is not reentrant.\n  @type {?} */\nvar projectionNodeStack = [];\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param {?} nodeIndex\n * @param {?=} selectorIndex\n * @param {?=} attrs\n * @return {?}\n */\nexport function projection(nodeIndex, selectorIndex, attrs) {\n    if (selectorIndex === void 0) { selectorIndex = 0; }\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n    // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n    if (tProjectionNode.projection === null)\n        tProjectionNode.projection = selectorIndex;\n    // `<ng-content>` has no content\n    setIsParent(false);\n    /** @type {?} */\n    var componentView = findComponentView(lView);\n    /** @type {?} */\n    var componentNode = /** @type {?} */ (componentView[HOST_NODE]);\n    /** @type {?} */\n    var nodeToProject = (/** @type {?} */ (componentNode.projection))[selectorIndex];\n    /** @type {?} */\n    var projectedView = /** @type {?} */ ((componentView[PARENT]));\n    /** @type {?} */\n    var projectionNodeIndex = -1;\n    while (nodeToProject) {\n        if (nodeToProject.type === 1 /* Projection */) {\n            /** @type {?} */\n            var currentComponentView = findComponentView(projectedView);\n            /** @type {?} */\n            var currentComponentHost = /** @type {?} */ (currentComponentView[HOST_NODE]);\n            /** @type {?} */\n            var firstProjectedNode = (/** @type {?} */ (currentComponentHost.projection))[/** @type {?} */ (nodeToProject.projection)];\n            if (firstProjectedNode) {\n                projectionNodeStack[++projectionNodeIndex] = nodeToProject;\n                projectionNodeStack[++projectionNodeIndex] = projectedView;\n                nodeToProject = firstProjectedNode;\n                projectedView = /** @type {?} */ ((currentComponentView[PARENT]));\n                continue;\n            }\n        }\n        else {\n            // This flag must be set now or we won't know that this node is projected\n            // if the nodes are inserted into a container later.\n            nodeToProject.flags |= 8192 /* isProjected */;\n            appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n        }\n        // If we are finished with a list of re-projected nodes, we need to get\n        // back to the root projection node that was re-projected.\n        if (nodeToProject.next === null && projectedView !== /** @type {?} */ ((componentView[PARENT]))) {\n            projectedView = /** @type {?} */ (projectionNodeStack[projectionNodeIndex--]);\n            nodeToProject = /** @type {?} */ (projectionNodeStack[projectionNodeIndex--]);\n        }\n        nodeToProject = nodeToProject.next;\n    }\n}\n/**\n * Adds LView or LContainer to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @template T\n * @param {?} lView The view where LView or LContainer should be added\n * @param {?} adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n * @param {?} state The LView or LContainer to add to the view tree\n * @return {?} The state passed in\n */\nexport function addToViewTree(lView, adjustedHostIndex, state) {\n    /** @type {?} */\n    var tView = lView[TVIEW];\n    /** @type {?} */\n    var firstTemplatePass = getFirstTemplatePass();\n    if (lView[TAIL]) {\n        /** @type {?} */ ((lView[TAIL]))[NEXT] = state;\n    }\n    else if (firstTemplatePass) {\n        tView.childIndex = adjustedHostIndex;\n    }\n    lView[TAIL] = state;\n    return state;\n}\n/**\n * If node is an OnPush component, marks its LView dirty.\n * @param {?} lView\n * @param {?} viewIndex\n * @return {?}\n */\nfunction markDirtyIfOnPush(lView, viewIndex) {\n    /** @type {?} */\n    var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n    if (!(childComponentLView[FLAGS] & 2 /* CheckAlways */)) {\n        childComponentLView[FLAGS] |= 4 /* Dirty */;\n    }\n}\n/**\n * Wraps an event listener with preventDefault behavior.\n * @param {?} listenerFn\n * @return {?}\n */\nfunction wrapListenerWithPreventDefault(listenerFn) {\n    return function wrapListenerIn_preventDefault(e) {\n        if (listenerFn(e) === false) {\n            e.preventDefault();\n            // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n            e.returnValue = false;\n        }\n    };\n}\n/**\n * Marks current view and all ancestors dirty\n * @param {?} lView\n * @return {?}\n */\nexport function markViewDirty(lView) {\n    while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n        lView[FLAGS] |= 4 /* Dirty */;\n        lView = /** @type {?} */ ((lView[PARENT]));\n    }\n    lView[FLAGS] |= 4 /* Dirty */;\n    ngDevMode && assertDefined(lView[CONTEXT], 'rootContext should be defined');\n    /** @type {?} */\n    var rootContext = /** @type {?} */ (lView[CONTEXT]);\n    scheduleTick(rootContext, 1 /* DetectChanges */);\n}\n/**\n * Used to schedule change detection on the whole application.\n *\n * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n * It is usually called indirectly by calling `markDirty` when the view needs to be\n * re-rendered.\n *\n * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n * `scheduleTick` requests. The scheduling function can be overridden in\n * `renderComponent`'s `scheduler` option.\n * @template T\n * @param {?} rootContext\n * @param {?} flags\n * @return {?}\n */\nexport function scheduleTick(rootContext, flags) {\n    /** @type {?} */\n    var nothingScheduled = rootContext.flags === 0 /* Empty */;\n    rootContext.flags |= flags;\n    if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n        /** @type {?} */\n        var res_1 = void 0;\n        rootContext.clean = new Promise(function (r) { return res_1 = r; });\n        rootContext.scheduler(function () {\n            if (rootContext.flags & 1 /* DetectChanges */) {\n                rootContext.flags &= ~1 /* DetectChanges */;\n                tickRootContext(rootContext);\n            }\n            if (rootContext.flags & 2 /* FlushPlayers */) {\n                rootContext.flags &= ~2 /* FlushPlayers */;\n                /** @type {?} */\n                var playerHandler = rootContext.playerHandler;\n                if (playerHandler) {\n                    playerHandler.flushPlayers();\n                }\n            }\n            rootContext.clean = _CLEAN_PROMISE; /** @type {?} */\n            ((res_1))(null);\n        });\n    }\n}\n/**\n * Used to perform change detection on the whole application.\n *\n * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n * executes lifecycle hooks and conditionally checks components based on their\n * `ChangeDetectionStrategy` and dirtiness.\n *\n * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n * be changed when calling `renderComponent` and providing the `scheduler` option.\n * @template T\n * @param {?} component\n * @return {?}\n */\nexport function tick(component) {\n    /** @type {?} */\n    var rootView = getRootView(component);\n    /** @type {?} */\n    var rootContext = /** @type {?} */ (rootView[CONTEXT]);\n    tickRootContext(rootContext);\n}\n/**\n * @param {?} rootContext\n * @return {?}\n */\nfunction tickRootContext(rootContext) {\n    for (var i = 0; i < rootContext.components.length; i++) {\n        /** @type {?} */\n        var rootComponent = rootContext.components[i];\n        renderComponentOrTemplate(/** @type {?} */ ((readPatchedLView(rootComponent))), rootComponent, 2 /* Update */);\n    }\n}\n/**\n * Synchronously perform change detection on a component (and possibly its sub-components).\n *\n * This function triggers change detection in a synchronous way on a component. There should\n * be very little reason to call this function directly since a preferred way to do change\n * detection is to {\\@link markDirty} the component and wait for the scheduler to call this method\n * at some future point in time. This is because a single user action often results in many\n * components being invalidated and calling change detection on each component synchronously\n * would be inefficient. It is better to wait until all components are marked as dirty and\n * then perform single change detection across all of the components\n *\n * @template T\n * @param {?} component The component which the change detection should be performed on.\n * @return {?}\n */\nexport function detectChanges(component) {\n    detectChangesInternal(/** @type {?} */ ((getComponentViewByInstance(component))), component, null);\n}\n/**\n * Synchronously perform change detection on a root view and its components.\n *\n * @param {?} lView The view which the change detection should be performed on.\n * @return {?}\n */\nexport function detectChangesInRootView(lView) {\n    tickRootContext(/** @type {?} */ (lView[CONTEXT]));\n}\n/**\n * Checks the change detector and its children, and throws if any changes are detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n * @template T\n * @param {?} component\n * @return {?}\n */\nexport function checkNoChanges(component) {\n    setCheckNoChangesMode(true);\n    try {\n        detectChanges(component);\n    }\n    finally {\n        setCheckNoChangesMode(false);\n    }\n}\n/**\n * Checks the change detector on a root view and its components, and throws if any changes are\n * detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n *\n * @param {?} lView The view which the change detection should be checked on.\n * @return {?}\n */\nexport function checkNoChangesInRootView(lView) {\n    setCheckNoChangesMode(true);\n    try {\n        detectChangesInRootView(lView);\n    }\n    finally {\n        setCheckNoChangesMode(false);\n    }\n}\n/**\n * Checks the view of the component provided. Does not gate on dirty checks or execute doCheck.\n * @template T\n * @param {?} hostView\n * @param {?} component\n * @param {?} rf\n * @return {?}\n */\nfunction detectChangesInternal(hostView, component, rf) {\n    /** @type {?} */\n    var hostTView = hostView[TVIEW];\n    /** @type {?} */\n    var oldView = enterView(hostView, hostView[HOST_NODE]);\n    /** @type {?} */\n    var templateFn = /** @type {?} */ ((hostTView.template));\n    /** @type {?} */\n    var viewQuery = hostTView.viewQuery;\n    try {\n        namespaceHTML();\n        createViewQuery(viewQuery, rf, hostView[FLAGS], component);\n        templateFn(rf || getRenderFlags(hostView), component);\n        refreshDescendantViews(hostView, rf);\n        updateViewQuery(viewQuery, hostView[FLAGS], component);\n    }\n    finally {\n        leaveView(oldView, rf === 1 /* Create */);\n    }\n}\n/**\n * @template T\n * @param {?} viewQuery\n * @param {?} renderFlags\n * @param {?} viewFlags\n * @param {?} component\n * @return {?}\n */\nfunction createViewQuery(viewQuery, renderFlags, viewFlags, component) {\n    if (viewQuery && (renderFlags === 1 /* Create */ ||\n        (renderFlags === null && (viewFlags & 1 /* CreationMode */)))) {\n        viewQuery(1 /* Create */, component);\n    }\n}\n/**\n * @template T\n * @param {?} viewQuery\n * @param {?} flags\n * @param {?} component\n * @return {?}\n */\nfunction updateViewQuery(viewQuery, flags, component) {\n    if (viewQuery && flags & 2 /* Update */) {\n        viewQuery(2 /* Update */, component);\n    }\n}\n/**\n * Mark the component as dirty (needing change detection).\n *\n * Marking a component dirty will schedule a change detection on this\n * component at some point in the future. Marking an already dirty\n * component as dirty is a noop. Only one outstanding change detection\n * can be scheduled per component tree. (Two components bootstrapped with\n * separate `renderComponent` will have separate schedulers)\n *\n * When the root component is bootstrapped with `renderComponent`, a scheduler\n * can be provided.\n *\n * \\@publicApi\n * @template T\n * @param {?} component Component to mark as dirty.\n *\n * @return {?}\n */\nexport function markDirty(component) {\n    ngDevMode && assertDefined(component, 'component');\n    markViewDirty(getComponentViewByInstance(component));\n}\n/**\n * Creates a single value binding.\n *\n * @template T\n * @param {?} value Value to diff\n * @return {?}\n */\nexport function bind(value) {\n    /** @type {?} */\n    var lView = getLView();\n    return bindingUpdated(lView, lView[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n}\n/**\n * Allocates the necessary amount of slots for host vars.\n *\n * @param {?} count Amount of vars to be allocated\n * @return {?}\n */\nexport function allocHostVars(count) {\n    if (!getFirstTemplatePass())\n        return;\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var tView = lView[TVIEW];\n    queueHostBindingForCheck(tView, /** @type {?} */ ((getCurrentDirectiveDef())), count);\n    prefillHostVars(tView, lView, count);\n}\n/**\n * Create interpolation bindings with a variable number of expressions.\n *\n * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n * Those are faster because there is no need to create an array of expressions and iterate over it.\n *\n * `values`:\n * - has static text at even indexes,\n * - has evaluated expressions at odd indexes.\n *\n * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n * @param {?} values\n * @return {?}\n */\nexport function interpolationV(values) {\n    ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n    ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n    /** @type {?} */\n    var different = false;\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var bindingIndex = lView[BINDING_INDEX];\n    for (var i = 1; i < values.length; i += 2) {\n        // Check if bindings (odd indexes) have changed\n        bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n    }\n    lView[BINDING_INDEX] = bindingIndex;\n    if (!different) {\n        return NO_CHANGE;\n    }\n    /** @type {?} */\n    var content = values[0];\n    for (var i = 1; i < values.length; i += 2) {\n        content += stringify(values[i]) + values[i + 1];\n    }\n    return content;\n}\n/**\n * Creates an interpolation binding with 1 expression.\n *\n * @param {?} prefix static value used for concatenation only.\n * @param {?} v0 value checked for change.\n * @param {?} suffix static value used for concatenation only.\n * @return {?}\n */\nexport function interpolation1(prefix, v0, suffix) {\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var different = bindingUpdated(lView, lView[BINDING_INDEX], v0);\n    lView[BINDING_INDEX] += 1;\n    return different ? prefix + stringify(v0) + suffix : NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 2 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} suffix\n * @return {?}\n */\nexport function interpolation2(prefix, v0, i0, v1, suffix) {\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var different = bindingUpdated2(lView, lView[BINDING_INDEX], v0, v1);\n    lView[BINDING_INDEX] += 2;\n    return different ? prefix + stringify(v0) + i0 + stringify(v1) + suffix : NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 3 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} suffix\n * @return {?}\n */\nexport function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var different = bindingUpdated3(lView, lView[BINDING_INDEX], v0, v1, v2);\n    lView[BINDING_INDEX] += 3;\n    return different ? prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + suffix :\n        NO_CHANGE;\n}\n/**\n * Create an interpolation binding with 4 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} suffix\n * @return {?}\n */\nexport function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var different = bindingUpdated4(lView, lView[BINDING_INDEX], v0, v1, v2, v3);\n    lView[BINDING_INDEX] += 4;\n    return different ?\n        prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) +\n            suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 5 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} suffix\n * @return {?}\n */\nexport function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var bindingIndex = lView[BINDING_INDEX];\n    /** @type {?} */\n    var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n    different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n    lView[BINDING_INDEX] += 5;\n    return different ?\n        prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n            stringify(v4) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 6 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} suffix\n * @return {?}\n */\nexport function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var bindingIndex = lView[BINDING_INDEX];\n    /** @type {?} */\n    var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n    different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n    lView[BINDING_INDEX] += 6;\n    return different ?\n        prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n            stringify(v4) + i4 + stringify(v5) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 7 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} i5\n * @param {?} v6\n * @param {?} suffix\n * @return {?}\n */\nexport function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var bindingIndex = lView[BINDING_INDEX];\n    /** @type {?} */\n    var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n    different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n    lView[BINDING_INDEX] += 7;\n    return different ?\n        prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n            stringify(v4) + i4 + stringify(v5) + i5 + stringify(v6) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 8 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} i5\n * @param {?} v6\n * @param {?} i6\n * @param {?} v7\n * @param {?} suffix\n * @return {?}\n */\nexport function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var bindingIndex = lView[BINDING_INDEX];\n    /** @type {?} */\n    var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n    different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n    lView[BINDING_INDEX] += 8;\n    return different ?\n        prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n            stringify(v4) + i4 + stringify(v5) + i5 + stringify(v6) + i6 + stringify(v7) + suffix :\n        NO_CHANGE;\n}\n/**\n * Store a value in the `data` at a given `index`.\n * @template T\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nexport function store(index, value) {\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var tView = lView[TVIEW];\n    /** @type {?} */\n    var adjustedIndex = index + HEADER_OFFSET;\n    if (adjustedIndex >= tView.data.length) {\n        tView.data[adjustedIndex] = null;\n    }\n    lView[adjustedIndex] = value;\n}\n/**\n * Retrieves a local reference from the current contextViewData.\n *\n * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n *\n * @template T\n * @param {?} index The index of the local ref in contextViewData.\n * @return {?}\n */\nexport function reference(index) {\n    /** @type {?} */\n    var contextLView = getContextLView();\n    return loadInternal(contextLView, index);\n}\n/**\n * @template T\n * @param {?} queryListIdx\n * @return {?}\n */\nexport function loadQueryList(queryListIdx) {\n    /** @type {?} */\n    var lView = getLView();\n    ngDevMode &&\n        assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n    ngDevMode && assertDataInRange(/** @type {?} */ ((lView[CONTENT_QUERIES])), queryListIdx);\n    return /** @type {?} */ ((lView[CONTENT_QUERIES]))[queryListIdx];\n}\n/**\n * Retrieves a value from current `viewData`.\n * @template T\n * @param {?} index\n * @return {?}\n */\nexport function load(index) {\n    return loadInternal(getLView(), index);\n}\n/**\n * @template T\n * @param {?} token\n * @param {?=} flags\n * @return {?}\n */\nexport function directiveInject(token, flags) {\n    if (flags === void 0) { flags = InjectFlags.Default; }\n    token = resolveForwardRef(token);\n    return getOrCreateInjectable(/** @type {?} */ (getPreviousOrParentTNode()), getLView(), token, flags);\n}\n/**\n * Facade for the attribute injection from DI.\n * @param {?} attrNameToInject\n * @return {?}\n */\nexport function injectAttribute(attrNameToInject) {\n    return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n}\n/**\n * Registers a QueryList, associated with a content query, for later refresh (part of a view\n * refresh).\n * @template Q\n * @param {?} queryList\n * @param {?} currentDirectiveIndex\n * @return {?}\n */\nexport function registerContentQuery(queryList, currentDirectiveIndex) {\n    /** @type {?} */\n    var viewData = getLView();\n    /** @type {?} */\n    var tView = viewData[TVIEW];\n    /** @type {?} */\n    var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n    if (getFirstTemplatePass()) {\n        /** @type {?} */\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        /** @type {?} */\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n        if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n        }\n    }\n}\n/** @type {?} */\nexport var CLEAN_PROMISE = _CLEAN_PROMISE;\n/**\n * @param {?} tNode\n * @return {?}\n */\nfunction initializeTNodeInputs(tNode) {\n    // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n    // yet been checked.\n    if (tNode) {\n        if (tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n        }\n        return tNode.inputs;\n    }\n    return null;\n}\n/**\n * @param {?} tNode\n * @return {?}\n */\nexport function delegateToClassInput(tNode) {\n    return tNode.flags & 32768 /* hasClassInput */;\n}\n/**\n * Returns the current OpaqueViewState instance.\n *\n * Used in conjunction with the restoreView() instruction to save a snapshot\n * of the current view and restore it when listeners are invoked. This allows\n * walking the declaration view tree in listeners to get vars from parent views.\n * @return {?}\n */\nexport function getCurrentView() {\n    return /** @type {?} */ ((getLView()));\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction getCleanup(view) {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return view[CLEANUP] || (view[CLEANUP] = []);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction getTViewCleanup(view) {\n    return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n}\n//# sourceMappingURL=instructions.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { checkNoChanges, checkNoChangesInRootView, detectChanges, detectChangesInRootView, markViewDirty, storeCleanupFn, viewAttached } from './instructions';\nimport { FLAGS, HOST, HOST_NODE, PARENT, RENDERER_FACTORY } from './interfaces/view';\nimport { destroyLView } from './node_manipulation';\nimport { getNativeByTNode } from './util';\n/**\n * @record\n */\nexport function viewEngine_ChangeDetectorRef_interface() { }\n/**\n * @template T\n */\nvar /**\n * @template T\n */\nViewRef = /** @class */ (function () {\n    function ViewRef(_lView, _context, _componentIndex) {\n        this._context = _context;\n        this._componentIndex = _componentIndex;\n        this._appRef = null;\n        this._viewContainerRef = null;\n        /**\n         * \\@internal\n         */\n        this._tViewNode = null;\n        this._lView = _lView;\n    }\n    Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._lView[HOST] == null) {\n                /** @type {?} */\n                var tView = /** @type {?} */ (this._lView[HOST_NODE]);\n                return collectNativeNodes(this._lView, tView, []);\n            }\n            return [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._context ? this._context : this._lookUpContext(); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this._lView[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewRef.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef && viewAttached(this._lView)) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            this._viewContainerRef = null;\n        }\n        destroyLView(this._lView);\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { storeCleanupFn(this._lView, callback); };\n    /**\n     * Marks a view and all of its ancestors dirty.\n     *\n     * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n     * multiple `markForCheck` calls to into one change detection run.\n     *\n     * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n     * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n     * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'my-app',\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     * })\n     * class AppComponent {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(private ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks++;\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     * ```\n     */\n    /**\n     * Marks a view and all of its ancestors dirty.\n     *\n     * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n     * multiple `markForCheck` calls to into one change detection run.\n     *\n     * This can be used to ensure an {\\@link ChangeDetectionStrategy#OnPush OnPush} component is\n     * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n     * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Component({\n     *   selector: 'my-app',\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     * })\n     * class AppComponent {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(private ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks++;\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     * ```\n     * @return {?}\n     */\n    ViewRef.prototype.markForCheck = /**\n     * Marks a view and all of its ancestors dirty.\n     *\n     * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n     * multiple `markForCheck` calls to into one change detection run.\n     *\n     * This can be used to ensure an {\\@link ChangeDetectionStrategy#OnPush OnPush} component is\n     * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n     * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Component({\n     *   selector: 'my-app',\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     * })\n     * class AppComponent {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(private ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks++;\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     * ```\n     * @return {?}\n     */\n    function () { markViewDirty(this._lView); };\n    /**\n     * Detaches the view from the change detection tree.\n     *\n     * Detached views will not be checked during change detection runs until they are\n     * re-attached, even if they are dirty. `detach` can be used in combination with\n     * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     */\n    /**\n     * Detaches the view from the change detection tree.\n     *\n     * Detached views will not be checked during change detection runs until they are\n     * re-attached, even if they are dirty. `detach` can be used in combination with\n     * {\\@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     * @return {?}\n     */\n    ViewRef.prototype.detach = /**\n     * Detaches the view from the change detection tree.\n     *\n     * Detached views will not be checked during change detection runs until they are\n     * re-attached, even if they are dirty. `detach` can be used in combination with\n     * {\\@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     * @return {?}\n     */\n    function () { this._lView[FLAGS] &= ~8 /* Attached */; };\n    /**\n     * Re-attaches a view to the change detection tree.\n     *\n     * This can be used to re-attach views that were previously detached from the tree\n     * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value) {\n     *       this.ref.reattach();\n     *     } else {\n     *       this.ref.detach();\n     *     }\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'my-app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class AppComponent {\n     *   live = true;\n     * }\n     * ```\n     */\n    /**\n     * Re-attaches a view to the change detection tree.\n     *\n     * This can be used to re-attach views that were previously detached from the tree\n     * using {\\@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value) {\n     *       this.ref.reattach();\n     *     } else {\n     *       this.ref.detach();\n     *     }\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'my-app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class AppComponent {\n     *   live = true;\n     * }\n     * ```\n     * @return {?}\n     */\n    ViewRef.prototype.reattach = /**\n     * Re-attaches a view to the change detection tree.\n     *\n     * This can be used to re-attach views that were previously detached from the tree\n     * using {\\@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value) {\n     *       this.ref.reattach();\n     *     } else {\n     *       this.ref.detach();\n     *     }\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'my-app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class AppComponent {\n     *   live = true;\n     * }\n     * ```\n     * @return {?}\n     */\n    function () { this._lView[FLAGS] |= 8 /* Attached */; };\n    /**\n     * Checks the view and its children.\n     *\n     * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n     * local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check every five seconds.\n     *\n     * See {@link ChangeDetectorRef#detach detach} for more information.\n     */\n    /**\n     * Checks the view and its children.\n     *\n     * This can also be used in combination with {\\@link ChangeDetectorRef#detach detach} to implement\n     * local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check every five seconds.\n     *\n     * See {\\@link ChangeDetectorRef#detach detach} for more information.\n     * @return {?}\n     */\n    ViewRef.prototype.detectChanges = /**\n     * Checks the view and its children.\n     *\n     * This can also be used in combination with {\\@link ChangeDetectorRef#detach detach} to implement\n     * local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check every five seconds.\n     *\n     * See {\\@link ChangeDetectorRef#detach detach} for more information.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var rendererFactory = this._lView[RENDERER_FACTORY];\n        if (rendererFactory.begin) {\n            rendererFactory.begin();\n        }\n        detectChanges(this.context);\n        if (rendererFactory.end) {\n            rendererFactory.end();\n        }\n    };\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     * @return {?}\n     */\n    ViewRef.prototype.checkNoChanges = /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     * @return {?}\n     */\n    function () { checkNoChanges(this.context); };\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    ViewRef.prototype.attachToViewContainerRef = /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    function (vcRef) { this._viewContainerRef = vcRef; };\n    /**\n     * @return {?}\n     */\n    ViewRef.prototype.detachFromAppRef = /**\n     * @return {?}\n     */\n    function () { this._appRef = null; };\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    ViewRef.prototype.attachToAppRef = /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    function (appRef) { this._appRef = appRef; };\n    /**\n     * @return {?}\n     */\n    ViewRef.prototype._lookUpContext = /**\n     * @return {?}\n     */\n    function () {\n        return this._context = /** @type {?} */ (((this._lView[PARENT]))[this._componentIndex]);\n    };\n    return ViewRef;\n}());\n/**\n * @template T\n */\nexport { ViewRef };\nif (false) {\n    /** @type {?} */\n    ViewRef.prototype._appRef;\n    /** @type {?} */\n    ViewRef.prototype._viewContainerRef;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ViewRef.prototype._tViewNode;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ViewRef.prototype._lView;\n    /** @type {?} */\n    ViewRef.prototype._context;\n    /** @type {?} */\n    ViewRef.prototype._componentIndex;\n}\n/**\n * \\@internal\n * @template T\n */\nvar /**\n * \\@internal\n * @template T\n */\nRootViewRef = /** @class */ (function (_super) {\n    tslib_1.__extends(RootViewRef, _super);\n    function RootViewRef(_view) {\n        var _this = _super.call(this, _view, null, -1) || this;\n        _this._view = _view;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RootViewRef.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () { detectChangesInRootView(this._view); };\n    /**\n     * @return {?}\n     */\n    RootViewRef.prototype.checkNoChanges = /**\n     * @return {?}\n     */\n    function () { checkNoChangesInRootView(this._view); };\n    Object.defineProperty(RootViewRef.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ ((null)); },\n        enumerable: true,\n        configurable: true\n    });\n    return RootViewRef;\n}(ViewRef));\n/**\n * \\@internal\n * @template T\n */\nexport { RootViewRef };\nif (false) {\n    /** @type {?} */\n    RootViewRef.prototype._view;\n}\n/**\n * @param {?} lView\n * @param {?} parentTNode\n * @param {?} result\n * @return {?}\n */\nfunction collectNativeNodes(lView, parentTNode, result) {\n    /** @type {?} */\n    var tNodeChild = parentTNode.child;\n    while (tNodeChild) {\n        result.push(getNativeByTNode(tNodeChild, lView));\n        if (tNodeChild.type === 4 /* ElementContainer */) {\n            collectNativeNodes(lView, tNodeChild, result);\n        }\n        tNodeChild = tNodeChild.next;\n    }\n    return result;\n}\n//# sourceMappingURL=view_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { NullInjector } from '../di/injector';\nimport { InjectFlags } from '../di/injector_compatibility';\nimport { NgModuleRef as viewEngine_NgModuleRef } from '../linker/ng_module_factory';\nimport { assertDefined, assertGreaterThan, assertLessThan } from './assert';\nimport { getOrCreateInjectable, getParentInjectorLocation } from './di';\nimport { addToViewTree, createEmbeddedViewAndNode, createLContainer, renderEmbeddedTemplate } from './instructions';\nimport { ACTIVE_INDEX, NATIVE, VIEWS } from './interfaces/container';\nimport { isProceduralRenderer } from './interfaces/renderer';\nimport { CONTEXT, HOST_NODE, QUERIES, RENDERER } from './interfaces/view';\nimport { assertNodeOfPossibleTypes } from './node_assert';\nimport { addRemoveViewFromContainer, appendChild, detachView, findComponentView, getBeforeNodeForView, insertView, nativeInsertBefore, nativeNextSibling, nativeParentNode, removeView } from './node_manipulation';\nimport { getLView, getPreviousOrParentTNode } from './state';\nimport { getComponentViewByIndex, getNativeByTNode, getParentInjectorTNode, getParentInjectorView, hasParentInjector, isComponent, isLContainer, isRootView } from './util';\nimport { ViewRef } from './view_ref';\n/**\n * Creates an ElementRef from the most recent node.\n *\n * @param {?} ElementRefToken\n * @return {?} The ElementRef instance to use\n */\nexport function injectElementRef(ElementRefToken) {\n    return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n}\n/** @type {?} */\nvar R3ElementRef;\n/**\n * Creates an ElementRef given a node.\n *\n * @param {?} ElementRefToken The ElementRef type\n * @param {?} tNode The node for which you'd like an ElementRef\n * @param {?} view The view to which the node belongs\n * @return {?} The ElementRef instance to use\n */\nexport function createElementRef(ElementRefToken, tNode, view) {\n    if (!R3ElementRef) {\n        // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n        R3ElementRef = /** @class */ (function (_super) {\n            tslib_1.__extends(ElementRef_, _super);\n            function ElementRef_() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            return ElementRef_;\n        }(ElementRefToken));\n    }\n    return new R3ElementRef(getNativeByTNode(tNode, view));\n}\n/** @type {?} */\nvar R3TemplateRef;\n/**\n * Creates a TemplateRef given a node.\n *\n * @template T\n * @param {?} TemplateRefToken\n * @param {?} ElementRefToken\n * @return {?} The TemplateRef instance to use\n */\nexport function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n    return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n}\n/**\n * Creates a TemplateRef and stores it on the injector.\n *\n * @template T\n * @param {?} TemplateRefToken The TemplateRef type\n * @param {?} ElementRefToken The ElementRef type\n * @param {?} hostTNode The node that is requesting a TemplateRef\n * @param {?} hostView The view to which the node belongs\n * @return {?} The TemplateRef instance to use\n */\nexport function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n    if (!R3TemplateRef) {\n        // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n        R3TemplateRef = /** @class */ (function (_super) {\n            tslib_1.__extends(TemplateRef_, _super);\n            function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                var _this = _super.call(this) || this;\n                _this._declarationParentView = _declarationParentView;\n                _this.elementRef = elementRef;\n                _this._tView = _tView;\n                _this._renderer = _renderer;\n                _this._queries = _queries;\n                _this._injectorIndex = _injectorIndex;\n                return _this;\n            }\n            /**\n             * @param {?} context\n             * @param {?=} container\n             * @param {?=} hostTNode\n             * @param {?=} hostView\n             * @param {?=} index\n             * @return {?}\n             */\n            TemplateRef_.prototype.createEmbeddedView = /**\n             * @param {?} context\n             * @param {?=} container\n             * @param {?=} hostTNode\n             * @param {?=} hostView\n             * @param {?=} index\n             * @return {?}\n             */\n            function (context, container, hostTNode, hostView, index) {\n                /** @type {?} */\n                var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                if (container) {\n                    insertView(lView, container, /** @type {?} */ ((hostView)), /** @type {?} */ ((index)), /** @type {?} */ ((hostTNode)).index);\n                }\n                renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                /** @type {?} */\n                var viewRef = new ViewRef(lView, context, -1);\n                viewRef._tViewNode = /** @type {?} */ (lView[HOST_NODE]);\n                return viewRef;\n            };\n            return TemplateRef_;\n        }(TemplateRefToken));\n    }\n    if (hostTNode.type === 0 /* Container */) {\n        /** @type {?} */\n        var hostContainer = hostView[hostTNode.index];\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), /** @type {?} */ (hostTNode.tViews), getLView()[RENDERER], hostContainer[QUERIES], hostTNode.injectorIndex);\n    }\n    else {\n        return null;\n    }\n}\n/** @type {?} */\nvar R3ViewContainerRef;\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @param {?} ViewContainerRefToken\n * @param {?} ElementRefToken\n * @return {?} The ViewContainerRef instance to use\n */\nexport function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n    /** @type {?} */\n    var previousTNode = /** @type {?} */ (getPreviousOrParentTNode());\n    return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n}\nvar NodeInjector = /** @class */ (function () {\n    function NodeInjector(_tNode, _hostView) {\n        this._tNode = _tNode;\n        this._hostView = _hostView;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    NodeInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        return getOrCreateInjectable(this._tNode, this._hostView, token, InjectFlags.Default, notFoundValue);\n    };\n    return NodeInjector;\n}());\nexport { NodeInjector };\nif (false) {\n    /** @type {?} */\n    NodeInjector.prototype._tNode;\n    /** @type {?} */\n    NodeInjector.prototype._hostView;\n}\n/**\n * Creates a ViewContainerRef and stores it on the injector.\n *\n * @param {?} ViewContainerRefToken The ViewContainerRef type\n * @param {?} ElementRefToken The ElementRef type\n * @param {?} hostTNode The node that is requesting a ViewContainerRef\n * @param {?} hostView The view to which the node belongs\n * @return {?} The ViewContainerRef instance to use\n */\nexport function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n    if (!R3ViewContainerRef) {\n        // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n        R3ViewContainerRef = /** @class */ (function (_super) {\n            tslib_1.__extends(ViewContainerRef_, _super);\n            function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                var _this = _super.call(this) || this;\n                _this._lContainer = _lContainer;\n                _this._hostTNode = _hostTNode;\n                _this._hostView = _hostView;\n                _this._viewRefs = [];\n                return _this;\n            }\n            Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                get: /**\n                 * @return {?}\n                 */\n                function () {\n                    return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                get: /**\n                 * @return {?}\n                 */\n                function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                /** @deprecated No replacement */\n                get: /**\n                 * @deprecated No replacement\n                 * @return {?}\n                 */\n                function () {\n                    /** @type {?} */\n                    var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                    /** @type {?} */\n                    var parentView = getParentInjectorView(parentLocation, this._hostView);\n                    /** @type {?} */\n                    var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                    return !hasParentInjector(parentLocation) || parentTNode == null ?\n                        new NullInjector() :\n                        new NodeInjector(parentTNode, parentView);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            /**\n             * @return {?}\n             */\n            ViewContainerRef_.prototype.clear = /**\n             * @return {?}\n             */\n            function () {\n                while (this._lContainer[VIEWS].length) {\n                    this.remove(0);\n                }\n            };\n            /**\n             * @param {?} index\n             * @return {?}\n             */\n            ViewContainerRef_.prototype.get = /**\n             * @param {?} index\n             * @return {?}\n             */\n            function (index) { return this._viewRefs[index] || null; };\n            Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                get: /**\n                 * @return {?}\n                 */\n                function () { return this._lContainer[VIEWS].length; },\n                enumerable: true,\n                configurable: true\n            });\n            /**\n             * @template C\n             * @param {?} templateRef\n             * @param {?=} context\n             * @param {?=} index\n             * @return {?}\n             */\n            ViewContainerRef_.prototype.createEmbeddedView = /**\n             * @template C\n             * @param {?} templateRef\n             * @param {?=} context\n             * @param {?=} index\n             * @return {?}\n             */\n            function (templateRef, context, index) {\n                /** @type {?} */\n                var adjustedIdx = this._adjustIndex(index);\n                /** @type {?} */\n                var viewRef = (/** @type {?} */ (templateRef))\n                    .createEmbeddedView(context || /** @type {?} */ ({}), this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                (/** @type {?} */ (viewRef)).attachToViewContainerRef(this);\n                this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                return viewRef;\n            };\n            /**\n             * @template C\n             * @param {?} componentFactory\n             * @param {?=} index\n             * @param {?=} injector\n             * @param {?=} projectableNodes\n             * @param {?=} ngModuleRef\n             * @return {?}\n             */\n            ViewContainerRef_.prototype.createComponent = /**\n             * @template C\n             * @param {?} componentFactory\n             * @param {?=} index\n             * @param {?=} injector\n             * @param {?=} projectableNodes\n             * @param {?=} ngModuleRef\n             * @return {?}\n             */\n            function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                /** @type {?} */\n                var contextInjector = injector || this.parentInjector;\n                if (!ngModuleRef && contextInjector) {\n                    ngModuleRef = contextInjector.get(viewEngine_NgModuleRef, null);\n                }\n                /** @type {?} */\n                var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                this.insert(componentRef.hostView, index);\n                return componentRef;\n            };\n            /**\n             * @param {?} viewRef\n             * @param {?=} index\n             * @return {?}\n             */\n            ViewContainerRef_.prototype.insert = /**\n             * @param {?} viewRef\n             * @param {?=} index\n             * @return {?}\n             */\n            function (viewRef, index) {\n                if (viewRef.destroyed) {\n                    throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                }\n                /** @type {?} */\n                var lView = /** @type {?} */ (((/** @type {?} */ (viewRef))._lView));\n                /** @type {?} */\n                var adjustedIdx = this._adjustIndex(index);\n                insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                /** @type {?} */\n                var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                addRemoveViewFromContainer(lView, true, beforeNode);\n                (/** @type {?} */ (viewRef)).attachToViewContainerRef(this);\n                this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                return viewRef;\n            };\n            /**\n             * @param {?} viewRef\n             * @param {?} newIndex\n             * @return {?}\n             */\n            ViewContainerRef_.prototype.move = /**\n             * @param {?} viewRef\n             * @param {?} newIndex\n             * @return {?}\n             */\n            function (viewRef, newIndex) {\n                if (viewRef.destroyed) {\n                    throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                }\n                /** @type {?} */\n                var index = this.indexOf(viewRef);\n                this.detach(index);\n                this.insert(viewRef, this._adjustIndex(newIndex));\n                return viewRef;\n            };\n            /**\n             * @param {?} viewRef\n             * @return {?}\n             */\n            ViewContainerRef_.prototype.indexOf = /**\n             * @param {?} viewRef\n             * @return {?}\n             */\n            function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n            /**\n             * @param {?=} index\n             * @return {?}\n             */\n            ViewContainerRef_.prototype.remove = /**\n             * @param {?=} index\n             * @return {?}\n             */\n            function (index) {\n                /** @type {?} */\n                var adjustedIdx = this._adjustIndex(index, -1);\n                removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                this._viewRefs.splice(adjustedIdx, 1);\n            };\n            /**\n             * @param {?=} index\n             * @return {?}\n             */\n            ViewContainerRef_.prototype.detach = /**\n             * @param {?=} index\n             * @return {?}\n             */\n            function (index) {\n                /** @type {?} */\n                var adjustedIdx = this._adjustIndex(index, -1);\n                detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n            };\n            /**\n             * @param {?=} index\n             * @param {?=} shift\n             * @return {?}\n             */\n            ViewContainerRef_.prototype._adjustIndex = /**\n             * @param {?=} index\n             * @param {?=} shift\n             * @return {?}\n             */\n            function (index, shift) {\n                if (shift === void 0) { shift = 0; }\n                if (index == null) {\n                    return this._lContainer[VIEWS].length + shift;\n                }\n                if (ngDevMode) {\n                    assertGreaterThan(index, -1, 'index must be positive');\n                    // +1 because it's legal to insert at the end.\n                    assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                }\n                return index;\n            };\n            return ViewContainerRef_;\n        }(ViewContainerRefToken));\n    }\n    ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n    /** @type {?} */\n    var lContainer;\n    /** @type {?} */\n    var slotValue = hostView[hostTNode.index];\n    if (isLContainer(slotValue)) {\n        // If the host is a container, we don't need to create a new LContainer\n        lContainer = slotValue;\n        lContainer[ACTIVE_INDEX] = -1;\n    }\n    else {\n        /** @type {?} */\n        var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        // A container can be created on the root (topmost / bootstrapped) component and in this case we\n        // can't use LTree to insert container's marker node (both parent of a comment node and the\n        // commend node itself is located outside of elements hold by LTree). In this specific case we\n        // use low-level DOM manipulation to insert container's marker (comment) node.\n        if (isRootView(hostView)) {\n            /** @type {?} */\n            var renderer = hostView[RENDERER];\n            /** @type {?} */\n            var hostNative = /** @type {?} */ ((getNativeByTNode(hostTNode, hostView)));\n            /** @type {?} */\n            var parentOfHostNative = nativeParentNode(renderer, hostNative);\n            nativeInsertBefore(renderer, /** @type {?} */ ((parentOfHostNative)), commentNode, nativeNextSibling(renderer, hostNative));\n        }\n        else {\n            appendChild(commentNode, hostTNode, hostView);\n        }\n        hostView[hostTNode.index] = lContainer =\n            createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n        addToViewTree(hostView, /** @type {?} */ (hostTNode.index), lContainer);\n    }\n    return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n}\n/**\n * Returns a ChangeDetectorRef (a.k.a. a ViewRef)\n * @return {?}\n */\nexport function injectChangeDetectorRef() {\n    return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n}\n/**\n * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n *\n * @param {?} hostTNode The node that is requesting a ChangeDetectorRef\n * @param {?} hostView The view to which the node belongs\n * @param {?} context The context for this change detector ref\n * @return {?} The ChangeDetectorRef to use\n */\nexport function createViewRef(hostTNode, hostView, context) {\n    if (isComponent(hostTNode)) {\n        /** @type {?} */\n        var componentIndex = hostTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n        /** @type {?} */\n        var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n        return new ViewRef(componentView, context, componentIndex);\n    }\n    else if (hostTNode.type === 3 /* Element */) {\n        /** @type {?} */\n        var hostComponentView = findComponentView(hostView);\n        return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n    }\n    return /** @type {?} */ ((null));\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction getOrCreateRenderer2(view) {\n    /** @type {?} */\n    var renderer = view[RENDERER];\n    if (isProceduralRenderer(renderer)) {\n        return /** @type {?} */ (renderer);\n    }\n    else {\n        throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n    }\n}\n/**\n * Returns a Renderer2 (or throws when application was bootstrapped with Renderer3)\n * @return {?}\n */\nexport function injectRenderer2() {\n    return getOrCreateRenderer2(getLView());\n}\n//# sourceMappingURL=view_engine_compatibility.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nimport { assertDefined } from './assert';\nimport { discoverLocalRefs, getComponentAtNodeIndex, getContext, getDirectivesAtNodeIndex } from './context_discovery';\nimport { CONTEXT, FLAGS, HOST, PARENT, TVIEW } from './interfaces/view';\nimport { readPatchedLView, stringify } from './util';\nimport { NodeInjector } from './view_engine_compatibility';\n/**\n * Returns the component instance associated with a given DOM host element.\n * Elements which don't represent components return `null`.\n *\n * \\@publicApi\n * @template T\n * @param {?} element Host DOM element from which the component should be retrieved for.\n *\n * ```\n * <my-app>\n *   #VIEW\n *     <div>\n *       <child-comp></child-comp>\n *     </div>\n * </mp-app>\n *\n * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n * ```\n *\n * @return {?}\n */\nexport function getComponent(element) {\n    if (!(element instanceof Node))\n        throw new Error('Expecting instance of DOM Node');\n    /** @type {?} */\n    var context = /** @type {?} */ ((loadContext(element)));\n    if (context.component === undefined) {\n        context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n    }\n    return /** @type {?} */ (context.component);\n}\n/**\n * Returns the component instance associated with view which owns the DOM element (`null`\n * otherwise).\n *\n * \\@publicApi\n * @template T\n * @param {?} element DOM element which is owned by an existing component's view.\n *\n * ```\n * <my-app>\n *   #VIEW\n *     <div>\n *       <child-comp></child-comp>\n *     </div>\n * </mp-app>\n *\n * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n * expect(getViewComponent(<my-app>)).toEqual(null);\n * ```\n *\n * @return {?}\n */\nexport function getViewComponent(element) {\n    /** @type {?} */\n    var context = /** @type {?} */ ((loadContext(element)));\n    /** @type {?} */\n    var lView = context.lView;\n    while (lView[PARENT] && lView[HOST] === null) {\n        // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n        lView = /** @type {?} */ ((lView[PARENT]));\n    }\n    return lView[FLAGS] & 64 /* IsRoot */ ? null : /** @type {?} */ (lView[CONTEXT]);\n}\n/**\n * Returns the `RootContext` instance that is associated with\n * the application where the target is situated.\n *\n * @param {?} target\n * @return {?}\n */\nexport function getRootContext(target) {\n    /** @type {?} */\n    var lView = Array.isArray(target) ? target : /** @type {?} */ ((loadContext(target))).lView;\n    /** @type {?} */\n    var rootLView = getRootView(lView);\n    return /** @type {?} */ (rootLView[CONTEXT]);\n}\n/**\n * Retrieve all root components.\n *\n * Root components are those which have been bootstrapped by Angular.\n *\n * \\@publicApi\n * @param {?} target A DOM element, component or directive instance.\n *\n * @return {?}\n */\nexport function getRootComponents(target) {\n    return getRootContext(target).components.slice();\n}\n/**\n * Retrieves an `Injector` associated with the element, component or directive.\n *\n * \\@publicApi\n * @param {?} target A DOM element, component or directive instance.\n *\n * @return {?}\n */\nexport function getInjector(target) {\n    /** @type {?} */\n    var context = loadContext(target);\n    /** @type {?} */\n    var tNode = /** @type {?} */ (context.lView[TVIEW].data[context.nodeIndex]);\n    return new NodeInjector(tNode, context.lView);\n}\n/**\n * Retrieves directives associated with a given DOM host element.\n *\n * \\@publicApi\n * @param {?} target A DOM element, component or directive instance.\n *\n * @return {?}\n */\nexport function getDirectives(target) {\n    /** @type {?} */\n    var context = /** @type {?} */ ((loadContext(target)));\n    if (context.directives === undefined) {\n        context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n    }\n    return context.directives || [];\n}\n/**\n * @param {?} target\n * @param {?=} throwOnNotFound\n * @return {?}\n */\nexport function loadContext(target, throwOnNotFound) {\n    if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n    /** @type {?} */\n    var context = getContext(target);\n    if (!context && throwOnNotFound) {\n        throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringify(target) :\n            'Invalid ng target');\n    }\n    return context;\n}\n/**\n * Retrieve the root view from any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param {?} componentOrView any component or view\n *\n * @return {?}\n */\nexport function getRootView(componentOrView) {\n    /** @type {?} */\n    var lView;\n    if (Array.isArray(componentOrView)) {\n        ngDevMode && assertDefined(componentOrView, 'lView');\n        lView = /** @type {?} */ (componentOrView);\n    }\n    else {\n        ngDevMode && assertDefined(componentOrView, 'component');\n        lView = /** @type {?} */ ((readPatchedLView(componentOrView)));\n    }\n    while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n        lView = /** @type {?} */ ((lView[PARENT]));\n    }\n    return lView;\n}\n/**\n * Retrieve map of local references.\n *\n * The references are retrieved as a map of local reference name to element or directive instance.\n *\n * \\@publicApi\n * @param {?} target A DOM element, component or directive instance.\n *\n * @return {?}\n */\nexport function getLocalRefs(target) {\n    /** @type {?} */\n    var context = /** @type {?} */ ((loadContext(target)));\n    if (context.localRefs === undefined) {\n        context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n    }\n    return context.localRefs || {};\n}\n/**\n * Retrieve the host element of the component.\n *\n * Use this function to retrieve the host element of the component. The host\n * element is the element which the component is associated with.\n *\n * \\@publicApi\n * @template T\n * @param {?} directive Component or Directive for which the host element should be retrieved.\n *\n * @return {?}\n */\nexport function getHostElement(directive) {\n    return /** @type {?} */ ((((getContext(directive))).native));\n}\n/**\n * Retrieves the rendered text for a given component.\n *\n * This function retrieves the host element of a component and\n * and then returns the `textContent` for that element. This implies\n * that the text returned will include re-projected content of\n * the component as well.\n *\n * @param {?} component The component to return the content text for.\n * @return {?}\n */\nexport function getRenderedText(component) {\n    /** @type {?} */\n    var hostElement = getHostElement(component);\n    return hostElement.textContent || '';\n}\n//# sourceMappingURL=discovery_utils.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nimport './ng_dev_mode';\nimport { getContext } from './context_discovery';\nimport { getRootContext } from './discovery_utils';\nimport { scheduleTick } from './instructions';\nimport { HEADER_OFFSET } from './interfaces/view';\nimport { addPlayerInternal, getOrCreatePlayerContext, getPlayerContext, getPlayersInternal, getStylingContext, throwInvalidRefError } from './styling/util';\n/**\n * Adds a player to an element, directive or component instance that will later be\n * animated once change detection has passed.\n *\n * When a player is added to a reference it will stay active until `player.destroy()`\n * is called. Once called then the player will be removed from the active players\n * present on the associated ref instance.\n *\n * To get a list of all the active players on an element see [getPlayers].\n *\n * @param {?} ref The element, directive or component that the player will be placed on.\n * @param {?} player The player that will be triggered to play once change detection has run.\n * @return {?}\n */\nexport function addPlayer(ref, player) {\n    /** @type {?} */\n    var context = getContext(ref);\n    if (!context) {\n        ngDevMode && throwInvalidRefError();\n        return;\n    }\n    /** @type {?} */\n    var element = /** @type {?} */ (context.native);\n    /** @type {?} */\n    var lView = context.lView;\n    /** @type {?} */\n    var playerContext = /** @type {?} */ ((getOrCreatePlayerContext(element, context)));\n    /** @type {?} */\n    var rootContext = getRootContext(lView);\n    addPlayerInternal(playerContext, rootContext, element, player, 0, ref);\n    scheduleTick(rootContext, 2 /* FlushPlayers */);\n}\n/**\n * Returns a list of all the active players present on the provided ref instance (which can\n * be an instance of a directive, component or element).\n *\n * This function will only return players that have been added to the ref instance using\n * `addPlayer` or any players that are active through any template styling bindings\n * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n *\n * \\@publicApi\n * @param {?} ref\n * @return {?}\n */\nexport function getPlayers(ref) {\n    /** @type {?} */\n    var context = getContext(ref);\n    if (!context) {\n        ngDevMode && throwInvalidRefError();\n        return [];\n    }\n    /** @type {?} */\n    var stylingContext = getStylingContext(context.nodeIndex - HEADER_OFFSET, context.lView);\n    /** @type {?} */\n    var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n    return playerContext ? getPlayersInternal(playerContext) : [];\n}\n//# sourceMappingURL=players.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { getComponent, getDirectives, getHostElement, getInjector, getRootComponents, getViewComponent } from './discovery_utils';\nexport { markDirty } from './instructions';\nexport { getPlayers } from './players';\n//# sourceMappingURL=global_utils_api.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nimport { global } from '../util';\nimport { assertDefined } from './assert';\nimport { getComponent, getDirectives, getHostElement, getInjector, getPlayers, getRootComponents, getViewComponent, markDirty } from './global_utils_api';\n/** *\n * This value reflects the property on the window where the dev\n * tools are patched (window.ng).\n *\n  @type {?} */\nexport var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n/** @type {?} */\nvar _published = false;\n/**\n * @return {?}\n */\nexport function publishDefaultGlobalUtils() {\n    if (!_published) {\n        _published = true;\n        publishGlobalUtil('getComponent', getComponent);\n        publishGlobalUtil('getViewComponent', getViewComponent);\n        publishGlobalUtil('getHostElement', getHostElement);\n        publishGlobalUtil('getInjector', getInjector);\n        publishGlobalUtil('getRootComponents', getRootComponents);\n        publishGlobalUtil('getDirectives', getDirectives);\n        publishGlobalUtil('getPlayers', getPlayers);\n        publishGlobalUtil('markDirty', markDirty);\n    }\n}\n/**\n * Publishes the given function to `window.ngDevMode` so that it can be\n * used from the browser console when an application is not in production.\n * @param {?} name\n * @param {?} fn\n * @return {?}\n */\nexport function publishGlobalUtil(name, fn) {\n    /** @type {?} */\n    var w = /** @type {?} */ ((global));\n    ngDevMode && assertDefined(fn, 'function not defined');\n    if (w) {\n        /** @type {?} */\n        var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n        if (!container) {\n            container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n        }\n        container[name] = fn;\n    }\n}\n//# sourceMappingURL=global_utils.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { assertComponentType, assertDefined } from './assert';\nimport { getComponentDef } from './definition';\nimport { diPublicInInjector, getOrCreateNodeInjectorForNode } from './di';\nimport { publishDefaultGlobalUtils } from './global_utils';\nimport { queueInitHooks, queueLifecycleHooks } from './hooks';\nimport { CLEAN_PROMISE, createLView, createNodeAtIndex, createTView, getOrCreateTView, initNodeFlags, instantiateRootComponent, locateHostElement, queueComponentIndexForCheck, refreshDescendantViews } from './instructions';\nimport { domRendererFactory3 } from './interfaces/renderer';\nimport { CONTEXT, HEADER_OFFSET, HOST, HOST_NODE, TVIEW } from './interfaces/view';\nimport { enterView, getPreviousOrParentTNode, leaveView, resetComponentState, setCurrentDirectiveDef } from './state';\nimport { defaultScheduler, getRootView, readPatchedLView, stringify } from './util';\n/**\n * Options that control how the component should be bootstrapped.\n * @record\n */\nexport function CreateComponentOptions() { }\n/**\n * Which renderer factory to use.\n * @type {?|undefined}\n */\nCreateComponentOptions.prototype.rendererFactory;\n/**\n * A custom sanitizer instance\n * @type {?|undefined}\n */\nCreateComponentOptions.prototype.sanitizer;\n/**\n * A custom animation player handler\n * @type {?|undefined}\n */\nCreateComponentOptions.prototype.playerHandler;\n/**\n * Host element on which the component will be bootstrapped. If not specified,\n * the component definition's `tag` is used to query the existing DOM for the\n * element to bootstrap.\n * @type {?|undefined}\n */\nCreateComponentOptions.prototype.host;\n/**\n * Module injector for the component. If unspecified, the injector will be NULL_INJECTOR.\n * @type {?|undefined}\n */\nCreateComponentOptions.prototype.injector;\n/**\n * List of features to be applied to the created component. Features are simply\n * functions that decorate a component with a certain behavior.\n *\n * Typically, the features in this list are features that cannot be added to the\n * other features list in the component definition because they rely on other factors.\n *\n * Example: `RootLifecycleHooks` is a function that adds lifecycle hook capabilities\n * to root components in a tree-shakable way. It cannot be added to the component\n * features list because there's no way of knowing when the component will be used as\n * a root component.\n * @type {?|undefined}\n */\nCreateComponentOptions.prototype.hostFeatures;\n/**\n * A function which is used to schedule change detection work in the future.\n *\n * When marking components as dirty, it is necessary to schedule the work of\n * change detection in the future. This is done to coalesce multiple\n * {\\@link markDirty} calls into a single changed detection processing.\n *\n * The default value of the scheduler is the `requestAnimationFrame` function.\n *\n * It is also useful to override this function for testing purposes.\n * @type {?|undefined}\n */\nCreateComponentOptions.prototype.scheduler;\n/** @typedef {?} */\nvar HostFeature;\n/** @type {?} */\nexport var NULL_INJECTOR = {\n    get: function (token, notFoundValue) {\n        throw new Error('NullInjector: Not found: ' + stringify(token));\n    }\n};\n/**\n * Bootstraps a Component into an existing host element and returns an instance\n * of the component.\n *\n * Use this function to bootstrap a component into the DOM tree. Each invocation\n * of this function will create a separate tree of components, injectors and\n * change detection cycles and lifetimes. To dynamically insert a new component\n * into an existing tree such that it shares the same injection, change detection\n * and object lifetime, use {\\@link ViewContainer#createComponent}.\n *\n * @template T\n * @param {?} componentType Component to bootstrap\n * @param {?=} opts\n * @return {?}\n */\nexport function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n    if (opts === void 0) { opts = {}; }\n    ngDevMode && publishDefaultGlobalUtils();\n    ngDevMode && assertComponentType(componentType);\n    /** @type {?} */\n    var rendererFactory = opts.rendererFactory || domRendererFactory3;\n    /** @type {?} */\n    var sanitizer = opts.sanitizer || null;\n    /** @type {?} */\n    var componentDef = /** @type {?} */ ((getComponentDef(componentType)));\n    if (componentDef.type != componentType)\n        componentDef.type = componentType;\n    /** @type {?} */\n    var componentTag = /** @type {?} */ (((/** @type {?} */ ((componentDef.selectors))[0]))[0]);\n    /** @type {?} */\n    var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n    /** @type {?} */\n    var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n        2 /* CheckAlways */ | 64 /* IsRoot */;\n    /** @type {?} */\n    var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n    /** @type {?} */\n    var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n    /** @type {?} */\n    var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n    /** @type {?} */\n    var oldView = enterView(rootView, null);\n    /** @type {?} */\n    var component;\n    try {\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        /** @type {?} */\n        var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n        component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n        refreshDescendantViews(rootView, null);\n    }\n    finally {\n        leaveView(oldView);\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    return component;\n}\n/**\n * Creates the root component view and the root component node.\n *\n * @param {?} rNode Render host element.\n * @param {?} def ComponentDef\n * @param {?} rootView The parent view where the host node is stored\n * @param {?} rendererFactory\n * @param {?} renderer The current renderer\n * @param {?=} sanitizer The sanitizer, if provided\n *\n * @return {?} Component view created\n */\nexport function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n    resetComponentState();\n    /** @type {?} */\n    var tView = rootView[TVIEW];\n    /** @type {?} */\n    var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n    /** @type {?} */\n    var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n    if (tView.firstTemplatePass) {\n        diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n        tNode.flags = 4096 /* isComponent */;\n        initNodeFlags(tNode, rootView.length, 1);\n        queueComponentIndexForCheck(tNode);\n    }\n    // Store component view at node index, with node as the HOST\n    componentView[HOST] = rootView[HEADER_OFFSET];\n    componentView[HOST_NODE] = /** @type {?} */ (tNode);\n    return rootView[HEADER_OFFSET] = componentView;\n}\n/**\n * Creates a root component and sets it up with features and host bindings. Shared by\n * renderComponent() and ViewContainerRef.createComponent().\n * @template T\n * @param {?} componentView\n * @param {?} componentDef\n * @param {?} rootView\n * @param {?} rootContext\n * @param {?} hostFeatures\n * @return {?}\n */\nexport function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n    /** @type {?} */\n    var tView = rootView[TVIEW];\n    /** @type {?} */\n    var component = instantiateRootComponent(tView, rootView, componentDef);\n    rootContext.components.push(component);\n    componentView[CONTEXT] = component;\n    hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n    if (tView.firstTemplatePass && componentDef.hostBindings) {\n        /** @type {?} */\n        var rootTNode = getPreviousOrParentTNode();\n        setCurrentDirectiveDef(componentDef);\n        componentDef.hostBindings(1 /* Create */, component, rootTNode.index);\n        setCurrentDirectiveDef(null);\n    }\n    return component;\n}\n/**\n * @param {?=} scheduler\n * @param {?=} playerHandler\n * @return {?}\n */\nexport function createRootContext(scheduler, playerHandler) {\n    return {\n        components: [],\n        scheduler: scheduler || defaultScheduler,\n        clean: CLEAN_PROMISE,\n        playerHandler: playerHandler || null,\n        flags: 0 /* Empty */\n    };\n}\n/**\n * Used to enable lifecycle hooks on the root component.\n *\n * Include this feature when calling `renderComponent` if the root component\n * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n * be called properly.\n *\n * Example:\n *\n * ```\n * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n * ```\n * @param {?} component\n * @param {?} def\n * @return {?}\n */\nexport function LifecycleHooksFeature(component, def) {\n    /** @type {?} */\n    var rootTView = /** @type {?} */ ((readPatchedLView(component)))[TVIEW];\n    /** @type {?} */\n    var dirIndex = rootTView.data.length - 1;\n    queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n    queueLifecycleHooks(dirIndex << 16 /* DirectiveStartingIndexShift */ | 1, rootTView);\n}\n/**\n * Retrieve the root context for any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param {?} component any component\n * @return {?}\n */\nfunction getRootContext(component) {\n    /** @type {?} */\n    var rootContext = /** @type {?} */ (getRootView(component)[CONTEXT]);\n    ngDevMode && assertDefined(rootContext, 'rootContext');\n    return rootContext;\n}\n/**\n * Wait on component until it is rendered.\n *\n * This function returns a `Promise` which is resolved when the component's\n * change detection is executed. This is determined by finding the scheduler\n * associated with the `component`'s render tree and waiting until the scheduler\n * flushes. If nothing is scheduled, the function returns a resolved promise.\n *\n * Example:\n * ```\n * await whenRendered(myComponent);\n * ```\n *\n * @param {?} component Component to wait upon\n * @return {?} Promise which resolves when the component is rendered.\n */\nexport function whenRendered(component) {\n    return getRootContext(component).clean;\n}\n//# sourceMappingURL=component.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { fillProperties } from '../../util/property';\nimport { EMPTY, EMPTY_ARRAY } from '../definition';\n/**\n * Determines if a definition is a {\\@link ComponentDef} or a {\\@link DirectiveDef}\n * @template T\n * @param {?} definition The definition to examine\n * @return {?}\n */\nfunction isComponentDef(definition) {\n    /** @type {?} */\n    var def = /** @type {?} */ (definition);\n    return typeof def.template === 'function';\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getSuperType(type) {\n    return Object.getPrototypeOf(type.prototype).constructor;\n}\n/**\n * Merges the definition from a super class to a sub class.\n * @param {?} definition The definition that is a SubClass of another directive of component\n * @return {?}\n */\nexport function InheritDefinitionFeature(definition) {\n    /** @type {?} */\n    var superType = getSuperType(definition.type);\n    var _loop_1 = function () {\n        /** @type {?} */\n        var superDef = undefined;\n        if (isComponentDef(definition)) {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n        }\n        else {\n            if (superType.ngComponentDef) {\n                throw new Error('Directives cannot inherit Components');\n            }\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ngDirectiveDef;\n        }\n        /** @nocollapse @type {?} */\n        var baseDef = (/** @type {?} */ (superType)).ngBaseDef;\n        // Some fields in the definition may be empty, if there were no values to put in them that\n        // would've justified object creation. Unwrap them if necessary.\n        if (baseDef || superDef) {\n            /** @type {?} */\n            var writeableDef = /** @type {?} */ (definition);\n            writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n            writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n            writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n        }\n        if (baseDef) {\n            // Merge inputs and outputs\n            fillProperties(definition.inputs, baseDef.inputs);\n            fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n            fillProperties(definition.outputs, baseDef.outputs);\n        }\n        if (superDef) {\n            /** @type {?} */\n            var prevHostBindings_1 = definition.hostBindings;\n            /** @type {?} */\n            var superHostBindings_1 = superDef.hostBindings;\n            if (superHostBindings_1) {\n                if (prevHostBindings_1) {\n                    definition.hostBindings = function (rf, ctx, elementIndex) {\n                        superHostBindings_1(rf, ctx, elementIndex);\n                        prevHostBindings_1(rf, ctx, elementIndex);\n                    };\n                }\n                else {\n                    definition.hostBindings = superHostBindings_1;\n                }\n            }\n            // Merge View Queries\n            if (isComponentDef(definition) && isComponentDef(superDef)) {\n                /** @type {?} */\n                var prevViewQuery_1 = definition.viewQuery;\n                /** @type {?} */\n                var superViewQuery_1 = superDef.viewQuery;\n                if (superViewQuery_1) {\n                    if (prevViewQuery_1) {\n                        definition.viewQuery = function (rf, ctx) {\n                            superViewQuery_1(rf, ctx);\n                            prevViewQuery_1(rf, ctx);\n                        };\n                    }\n                    else {\n                        definition.viewQuery = superViewQuery_1;\n                    }\n                }\n            }\n            /** @type {?} */\n            var prevContentQueries_1 = definition.contentQueries;\n            /** @type {?} */\n            var superContentQueries_1 = superDef.contentQueries;\n            if (superContentQueries_1) {\n                if (prevContentQueries_1) {\n                    definition.contentQueries = function (dirIndex) {\n                        superContentQueries_1(dirIndex);\n                        prevContentQueries_1(dirIndex);\n                    };\n                }\n                else {\n                    definition.contentQueries = superContentQueries_1;\n                }\n            }\n            /** @type {?} */\n            var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n            /** @type {?} */\n            var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n            if (superContentQueriesRefresh_1) {\n                if (prevContentQueriesRefresh_1) {\n                    definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                        superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                    };\n                }\n                else {\n                    definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                }\n            }\n            // Merge inputs and outputs\n            fillProperties(definition.inputs, superDef.inputs);\n            fillProperties(definition.declaredInputs, superDef.declaredInputs);\n            fillProperties(definition.outputs, superDef.outputs);\n            // Inherit hooks\n            // Assume super class inheritance feature has already run.\n            definition.afterContentChecked =\n                definition.afterContentChecked || superDef.afterContentChecked;\n            definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n            definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n            definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n            definition.doCheck = definition.doCheck || superDef.doCheck;\n            definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n            definition.onInit = definition.onInit || superDef.onInit;\n            /** @type {?} */\n            var features = superDef.features;\n            if (features) {\n                for (var _i = 0, features_1 = features; _i < features_1.length; _i++) {\n                    var feature = features_1[_i];\n                    if (feature && feature.ngInherit) {\n                        (/** @type {?} */ (feature))(definition);\n                    }\n                }\n            }\n            return \"break\";\n        }\n        else {\n            /** @type {?} */\n            var superPrototype = superType.prototype;\n            if (superPrototype) {\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superPrototype.afterContentChecked;\n                definition.afterContentInit =\n                    definition.afterContentInit || superPrototype.afterContentInit;\n                definition.afterViewChecked =\n                    definition.afterViewChecked || superPrototype.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                definition.onInit = definition.onInit || superPrototype.onInit;\n            }\n        }\n        superType = Object.getPrototypeOf(superType);\n    };\n    while (superType) {\n        var state_1 = _loop_1();\n        if (state_1 === \"break\")\n            break;\n    }\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction maybeUnwrapEmpty(value) {\n    if (value === EMPTY) {\n        return {};\n    }\n    else if (value === EMPTY_ARRAY) {\n        return [];\n    }\n    else {\n        return value;\n    }\n}\n//# sourceMappingURL=inherit_definition_feature.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { SimpleChange } from '../../change_detection/change_detection_util';\n/** @type {?} */\nvar PRIVATE_PREFIX = '__ngOnChanges_';\n/** @typedef {?} */\nvar OnChangesExpando;\n/**\n * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n * lifecycle hook, so it should be included in any component that implements\n * that hook.\n *\n * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n * be included as a feature AFTER {\\@link InheritDefinitionFeature}, otherwise\n * inherited properties will not be propagated to the ngOnChanges lifecycle\n * hook.\n *\n * Example usage:\n *\n * ```\n * static ngComponentDef = defineComponent({\n *   ...\n *   inputs: {name: 'publicName'},\n *   features: [NgOnChangesFeature]\n * });\n * ```\n * @template T\n * @param {?} definition\n * @return {?}\n */\nexport function NgOnChangesFeature(definition) {\n    /** @type {?} */\n    var declaredToMinifiedInputs = definition.declaredInputs;\n    /** @type {?} */\n    var proto = definition.type.prototype;\n    var _loop_1 = function (declaredName) {\n        if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n            /** @type {?} */\n            var minifiedKey = declaredToMinifiedInputs[declaredName];\n            /** @type {?} */\n            var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n            /** @type {?} */\n            var originalProperty = undefined;\n            /** @type {?} */\n            var checkProto = proto;\n            while (!originalProperty && checkProto &&\n                Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                checkProto = Object.getPrototypeOf(checkProto);\n            }\n            /** @type {?} */\n            var getter = originalProperty && originalProperty.get;\n            /** @type {?} */\n            var setter_1 = originalProperty && originalProperty.set;\n            // create a getter and setter for property\n            Object.defineProperty(proto, minifiedKey, {\n                get: getter ||\n                    (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                set: /**\n                 * @template T\n                 * @this {?}\n                 * @param {?} value\n                 * @return {?}\n                 */\n                function (value) {\n                    /** @type {?} */\n                    var simpleChanges = this[PRIVATE_PREFIX];\n                    if (!simpleChanges) {\n                        simpleChanges = {};\n                        // Place where we will store SimpleChanges if there is a change\n                        Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                    }\n                    /** @type {?} */\n                    var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                    /** @type {?} */\n                    var currentChange = simpleChanges[declaredName];\n                    if (currentChange) {\n                        currentChange.currentValue = value;\n                    }\n                    else {\n                        simpleChanges[declaredName] =\n                            new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                    }\n                    if (isFirstChange) {\n                        // Create a place where the actual value will be stored and make it non-enumerable\n                        Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                    }\n                    else {\n                        this[privateMinKey_1] = value;\n                    }\n                    if (setter_1)\n                        setter_1.call(this, value);\n                },\n                // Make the property configurable in dev mode to allow overriding in tests\n                configurable: !!ngDevMode\n            });\n        }\n    };\n    for (var declaredName in declaredToMinifiedInputs) {\n        _loop_1(declaredName);\n    }\n    // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n    // so the call order is changes-init-check in creation mode. In subsequent\n    // change detection runs, only the check wrapper will be called.\n    if (definition.onInit != null) {\n        definition.onInit = onChangesWrapper(definition.onInit);\n    }\n    definition.doCheck = onChangesWrapper(definition.doCheck);\n}\n// This option ensures that the ngOnChanges lifecycle hook will be inherited\n// from superclasses (in InheritDefinitionFeature).\n(/** @type {?} */ (NgOnChangesFeature)).ngInherit = true;\n/**\n * @param {?} delegateHook\n * @return {?}\n */\nfunction onChangesWrapper(delegateHook) {\n    return function () {\n        /** @type {?} */\n        var simpleChanges = this[PRIVATE_PREFIX];\n        if (simpleChanges != null) {\n            this.ngOnChanges(simpleChanges);\n            this[PRIVATE_PREFIX] = null;\n        }\n        if (delegateHook)\n            delegateHook.apply(this);\n    };\n}\n//# sourceMappingURL=ng_onchanges_feature.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken } from './injection_token';\n/** *\n * An internal token whose presence in an injector indicates that the injector should treat itself\n * as a root scoped injector when processing requests for unknown tokens which may indicate\n * they are provided in the root scope.\n  @type {?} */\nexport var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n//# sourceMappingURL=scope.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { stringify } from '../util';\nimport { getInjectableDef, getInjectorDef } from './defs';\nimport { resolveForwardRef } from './forward_ref';\nimport { InjectionToken } from './injection_token';\nimport { INJECTOR, NullInjector, THROW_IF_NOT_FOUND, USE_VALUE } from './injector';\nimport { InjectFlags, inject, injectArgs, setCurrentInjector } from './injector_compatibility';\nimport { APP_ROOT } from './scope';\n/** @typedef {?} */\nvar SingleProvider;\n/** *\n * Marker which indicates that a value has not yet been created from the factory function.\n  @type {?} */\nvar NOT_YET = {};\n/** *\n * Marker which indicates that the factory function for a token is in the process of being called.\n *\n * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n * injection of a dependency has recursively attempted to inject the original token, and there is\n * a circular dependency among the providers.\n  @type {?} */\nvar CIRCULAR = {};\n/** @type {?} */\nvar EMPTY_ARRAY = /** @type {?} */ ([]);\n/** *\n * A lazily initialized NullInjector.\n  @type {?} */\nvar NULL_INJECTOR = undefined;\n/**\n * @return {?}\n */\nfunction getNullInjector() {\n    if (NULL_INJECTOR === undefined) {\n        NULL_INJECTOR = new NullInjector();\n    }\n    return NULL_INJECTOR;\n}\n/**\n * An entry in the injector which tracks information about the given token, including a possible\n * current value.\n * @record\n * @template T\n */\nfunction Record() { }\n/** @type {?} */\nRecord.prototype.factory;\n/** @type {?} */\nRecord.prototype.value;\n/** @type {?} */\nRecord.prototype.multi;\n/**\n * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n *\n * \\@publicApi\n * @param {?} defType\n * @param {?=} parent\n * @param {?=} additionalProviders\n * @return {?}\n */\nexport function createInjector(defType, parent, additionalProviders) {\n    if (parent === void 0) { parent = null; }\n    if (additionalProviders === void 0) { additionalProviders = null; }\n    parent = parent || getNullInjector();\n    return new R3Injector(defType, additionalProviders, parent);\n}\nvar R3Injector = /** @class */ (function () {\n    function R3Injector(def, additionalProviders, parent) {\n        var _this = this;\n        this.parent = parent;\n        /**\n         * Map of tokens to records which contain the instances of those tokens.\n         */\n        this.records = new Map();\n        /**\n         * The transitive set of `InjectorType`s which define this injector.\n         */\n        this.injectorDefTypes = new Set();\n        /**\n         * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n         */\n        this.onDestroy = new Set();\n        /**\n         * Flag indicating that this injector was previously destroyed.\n         */\n        this.destroyed = false;\n        /** @type {?} */\n        var dedupStack = [];\n        deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n        additionalProviders &&\n            deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n        // Make sure the INJECTOR token provides this injector.\n        this.records.set(INJECTOR, makeRecord(undefined, this));\n        // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n        // any injectable scoped to APP_ROOT_SCOPE.\n        this.isRootInjector = this.records.has(APP_ROOT);\n        // Eagerly instantiate the InjectorType classes themselves.\n        this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n    }\n    /**\n     * Destroy the injector and release references to every instance or provider associated with it.\n     *\n     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n     * hook was found.\n     */\n    /**\n     * Destroy the injector and release references to every instance or provider associated with it.\n     *\n     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n     * hook was found.\n     * @return {?}\n     */\n    R3Injector.prototype.destroy = /**\n     * Destroy the injector and release references to every instance or provider associated with it.\n     *\n     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n     * hook was found.\n     * @return {?}\n     */\n    function () {\n        this.assertNotDestroyed();\n        // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n        this.destroyed = true;\n        try {\n            // Call all the lifecycle hooks.\n            this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n        }\n        finally {\n            // Release all references.\n            this.records.clear();\n            this.onDestroy.clear();\n            this.injectorDefTypes.clear();\n        }\n    };\n    /**\n     * @template T\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} flags\n     * @return {?}\n     */\n    R3Injector.prototype.get = /**\n     * @template T\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} flags\n     * @return {?}\n     */\n    function (token, notFoundValue, flags) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        if (flags === void 0) { flags = InjectFlags.Default; }\n        this.assertNotDestroyed();\n        /** @type {?} */\n        var previousInjector = setCurrentInjector(this);\n        try {\n            // Check for the SkipSelf flag.\n            if (!(flags & InjectFlags.SkipSelf)) {\n                /** @type {?} */\n                var record = this.records.get(token);\n                if (record === undefined) {\n                    /** @type {?} */\n                    var def = couldBeInjectableType(token) && getInjectableDef(token);\n                    if (def && this.injectableDefInScope(def)) {\n                        // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                        // all along.\n                        record = makeRecord(injectableDefFactory(token), NOT_YET);\n                        this.records.set(token, record);\n                    }\n                }\n                // If a record was found, get the instance for it and return it.\n                if (record !== undefined) {\n                    return this.hydrate(token, record);\n                }\n            }\n            /** @type {?} */\n            var nextInjector = !(flags & InjectFlags.Self) ? this.parent : getNullInjector();\n            return nextInjector.get(token, notFoundValue);\n        }\n        finally {\n            // Lastly, clean up the state by restoring the previous injector.\n            setCurrentInjector(previousInjector);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    R3Injector.prototype.assertNotDestroyed = /**\n     * @return {?}\n     */\n    function () {\n        if (this.destroyed) {\n            throw new Error('Injector has already been destroyed.');\n        }\n    };\n    /**\n     * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n     * to this injector.\n     * @param {?} defOrWrappedDef\n     * @param {?} parents\n     * @param {?} dedupStack\n     * @return {?}\n     */\n    R3Injector.prototype.processInjectorType = /**\n     * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n     * to this injector.\n     * @param {?} defOrWrappedDef\n     * @param {?} parents\n     * @param {?} dedupStack\n     * @return {?}\n     */\n    function (defOrWrappedDef, parents, dedupStack) {\n        var _this = this;\n        defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n        if (!defOrWrappedDef)\n            return;\n        /** @type {?} */\n        var def = getInjectorDef(defOrWrappedDef);\n        /** @type {?} */\n        var ngModule = (def == null) && (/** @type {?} */ (defOrWrappedDef)).ngModule || undefined;\n        /** @type {?} */\n        var defType = (ngModule === undefined) ? (/** @type {?} */ (defOrWrappedDef)) : ngModule;\n        // Check for circular dependencies.\n        if (ngDevMode && parents.indexOf(defType) !== -1) {\n            /** @type {?} */\n            var defName = stringify(defType);\n            throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n        }\n        /** @type {?} */\n        var isDuplicate = dedupStack.indexOf(defType) !== -1;\n        /** @type {?} */\n        var providers = (ngModule !== undefined) && (/** @type {?} */ (defOrWrappedDef)).providers ||\n            EMPTY_ARRAY;\n        // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n        // `InjectorDef` is on its `ngModule`.\n        if (ngModule !== undefined) {\n            def = getInjectorDef(ngModule);\n        }\n        // If no definition was found, it might be from exports. Remove it.\n        if (def == null) {\n            return;\n        }\n        // Track the InjectorType and add a provider for it.\n        this.injectorDefTypes.add(defType);\n        this.records.set(defType, makeRecord(def.factory));\n        // Add providers in the same way that @NgModule resolution did:\n        // First, include providers from any imports.\n        if (def.imports != null && !isDuplicate) {\n            // Before processing defType's imports, add it to the set of parents. This way, if it ends\n            // up deeply importing itself, this can be detected.\n            ngDevMode && parents.push(defType);\n            // Add it to the set of dedups. This way we can detect multiple imports of the same module\n            dedupStack.push(defType);\n            try {\n                deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n            }\n            finally {\n                // Remove it from the parents set when finished.\n                ngDevMode && parents.pop();\n            }\n        }\n        // Next, include providers listed on the definition itself.\n        if (def.providers != null && !isDuplicate) {\n            deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n        }\n        // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n        deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n    };\n    /**\n     * Process a `SingleProvider` and add it.\n     * @param {?} provider\n     * @return {?}\n     */\n    R3Injector.prototype.processProvider = /**\n     * Process a `SingleProvider` and add it.\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n        // property.\n        provider = resolveForwardRef(provider);\n        /** @type {?} */\n        var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n        /** @type {?} */\n        var record = providerToRecord(provider);\n        if (!isTypeProvider(provider) && provider.multi === true) {\n            /** @type {?} */\n            var multiRecord_1 = this.records.get(token);\n            if (multiRecord_1) {\n                // It has. Throw a nice error if\n                if (multiRecord_1.multi === undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                }\n            }\n            else {\n                multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                multiRecord_1.factory = function () { return injectArgs(/** @type {?} */ ((/** @type {?} */ ((multiRecord_1)).multi))); };\n                this.records.set(token, multiRecord_1);\n            }\n            token = provider; /** @type {?} */\n            ((multiRecord_1.multi)).push(provider);\n        }\n        else {\n            /** @type {?} */\n            var existing = this.records.get(token);\n            if (existing && existing.multi !== undefined) {\n                throw new Error(\"Mixed multi-provider for \" + stringify(token));\n            }\n        }\n        this.records.set(token, record);\n    };\n    /**\n     * @template T\n     * @param {?} token\n     * @param {?} record\n     * @return {?}\n     */\n    R3Injector.prototype.hydrate = /**\n     * @template T\n     * @param {?} token\n     * @param {?} record\n     * @return {?}\n     */\n    function (token, record) {\n        if (record.value === CIRCULAR) {\n            throw new Error(\"Circular dep for \" + stringify(token));\n        }\n        else if (record.value === NOT_YET) {\n            record.value = CIRCULAR;\n            record.value = /** @type {?} */ ((record.factory))();\n        }\n        if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n            this.onDestroy.add(record.value);\n        }\n        return /** @type {?} */ (record.value);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    R3Injector.prototype.injectableDefInScope = /**\n     * @param {?} def\n     * @return {?}\n     */\n    function (def) {\n        if (!def.providedIn) {\n            return false;\n        }\n        else if (typeof def.providedIn === 'string') {\n            return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n        }\n        else {\n            return this.injectorDefTypes.has(def.providedIn);\n        }\n    };\n    return R3Injector;\n}());\nexport { R3Injector };\nif (false) {\n    /**\n     * Map of tokens to records which contain the instances of those tokens.\n     * @type {?}\n     */\n    R3Injector.prototype.records;\n    /**\n     * The transitive set of `InjectorType`s which define this injector.\n     * @type {?}\n     */\n    R3Injector.prototype.injectorDefTypes;\n    /**\n     * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n     * @type {?}\n     */\n    R3Injector.prototype.onDestroy;\n    /**\n     * Flag indicating this injector provides the APP_ROOT_SCOPE token, and thus counts as the\n     * root scope.\n     * @type {?}\n     */\n    R3Injector.prototype.isRootInjector;\n    /**\n     * Flag indicating that this injector was previously destroyed.\n     * @type {?}\n     */\n    R3Injector.prototype.destroyed;\n    /** @type {?} */\n    R3Injector.prototype.parent;\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction injectableDefFactory(token) {\n    /** @type {?} */\n    var injectableDef = getInjectableDef(/** @type {?} */ (token));\n    if (injectableDef === null) {\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n        // no-args constructor.\n        return function () { return new (/** @type {?} */ (token))(); };\n    }\n    return injectableDef.factory;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction providerToRecord(provider) {\n    /** @type {?} */\n    var factory = providerToFactory(provider);\n    if (isValueProvider(provider)) {\n        return makeRecord(undefined, provider.useValue);\n    }\n    else {\n        return makeRecord(factory, NOT_YET);\n    }\n}\n/**\n * Converts a `SingleProvider` into a factory function.\n *\n * @param {?} provider provider to convert to factory\n * @return {?}\n */\nexport function providerToFactory(provider) {\n    /** @type {?} */\n    var factory = undefined;\n    if (isTypeProvider(provider)) {\n        return injectableDefFactory(resolveForwardRef(provider));\n    }\n    else {\n        if (isValueProvider(provider)) {\n            factory = function () { return resolveForwardRef(provider.useValue); };\n        }\n        else if (isExistingProvider(provider)) {\n            factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n        }\n        else if (isFactoryProvider(provider)) {\n            factory = function () { return provider.useFactory.apply(provider, injectArgs(provider.deps || [])); };\n        }\n        else {\n            /** @type {?} */\n            var classRef_1 = resolveForwardRef((/** @type {?} */ (provider)).useClass || provider.provide);\n            if (hasDeps(provider)) {\n                factory = function () { return new ((classRef_1).bind.apply((classRef_1), [void 0].concat(injectArgs(provider.deps))))(); };\n            }\n            else {\n                return injectableDefFactory(classRef_1);\n            }\n        }\n    }\n    return factory;\n}\n/**\n * @template T\n * @param {?} factory\n * @param {?=} value\n * @param {?=} multi\n * @return {?}\n */\nfunction makeRecord(factory, value, multi) {\n    if (value === void 0) { value = NOT_YET; }\n    if (multi === void 0) { multi = false; }\n    return {\n        factory: factory,\n        value: value,\n        multi: multi ? [] : undefined,\n    };\n}\n/**\n * @template T\n * @param {?} input\n * @param {?} fn\n * @return {?}\n */\nfunction deepForEach(input, fn) {\n    input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValueProvider(value) {\n    return USE_VALUE in value;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isExistingProvider(value) {\n    return !!(/** @type {?} */ (value)).useExisting;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFactoryProvider(value) {\n    return !!(/** @type {?} */ (value)).useFactory;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isTypeProvider(value) {\n    return typeof value === 'function';\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction hasDeps(value) {\n    return !!(/** @type {?} */ (value)).deps;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction hasOnDestroy(value) {\n    return typeof value === 'object' && value != null && (/** @type {?} */ (value)).ngOnDestroy &&\n        typeof (/** @type {?} */ (value)).ngOnDestroy === 'function';\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction couldBeInjectableType(value) {\n    return (typeof value === 'function') ||\n        (typeof value === 'object' && value instanceof InjectionToken);\n}\n//# sourceMappingURL=r3_injector.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { resolveForwardRef } from '../di/forward_ref';\nimport { isTypeProvider, providerToFactory } from '../di/r3_injector';\nimport { diPublicInInjector, getNodeInjectable, getOrCreateNodeInjectorForNode } from './di';\nimport { directiveInject } from './instructions';\nimport { NodeInjectorFactory } from './interfaces/injector';\nimport { TVIEW } from './interfaces/view';\nimport { getLView, getPreviousOrParentTNode } from './state';\nimport { isComponentDef } from './util';\n/**\n * Resolves the providers which are defined in the DirectiveDef.\n *\n * When inserting the tokens and the factories in their respective arrays, we can assume that\n * this method is called first for the component (if any), and then for other directives on the same\n * node.\n * As a consequence,the providers are always processed in that order:\n * 1) The view providers of the component\n * 2) The providers of the component\n * 3) The providers of the other directives\n * This matches the structure of the injectables arrays of a view (for each node).\n * So the tokens and the factories can be pushed at the end of the arrays, except\n * in one case for multi providers.\n *\n * @template T\n * @param {?} def the directive definition\n * @param {?} providers\n * @param {?} viewProviders\n * @return {?}\n */\nexport function providersResolver(def, providers, viewProviders) {\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var tView = lView[TVIEW];\n    if (tView.firstTemplatePass) {\n        /** @type {?} */\n        var isComponent = isComponentDef(def);\n        // The list of view providers is processed first, and the flags are updated\n        resolveProvider(viewProviders, tView.data, tView.blueprint, isComponent, true);\n        // Then, the list of providers is processed, and the flags are updated\n        resolveProvider(providers, tView.data, tView.blueprint, isComponent, false);\n    }\n}\n/**\n * Resolves a provider and publishes it to the DI system.\n * @param {?} provider\n * @param {?} tInjectables\n * @param {?} lInjectablesBlueprint\n * @param {?} isComponent\n * @param {?} isViewProvider\n * @return {?}\n */\nfunction resolveProvider(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n    provider = resolveForwardRef(provider);\n    if (Array.isArray(provider)) {\n        // Recursively call `resolveProvider`\n        // Recursion is OK in this case because this code will not be in hot-path once we implement\n        // cloning of the initial state.\n        for (var i = 0; i < provider.length; i++) {\n            resolveProvider(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n        }\n    }\n    else {\n        /** @type {?} */\n        var lView = getLView();\n        /** @type {?} */\n        var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n        /** @type {?} */\n        var providerFactory = providerToFactory(provider);\n        /** @type {?} */\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        /** @type {?} */\n        var beginIndex = previousOrParentTNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        /** @type {?} */\n        var endIndex = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n        /** @type {?} */\n        var cptViewProvidersCount = previousOrParentTNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n        if (isTypeProvider(provider) || !provider.multi) {\n            /** @type {?} */\n            var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n            /** @type {?} */\n            var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n            if (existingFactoryIndex == -1) {\n                diPublicInInjector(getOrCreateNodeInjectorForNode(/** @type {?} */ (previousOrParentTNode), lView), lView, token);\n                tInjectables.push(token);\n                previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                if (isViewProvider) {\n                    previousOrParentTNode.providerIndexes +=\n                        65536 /* CptViewProvidersCountShifter */;\n                }\n                lInjectablesBlueprint.push(factory);\n                lView.push(factory);\n            }\n            else {\n                lInjectablesBlueprint[existingFactoryIndex] = factory;\n                lView[existingFactoryIndex] = factory;\n            }\n        }\n        else {\n            /** @type {?} */\n            var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n            /** @type {?} */\n            var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n            /** @type {?} */\n            var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                lInjectablesBlueprint[existingProvidersFactoryIndex];\n            /** @type {?} */\n            var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n            if (isViewProvider && !doesViewProvidersFactoryExist ||\n                !isViewProvider && !doesProvidersFactoryExist) {\n                // Cases 1.a and 2.a\n                diPublicInInjector(getOrCreateNodeInjectorForNode(/** @type {?} */ (previousOrParentTNode), lView), lView, token);\n                /** @type {?} */\n                var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                if (!isViewProvider && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                }\n                tInjectables.push(token);\n                previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                if (isViewProvider) {\n                    previousOrParentTNode.providerIndexes +=\n                        65536 /* CptViewProvidersCountShifter */;\n                }\n                lInjectablesBlueprint.push(factory);\n                lView.push(factory);\n            }\n            else {\n                // Cases 1.b and 2.b\n                multiFactoryAdd(/** @type {?} */ ((lInjectablesBlueprint))[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n            }\n            if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                /** @type {?} */ ((lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders))++;\n            }\n        }\n    }\n}\n/**\n * Add a factory in a multi factory.\n * @param {?} multiFactory\n * @param {?} factory\n * @param {?} isComponentProvider\n * @return {?}\n */\nfunction multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n    /** @type {?} */ ((multiFactory.multi)).push(factory);\n    if (isComponentProvider) {\n        /** @type {?} */ ((multiFactory.componentProviders))++;\n    }\n}\n/**\n * Returns the index of item in the array, but only in the begin to end range.\n * @param {?} item\n * @param {?} arr\n * @param {?} begin\n * @param {?} end\n * @return {?}\n */\nfunction indexOf(item, arr, begin, end) {\n    for (var i = begin; i < end; i++) {\n        if (arr[i] === item)\n            return i;\n    }\n    return -1;\n}\n/**\n * Use this with `multi` `providers`.\n * @this {?}\n * @param {?} _\n * @param {?} tData\n * @param {?} lData\n * @param {?} tNode\n * @return {?}\n */\nfunction multiProvidersFactoryResolver(_, tData, lData, tNode) {\n    return multiResolve(/** @type {?} */ ((this.multi)), []);\n}\n/**\n * Use this with `multi` `viewProviders`.\n *\n * This factory knows how to concatenate itself with the existing `multi` `providers`.\n * @this {?}\n * @param {?} _\n * @param {?} tData\n * @param {?} lData\n * @param {?} tNode\n * @return {?}\n */\nfunction multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n    /** @type {?} */\n    var factories = /** @type {?} */ ((this.multi));\n    /** @type {?} */\n    var result;\n    if (this.providerFactory) {\n        /** @type {?} */\n        var componentCount = /** @type {?} */ ((this.providerFactory.componentProviders));\n        /** @type {?} */\n        var multiProviders = getNodeInjectable(tData, lData, /** @type {?} */ ((/** @type {?} */ ((this.providerFactory)).index)), tNode);\n        // Copy the section of the array which contains `multi` `providers` from the component\n        result = multiProviders.slice(0, componentCount);\n        // Insert the `viewProvider` instances.\n        multiResolve(factories, result);\n        // Copy the section of the array which contains `multi` `providers` from other directives\n        for (var i = componentCount; i < multiProviders.length; i++) {\n            result.push(multiProviders[i]);\n        }\n    }\n    else {\n        result = [];\n        // Insert the `viewProvider` instances.\n        multiResolve(factories, result);\n    }\n    return result;\n}\n/**\n * Maps an array of factories into an array of values.\n * @param {?} factories\n * @param {?} result\n * @return {?}\n */\nfunction multiResolve(factories, result) {\n    for (var i = 0; i < factories.length; i++) {\n        /** @type {?} */\n        var factory = /** @type {?} */ (((factories[i])));\n        result.push(factory());\n    }\n    return result;\n}\n/**\n * Creates a multi factory.\n * @param {?} factoryFn\n * @param {?} index\n * @param {?} isViewProvider\n * @param {?} isComponent\n * @param {?} f\n * @return {?}\n */\nfunction multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n    /** @type {?} */\n    var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n    factory.multi = [];\n    factory.index = index;\n    factory.componentProviders = 0;\n    multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n    return factory;\n}\n//# sourceMappingURL=di_setup.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nimport { providersResolver } from '../di_setup';\n/**\n * This feature resolves the providers of a directive (or component),\n * and publish them into the DI system, making it visible to others for injection.\n *\n * For example:\n * class ComponentWithProviders {\n *   constructor(private greeter: GreeterDE) {}\n *\n *   static ngComponentDef = defineComponent({\n *     type: ComponentWithProviders,\n *     selectors: [['component-with-providers']],\n *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n *    consts: 1,\n *    vars: 1,\n *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n *      if (fs & RenderFlags.Create) {\n *        text(0);\n *      }\n *      if (fs & RenderFlags.Update) {\n *        textBinding(0, bind(ctx.greeter.greet()));\n *      }\n *    },\n *    features: [ProvidersFeature([GreeterDE])]\n *  });\n * }\n *\n * @template T\n * @param {?} providers\n * @param {?=} viewProviders\n * @return {?}\n */\nexport function ProvidersFeature(providers, viewProviders) {\n    if (viewProviders === void 0) { viewProviders = []; }\n    return function (definition) {\n        definition.providersResolver = function (def) {\n            return providersResolver(def, providers, viewProviders);\n        };\n    };\n}\n//# sourceMappingURL=providers_feature.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a component created by a `ComponentFactory`.\n * Provides access to the component instance and related objects,\n * and provides the means of destroying the instance.\n *\n * \\@publicApi\n * @abstract\n * @template C\n */\nvar /**\n * Represents a component created by a `ComponentFactory`.\n * Provides access to the component instance and related objects,\n * and provides the means of destroying the instance.\n *\n * \\@publicApi\n * @abstract\n * @template C\n */\nComponentRef = /** @class */ (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\n/**\n * Represents a component created by a `ComponentFactory`.\n * Provides access to the component instance and related objects,\n * and provides the means of destroying the instance.\n *\n * \\@publicApi\n * @abstract\n * @template C\n */\nexport { ComponentRef };\nif (false) {\n    /**\n     * The host or anchor [element](guide/glossary#element) for this component instance.\n     * @abstract\n     * @return {?}\n     */\n    ComponentRef.prototype.location = function () { };\n    /**\n     * The [dependency injector](guide/glossary#injector) for this component instance.\n     * @abstract\n     * @return {?}\n     */\n    ComponentRef.prototype.injector = function () { };\n    /**\n     * This component instance.\n     * @abstract\n     * @return {?}\n     */\n    ComponentRef.prototype.instance = function () { };\n    /**\n     * The [host view](guide/glossary#view-tree) defined by the template\n     * for this component instance.\n     * @abstract\n     * @return {?}\n     */\n    ComponentRef.prototype.hostView = function () { };\n    /**\n     * The change detector for this component instance.\n     * @abstract\n     * @return {?}\n     */\n    ComponentRef.prototype.changeDetectorRef = function () { };\n    /**\n     * The component type.\n     * @abstract\n     * @return {?}\n     */\n    ComponentRef.prototype.componentType = function () { };\n    /**\n     * Destroys the component instance and all of the data structures associated with it.\n     * @abstract\n     * @return {?}\n     */\n    ComponentRef.prototype.destroy = function () { };\n    /**\n     * A lifecycle hook that provides additional developer-defined cleanup\n     * functionality for the component.\n     * @abstract\n     * @param {?} callback A handler function that cleans up developer-defined data\n     * associated with this component. Called when the `destroy()` method is invoked.\n     * @return {?}\n     */\n    ComponentRef.prototype.onDestroy = function (callback) { };\n}\n/**\n * \\@publicApi\n * @abstract\n * @template C\n */\nvar /**\n * \\@publicApi\n * @abstract\n * @template C\n */\nComponentFactory = /** @class */ (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n/**\n * \\@publicApi\n * @abstract\n * @template C\n */\nexport { ComponentFactory };\nif (false) {\n    /**\n     * The component's HTML selector.\n     * @abstract\n     * @return {?}\n     */\n    ComponentFactory.prototype.selector = function () { };\n    /**\n     * The component's type\n     * @abstract\n     * @return {?}\n     */\n    ComponentFactory.prototype.componentType = function () { };\n    /**\n     * Selector for all <ng-content> elements in the component.\n     * @abstract\n     * @return {?}\n     */\n    ComponentFactory.prototype.ngContentSelectors = function () { };\n    /**\n     * The inputs of the component.\n     * @abstract\n     * @return {?}\n     */\n    ComponentFactory.prototype.inputs = function () { };\n    /**\n     * The outputs of the component.\n     * @abstract\n     * @return {?}\n     */\n    ComponentFactory.prototype.outputs = function () { };\n    /**\n     * Creates a new component.\n     * @abstract\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) { };\n}\n//# sourceMappingURL=component_factory.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { stringify } from '../util';\nimport { ComponentFactory } from './component_factory';\n/**\n * @param {?} component\n * @return {?}\n */\nexport function noComponentFactoryError(component) {\n    /** @type {?} */\n    var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT] = component;\n    return error;\n}\n/** @type {?} */\nvar ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getComponent(error) {\n    return (/** @type {?} */ (error))[ERROR_COMPONENT];\n}\nvar _NullComponentFactoryResolver = /** @class */ (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * \\@publicApi\n * @abstract\n */\nvar ComponentFactoryResolver = /** @class */ (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nexport { ComponentFactoryResolver };\nif (false) {\n    /** @type {?} */\n    ComponentFactoryResolver.NULL;\n    /**\n     * @abstract\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) { };\n}\nvar CodegenComponentFactoryResolver = /** @class */ (function () {\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var i = 0; i < factories.length; i++) {\n            /** @type {?} */\n            var factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        /** @type {?} */\n        var factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nexport { CodegenComponentFactoryResolver };\nif (false) {\n    /** @type {?} */\n    CodegenComponentFactoryResolver.prototype._factories;\n    /** @type {?} */\n    CodegenComponentFactoryResolver.prototype._parent;\n    /** @type {?} */\n    CodegenComponentFactoryResolver.prototype._ngModule;\n}\n/**\n * @template C\n */\nvar /**\n * @template C\n */\nComponentFactoryBoundToModule = /** @class */ (function (_super) {\n    tslib_1.__extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        _this.selector = factory.selector;\n        _this.componentType = factory.componentType;\n        _this.ngContentSelectors = factory.ngContentSelectors;\n        _this.inputs = factory.inputs;\n        _this.outputs = factory.outputs;\n        return _this;\n    }\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactoryBoundToModule.prototype.create = /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n/**\n * @template C\n */\nexport { ComponentFactoryBoundToModule };\nif (false) {\n    /** @type {?} */\n    ComponentFactoryBoundToModule.prototype.selector;\n    /** @type {?} */\n    ComponentFactoryBoundToModule.prototype.componentType;\n    /** @type {?} */\n    ComponentFactoryBoundToModule.prototype.ngContentSelectors;\n    /** @type {?} */\n    ComponentFactoryBoundToModule.prototype.inputs;\n    /** @type {?} */\n    ComponentFactoryBoundToModule.prototype.outputs;\n    /** @type {?} */\n    ComponentFactoryBoundToModule.prototype.factory;\n    /** @type {?} */\n    ComponentFactoryBoundToModule.prototype.ngModule;\n}\n//# sourceMappingURL=component_factory_resolver.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { injectElementRef as render3InjectElementRef } from '../render3/view_engine_compatibility';\nimport { noop } from '../util/noop';\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * \\@publicApi\n * @template T\n */\nvar ElementRef = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    /**\n     * \\@internal\n     */\n    ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n    return ElementRef;\n}());\nexport { ElementRef };\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ElementRef.__NG_ELEMENT_ID__;\n    /**\n     * The underlying native element or `null` if direct access to native elements is not supported\n     * (e.g. when the application runs in a web worker).\n     *\n     * <div class=\"callout is-critical\">\n     *   <header>Use with caution</header>\n     *   <p>\n     *    Use this API as the last resort when direct access to DOM is needed. Use templating and\n     *    data-binding provided by Angular instead. Alternatively you can take a look at {\\@link\n     * Renderer2}\n     *    which provides API that can safely be used even when direct access to native elements is not\n     *    supported.\n     *   </p>\n     *   <p>\n     *    Relying on direct DOM access creates tight coupling between your application and rendering\n     *    layers which will make it impossible to separate the two and deploy your application into a\n     *    web worker.\n     *   </p>\n     * </div>\n     *\n     * @type {?}\n     */\n    ElementRef.prototype.nativeElement;\n}\n/** @type {?} */\nexport var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = render3InjectElementRef;\n/** @type {?} */\nvar SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n/** @type {?} */\nvar SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n//# sourceMappingURL=element_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken } from '../di/injection_token';\nimport { injectRenderer2 as render3InjectRenderer2 } from '../render3/view_engine_compatibility';\nimport { noop } from '../util/noop';\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n * \\@publicApi\n */\nvar /**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n * \\@publicApi\n */\nRenderComponentType = /** @class */ (function () {\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n * \\@publicApi\n */\nexport { RenderComponentType };\nif (false) {\n    /** @type {?} */\n    RenderComponentType.prototype.id;\n    /** @type {?} */\n    RenderComponentType.prototype.templateUrl;\n    /** @type {?} */\n    RenderComponentType.prototype.slotCount;\n    /** @type {?} */\n    RenderComponentType.prototype.encapsulation;\n    /** @type {?} */\n    RenderComponentType.prototype.styles;\n    /** @type {?} */\n    RenderComponentType.prototype.animations;\n}\n/**\n * @deprecated Debug info is handled internally in the view engine now.\n * @abstract\n */\nvar /**\n * @deprecated Debug info is handled internally in the view engine now.\n * @abstract\n */\nRenderDebugInfo = /** @class */ (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Debug info is handled internally in the view engine now.\n * @abstract\n */\nexport { RenderDebugInfo };\nif (false) {\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.injector = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.component = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.providerTokens = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.references = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.context = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.source = function () { };\n}\n/**\n * @deprecated Use the `Renderer2` instead.\n * @record\n */\nexport function DirectRenderer() { }\n/** @type {?} */\nDirectRenderer.prototype.remove;\n/** @type {?} */\nDirectRenderer.prototype.appendChild;\n/** @type {?} */\nDirectRenderer.prototype.insertBefore;\n/** @type {?} */\nDirectRenderer.prototype.nextSibling;\n/** @type {?} */\nDirectRenderer.prototype.parentElement;\n/**\n * @deprecated Use the `Renderer2` instead.\n * \\@publicApi\n * @abstract\n */\nvar /**\n * @deprecated Use the `Renderer2` instead.\n * \\@publicApi\n * @abstract\n */\nRenderer = /** @class */ (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n * \\@publicApi\n * @abstract\n */\nexport { Renderer };\nif (false) {\n    /**\n     * @abstract\n     * @param {?} selectorOrNode\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    Renderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) { };\n    /**\n     * @abstract\n     * @param {?} parentElement\n     * @param {?} name\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    Renderer.prototype.createElement = function (parentElement, name, debugInfo) { };\n    /**\n     * @abstract\n     * @param {?} hostElement\n     * @return {?}\n     */\n    Renderer.prototype.createViewRoot = function (hostElement) { };\n    /**\n     * @abstract\n     * @param {?} parentElement\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    Renderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) { };\n    /**\n     * @abstract\n     * @param {?} parentElement\n     * @param {?} value\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    Renderer.prototype.createText = function (parentElement, value, debugInfo) { };\n    /**\n     * @abstract\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    Renderer.prototype.projectNodes = function (parentElement, nodes) { };\n    /**\n     * @abstract\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    Renderer.prototype.attachViewAfter = function (node, viewRootNodes) { };\n    /**\n     * @abstract\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    Renderer.prototype.detachView = function (viewRootNodes) { };\n    /**\n     * @abstract\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    Renderer.prototype.destroyView = function (hostElement, viewAllNodes) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    Renderer.prototype.listen = function (renderElement, name, callback) { };\n    /**\n     * @abstract\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    Renderer.prototype.listenGlobal = function (target, name, callback) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    Renderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} attributeName\n     * @param {?=} attributeValue\n     * @return {?}\n     */\n    Renderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) { };\n    /**\n     * Used only in debug mode to serialize property changes to dom nodes as attributes.\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    Renderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    Renderer.prototype.setElementClass = function (renderElement, className, isAdd) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?=} styleValue\n     * @return {?}\n     */\n    Renderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?=} args\n     * @return {?}\n     */\n    Renderer.prototype.invokeElementMethod = function (renderElement, methodName, args) { };\n    /**\n     * @abstract\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    Renderer.prototype.setText = function (renderNode, text) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} startingStyles\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?} easing\n     * @param {?=} previousPlayers\n     * @return {?}\n     */\n    Renderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) { };\n}\n/** @type {?} */\nexport var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty setElementProperty} or\n * {\\@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * \\@publicApi\n * @abstract\n */\nvar /**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty setElementProperty} or\n * {\\@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * \\@publicApi\n * @abstract\n */\nRootRenderer = /** @class */ (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty setElementProperty} or\n * {\\@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * \\@publicApi\n * @abstract\n */\nexport { RootRenderer };\nif (false) {\n    /**\n     * @abstract\n     * @param {?} componentType\n     * @return {?}\n     */\n    RootRenderer.prototype.renderComponent = function (componentType) { };\n}\n/**\n * Used by `RendererFactory2` to associate custom rendering data and styles\n * with a rendering implementation.\n * \\@publicApi\n * @record\n */\nexport function RendererType2() { }\n/**\n * A unique identifying string for the new renderer, used when creating\n * unique styles for encapsulation.\n * @type {?}\n */\nRendererType2.prototype.id;\n/**\n * The view encapsulation type, which determines how styles are applied to\n * DOM elements. One of\n * - `Emulated` (default): Emulate native scoping of styles.\n * - `Native`: Use the native encapsulation mechanism of the renderer.\n * - `ShadowDom`: Use modern [Shadow\n * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n * create a ShadowRoot for component's host element.\n * - `None`: Do not provide any template or style encapsulation.\n * @type {?}\n */\nRendererType2.prototype.encapsulation;\n/**\n * Defines CSS styles to be stored on a renderer instance.\n * @type {?}\n */\nRendererType2.prototype.styles;\n/**\n * Defines arbitrary developer-defined data to be stored on a renderer instance.\n * This is useful for renderers that delegate to other renderers.\n * @type {?}\n */\nRendererType2.prototype.data;\n/**\n * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n *\n * \\@publicApi\n * @abstract\n */\nvar /**\n * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n *\n * \\@publicApi\n * @abstract\n */\nRendererFactory2 = /** @class */ (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/**\n * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n *\n * \\@publicApi\n * @abstract\n */\nexport { RendererFactory2 };\nif (false) {\n    /**\n     * Creates and initializes a custom renderer for a host DOM element.\n     * @abstract\n     * @param {?} hostElement The element to render.\n     * @param {?} type The base class to implement.\n     * @return {?} The new custom renderer instance.\n     */\n    RendererFactory2.prototype.createRenderer = function (hostElement, type) { };\n    /**\n     * A callback invoked when rendering has begun.\n     * @abstract\n     * @return {?}\n     */\n    RendererFactory2.prototype.begin = function () { };\n    /**\n     * A callback invoked when rendering has completed.\n     * @abstract\n     * @return {?}\n     */\n    RendererFactory2.prototype.end = function () { };\n    /**\n     * Use with animations test-only mode. Notifies the test when rendering has completed.\n     * @abstract\n     * @return {?} The asynchronous result of the developer-defined function.\n     */\n    RendererFactory2.prototype.whenRenderingDone = function () { };\n}\n/** @enum {number} */\nvar RendererStyleFlags2 = {\n    /**\n       * Marks a style as important.\n       */\n    Important: 1,\n    /**\n       * Marks a style as using dash case naming (this-is-dash-case).\n       */\n    DashCase: 2,\n};\nexport { RendererStyleFlags2 };\nRendererStyleFlags2[RendererStyleFlags2.Important] = 'Important';\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = 'DashCase';\n/**\n * Extend this base class to implement custom rendering. By default, Angular\n * renders a template into DOM. You can use custom rendering to intercept\n * rendering calls, or to render to something other than DOM.\n *\n * Create your custom renderer using `RendererFactory2`.\n *\n * Use a custom renderer to bypass Angular's templating and\n * make custom UI changes that can't be expressed declaratively.\n * For example if you need to set a property or an attribute whose name is\n * not statically known, use the `setProperty()` or\n * `setAttribute()` method.\n *\n * \\@publicApi\n * @abstract\n */\nvar Renderer2 = /** @class */ (function () {\n    function Renderer2() {\n    }\n    /**\n     * \\@internal\n     */\n    Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n    return Renderer2;\n}());\nexport { Renderer2 };\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Renderer2.__NG_ELEMENT_ID__;\n    /**\n     * If null or undefined, the view engine won't call it.\n     * This is used as a performance optimization for production mode.\n     * @type {?}\n     */\n    Renderer2.prototype.destroyNode;\n    /**\n     * Use to store arbitrary developer-defined data on a renderer instance,\n     * as an object containing key-value pairs.\n     * This is useful for renderers that delegate to other renderers.\n     * @abstract\n     * @return {?}\n     */\n    Renderer2.prototype.data = function () { };\n    /**\n     * Implement this callback to destroy the renderer or the host element.\n     * @abstract\n     * @return {?}\n     */\n    Renderer2.prototype.destroy = function () { };\n    /**\n     * Implement this callback to create an instance of the host element.\n     * @abstract\n     * @param {?} name An identifying name for the new element, unique within the namespace.\n     * @param {?=} namespace The namespace for the new element.\n     * @return {?} The new element.\n     */\n    Renderer2.prototype.createElement = function (name, namespace) { };\n    /**\n     * Implement this callback to add a comment to the DOM of the host element.\n     * @abstract\n     * @param {?} value The comment text.\n     * @return {?} The modified element.\n     */\n    Renderer2.prototype.createComment = function (value) { };\n    /**\n     * Implement this callback to add text to the DOM of the host element.\n     * @abstract\n     * @param {?} value The text string.\n     * @return {?} The modified element.\n     */\n    Renderer2.prototype.createText = function (value) { };\n    /**\n     * Appends a child to a given parent node in the host element DOM.\n     * @abstract\n     * @param {?} parent The parent node.\n     * @param {?} newChild The new child node.\n     * @return {?}\n     */\n    Renderer2.prototype.appendChild = function (parent, newChild) { };\n    /**\n     * Implement this callback to insert a child node at a given position in a parent node\n     * in the host element DOM.\n     * @abstract\n     * @param {?} parent The parent node.\n     * @param {?} newChild The new child nodes.\n     * @param {?} refChild The existing child node that should precede the new node.\n     * @return {?}\n     */\n    Renderer2.prototype.insertBefore = function (parent, newChild, refChild) { };\n    /**\n     * Implement this callback to remove a child node from the host element's DOM.\n     * @abstract\n     * @param {?} parent The parent node.\n     * @param {?} oldChild The child node to remove.\n     * @return {?}\n     */\n    Renderer2.prototype.removeChild = function (parent, oldChild) { };\n    /**\n     * Implement this callback to prepare an element to be bootstrapped\n     * as a root element, and return the element instance.\n     * @abstract\n     * @param {?} selectorOrNode The DOM element.\n     * @param {?=} preserveContent Whether the contents of the root element\n     * should be preserved, or cleared upon bootstrap (default behavior).\n     * Use with `ViewEncapsulation.ShadowDom` to allow simple native\n     * content projection via `<slot>` elements.\n     * @return {?} The root element.\n     */\n    Renderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) { };\n    /**\n     * Implement this callback to get the parent of a given node\n     * in the host element's DOM.\n     * @abstract\n     * @param {?} node The child node to query.\n     * @return {?} The parent node, or null if there is no parent.\n     * For WebWorkers, always returns true.\n     * This is because the check is synchronous,\n     * and the caller can't rely on checking for null.\n     */\n    Renderer2.prototype.parentNode = function (node) { };\n    /**\n     * Implement this callback to get the next sibling node of a given node\n     * in the host element's DOM.\n     * @abstract\n     * @param {?} node\n     * @return {?} The sibling node, or null if there is no sibling.\n     * For WebWorkers, always returns a value.\n     * This is because the check is synchronous,\n     * and the caller can't rely on checking for null.\n     */\n    Renderer2.prototype.nextSibling = function (node) { };\n    /**\n     * Implement this callback to set an attribute value for an element in the DOM.\n     * @abstract\n     * @param {?} el The element.\n     * @param {?} name The attribute name.\n     * @param {?} value The new value.\n     * @param {?=} namespace The namespace.\n     * @return {?}\n     */\n    Renderer2.prototype.setAttribute = function (el, name, value, namespace) { };\n    /**\n     * Implement this callback to remove an attribute from an element in the DOM.\n     * @abstract\n     * @param {?} el The element.\n     * @param {?} name The attribute name.\n     * @param {?=} namespace The namespace.\n     * @return {?}\n     */\n    Renderer2.prototype.removeAttribute = function (el, name, namespace) { };\n    /**\n     * Implement this callback to add a class to an element in the DOM.\n     * @abstract\n     * @param {?} el The element.\n     * @param {?} name The class name.\n     * @return {?}\n     */\n    Renderer2.prototype.addClass = function (el, name) { };\n    /**\n     * Implement this callback to remove a class from an element in the DOM.\n     * @abstract\n     * @param {?} el The element.\n     * @param {?} name The class name.\n     * @return {?}\n     */\n    Renderer2.prototype.removeClass = function (el, name) { };\n    /**\n     * Implement this callback to set a CSS style for an element in the DOM.\n     * @abstract\n     * @param {?} el The element.\n     * @param {?} style The name of the style.\n     * @param {?} value The new value.\n     * @param {?=} flags Flags for style variations. No flags are set by default.\n     * @return {?}\n     */\n    Renderer2.prototype.setStyle = function (el, style, value, flags) { };\n    /**\n     * Implement this callback to remove the value from a CSS style for an element in the DOM.\n     * @abstract\n     * @param {?} el The element.\n     * @param {?} style The name of the style.\n     * @param {?=} flags Flags for style variations to remove, if set. ???\n     * @return {?}\n     */\n    Renderer2.prototype.removeStyle = function (el, style, flags) { };\n    /**\n     * Implement this callback to set the value of a property of an element in the DOM.\n     * @abstract\n     * @param {?} el The element.\n     * @param {?} name The property name.\n     * @param {?} value The new value.\n     * @return {?}\n     */\n    Renderer2.prototype.setProperty = function (el, name, value) { };\n    /**\n     * Implement this callback to set the value of a node in the host element.\n     * @abstract\n     * @param {?} node The node.\n     * @param {?} value The new value.\n     * @return {?}\n     */\n    Renderer2.prototype.setValue = function (node, value) { };\n    /**\n     * Implement this callback to start an event listener.\n     * @abstract\n     * @param {?} target The context in which to listen for events. Can be\n     * the entire window or document, the body of the document, or a specific\n     * DOM element.\n     * @param {?} eventName The event to listen for.\n     * @param {?} callback A handler function to invoke when the event occurs.\n     * @return {?} An \"unlisten\" function for disposing of this handler.\n     */\n    Renderer2.prototype.listen = function (target, eventName, callback) { };\n}\n/** @type {?} */\nexport var SWITCH_RENDERER2_FACTORY__POST_R3__ = render3InjectRenderer2;\n/** @type {?} */\nvar SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n/** @type {?} */\nvar SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n//# sourceMappingURL=api.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nexport { SecurityContext };\nSecurityContext[SecurityContext.NONE] = 'NONE';\nSecurityContext[SecurityContext.HTML] = 'HTML';\nSecurityContext[SecurityContext.STYLE] = 'STYLE';\nSecurityContext[SecurityContext.SCRIPT] = 'SCRIPT';\nSecurityContext[SecurityContext.URL] = 'URL';\nSecurityContext[SecurityContext.RESOURCE_URL] = 'RESOURCE_URL';\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@publicApi\n * @abstract\n */\nvar /**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@publicApi\n * @abstract\n */\nSanitizer = /** @class */ (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@publicApi\n * @abstract\n */\nexport { Sanitizer };\nif (false) {\n    /**\n     * @abstract\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    Sanitizer.prototype.sanitize = function (context, value) { };\n}\n//# sourceMappingURL=security.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@description Represents the version of Angular\n *\n * \\@publicApi\n */\nvar /**\n * \\@description Represents the version of Angular\n *\n * \\@publicApi\n */\nVersion = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * \\@description Represents the version of Angular\n *\n * \\@publicApi\n */\nexport { Version };\nif (false) {\n    /** @type {?} */\n    Version.prototype.major;\n    /** @type {?} */\n    Version.prototype.minor;\n    /** @type {?} */\n    Version.prototype.patch;\n    /** @type {?} */\n    Version.prototype.full;\n}\n/** *\n * \\@publicApi\n  @type {?} */\nexport var VERSION = new Version('7.1.0-ee8310445');\n//# sourceMappingURL=version.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { InjectionToken } from '../di/injection_token';\nimport { inject } from '../di/injector_compatibility';\nimport { ComponentFactory as viewEngine_ComponentFactory, ComponentRef as viewEngine_ComponentRef } from '../linker/component_factory';\nimport { ComponentFactoryResolver as viewEngine_ComponentFactoryResolver } from '../linker/component_factory_resolver';\nimport { ElementRef as viewEngine_ElementRef } from '../linker/element_ref';\nimport { RendererFactory2 } from '../render/api';\nimport { Sanitizer } from '../sanitization/security';\nimport { VERSION } from '../version';\nimport { assertComponentType, assertDefined } from './assert';\nimport { LifecycleHooksFeature, createRootComponent, createRootComponentView, createRootContext } from './component';\nimport { getComponentDef } from './definition';\nimport { NodeInjector } from './di';\nimport { createLView, createNodeAtIndex, createTView, createViewNode, elementCreate, locateHostElement, refreshDescendantViews } from './instructions';\nimport { domRendererFactory3, isProceduralRenderer } from './interfaces/renderer';\nimport { HEADER_OFFSET, TVIEW } from './interfaces/view';\nimport { enterView, leaveView } from './state';\nimport { defaultScheduler, getTNode } from './util';\nimport { createElementRef } from './view_engine_compatibility';\nimport { RootViewRef } from './view_ref';\nvar ComponentFactoryResolver = /** @class */ (function (_super) {\n    tslib_1.__extends(ComponentFactoryResolver, _super);\n    function ComponentFactoryResolver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    ComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        ngDevMode && assertComponentType(component);\n        /** @type {?} */\n        var componentDef = /** @type {?} */ ((getComponentDef(component)));\n        return new ComponentFactory(componentDef);\n    };\n    return ComponentFactoryResolver;\n}(viewEngine_ComponentFactoryResolver));\nexport { ComponentFactoryResolver };\n/**\n * @param {?} map\n * @return {?}\n */\nfunction toRefArray(map) {\n    /** @type {?} */\n    var array = [];\n    for (var nonMinified in map) {\n        if (map.hasOwnProperty(nonMinified)) {\n            /** @type {?} */\n            var minified = map[nonMinified];\n            array.push({ propName: minified, templateName: nonMinified });\n        }\n    }\n    return array;\n}\n/** *\n * Default {\\@link RootContext} for all components rendered with {\\@link renderComponent}.\n  @type {?} */\nexport var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n/** *\n * A change detection scheduler token for {\\@link RootContext}. This token is the default value used\n * for the default `RootContext` found in the {\\@link ROOT_CONTEXT} token.\n  @type {?} */\nexport var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n    providedIn: 'root',\n    factory: function () { return defaultScheduler; },\n});\n/** @type {?} */\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} rootViewInjector\n * @param {?} moduleInjector\n * @return {?}\n */\nfunction createChainedInjector(rootViewInjector, moduleInjector) {\n    return {\n        get: function (token, notFoundValue) {\n            /** @type {?} */\n            var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n            if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                // Return the value from the root element injector when\n                // - it provides it\n                //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                return value;\n            }\n            return moduleInjector.get(token, notFoundValue);\n        }\n    };\n}\n/**\n * Render3 implementation of {\\@link viewEngine_ComponentFactory}.\n * @template T\n */\nvar /**\n * Render3 implementation of {\\@link viewEngine_ComponentFactory}.\n * @template T\n */\nComponentFactory = /** @class */ (function (_super) {\n    tslib_1.__extends(ComponentFactory, _super);\n    function ComponentFactory(componentDef) {\n        var _this = _super.call(this) || this;\n        _this.componentDef = componentDef;\n        _this.componentType = componentDef.type;\n        _this.selector = /** @type {?} */ (componentDef.selectors[0][0]);\n        _this.ngContentSelectors = [];\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return toRefArray(this.componentDef.inputs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return toRefArray(this.componentDef.outputs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory.prototype.create = /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        /** @type {?} */\n        var isInternalRootView = rootSelectorOrNode === undefined;\n        /** @type {?} */\n        var rendererFactory;\n        /** @type {?} */\n        var sanitizer = null;\n        if (ngModule) {\n            rendererFactory = /** @type {?} */ (ngModule.injector.get(RendererFactory2));\n            sanitizer = ngModule.injector.get(Sanitizer, null);\n        }\n        else {\n            rendererFactory = domRendererFactory3;\n        }\n        /** @type {?} */\n        var hostRNode = isInternalRootView ?\n            elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n            locateHostElement(rendererFactory, rootSelectorOrNode);\n        /** @type {?} */\n        var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        /** @type {?} */\n        var rootContext = ngModule && !isInternalRootView ? ngModule.injector.get(ROOT_CONTEXT) : createRootContext();\n        /** @type {?} */\n        var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n        /** @type {?} */\n        var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n        if (rootSelectorOrNode && hostRNode) {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            isProceduralRenderer(renderer) ?\n                renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                hostRNode.setAttribute('ng-version', VERSION.full);\n        }\n        /** @type {?} */\n        var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n        /** @type {?} */\n        var oldLView = enterView(rootLView, null);\n        /** @type {?} */\n        var component;\n        /** @type {?} */\n        var tElementNode;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            /** @type {?} */\n            var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n            tElementNode = /** @type {?} */ (getTNode(0, rootLView));\n            // Transform the arrays of native nodes into a structure that can be consumed by the\n            // projection instruction. This is needed to support the reprojection of these nodes.\n            if (projectableNodes) {\n                /** @type {?} */\n                var index = 0;\n                /** @type {?} */\n                var tView = rootLView[TVIEW];\n                /** @type {?} */\n                var projection = tElementNode.projection = [];\n                for (var i = 0; i < projectableNodes.length; i++) {\n                    /** @type {?} */\n                    var nodeList = projectableNodes[i];\n                    /** @type {?} */\n                    var firstTNode = null;\n                    /** @type {?} */\n                    var previousTNode = null;\n                    for (var j = 0; j < nodeList.length; j++) {\n                        if (tView.firstTemplatePass) {\n                            // For dynamically created components such as ComponentRef, we create a new TView for\n                            // each insert. This is not ideal since we should be sharing the TViews.\n                            // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                            // method.\n                            tView.expandoStartIndex++;\n                            tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                            tView.data.splice(index + HEADER_OFFSET, 0, null);\n                            rootLView.splice(index + HEADER_OFFSET, 0, null);\n                        }\n                        /** @type {?} */\n                        var tNode = createNodeAtIndex(index, 3 /* Element */, /** @type {?} */ (nodeList[j]), null, null);\n                        previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                        previousTNode = tNode;\n                    }\n                    projection.push(/** @type {?} */ ((firstTNode)));\n                }\n            }\n            // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n            // executed here?\n            // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n            component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n            refreshDescendantViews(rootLView, 1 /* Create */);\n        }\n        finally {\n            leaveView(oldLView, true);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        /** @type {?} */\n        var componentRef = new ComponentRef(this.componentType, component, createElementRef(viewEngine_ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n        if (isInternalRootView) {\n            /** @type {?} */ ((\n            // The host element of the internal root view is attached to the component's host view node\n            componentRef.hostView._tViewNode)).child = tElementNode;\n        }\n        return componentRef;\n    };\n    return ComponentFactory;\n}(viewEngine_ComponentFactory));\n/**\n * Render3 implementation of {\\@link viewEngine_ComponentFactory}.\n * @template T\n */\nexport { ComponentFactory };\nif (false) {\n    /** @type {?} */\n    ComponentFactory.prototype.selector;\n    /** @type {?} */\n    ComponentFactory.prototype.componentType;\n    /** @type {?} */\n    ComponentFactory.prototype.ngContentSelectors;\n    /** @type {?} */\n    ComponentFactory.prototype.componentDef;\n}\n/** @type {?} */\nvar componentFactoryResolver = new ComponentFactoryResolver();\n/**\n * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n * ComponentFactoryResolver\n * already exists, retrieves the existing ComponentFactoryResolver.\n *\n * @return {?} The ComponentFactoryResolver instance to use\n */\nexport function injectComponentFactoryResolver() {\n    return componentFactoryResolver;\n}\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n *\n * @template T\n */\nvar /**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n *\n * @template T\n */\nComponentRef = /** @class */ (function (_super) {\n    tslib_1.__extends(ComponentRef, _super);\n    function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n        var _this = _super.call(this) || this;\n        _this.location = location;\n        _this._rootLView = _rootLView;\n        _this._tNode = _tNode;\n        _this.destroyCbs = [];\n        _this.instance = instance;\n        _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n        _this.hostView._tViewNode = createViewNode(-1, _rootLView);\n        _this.componentType = componentType;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new NodeInjector(this._tNode, this._rootLView); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ComponentRef.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed'); /** @type {?} */\n        ((this.destroyCbs)).forEach(function (fn) { return fn(); });\n        this.destroyCbs = null;\n        this.hostView.destroy();\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed'); /** @type {?} */\n        ((this.destroyCbs)).push(callback);\n    };\n    return ComponentRef;\n}(viewEngine_ComponentRef));\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n *\n * @template T\n */\nexport { ComponentRef };\nif (false) {\n    /** @type {?} */\n    ComponentRef.prototype.destroyCbs;\n    /** @type {?} */\n    ComponentRef.prototype.instance;\n    /** @type {?} */\n    ComponentRef.prototype.hostView;\n    /** @type {?} */\n    ComponentRef.prototype.changeDetectorRef;\n    /** @type {?} */\n    ComponentRef.prototype.componentType;\n    /** @type {?} */\n    ComponentRef.prototype.location;\n    /** @type {?} */\n    ComponentRef.prototype._rootLView;\n    /** @type {?} */\n    ComponentRef.prototype._tNode;\n}\n//# sourceMappingURL=component_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n *\n * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n * please see [BAZEL.md](./docs/BAZEL.md).\n */\n/** @type {?} */\nvar _devMode = true;\n/** @type {?} */\nvar _runModeLocked = false;\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@publicApi\n * @return {?}\n */\nexport function isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * \\@publicApi\n * @return {?}\n */\nexport function enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n//# sourceMappingURL=is_dev_mode.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we must use one of three strategies for doing this.\n * Support: Safari 10.x -> XHR strategy\n * Support: Firefox -> DomParser strategy\n * Default: InertDocument strategy\n */\nvar /**\n * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we must use one of three strategies for doing this.\n * Support: Safari 10.x -> XHR strategy\n * Support: Firefox -> DomParser strategy\n * Default: InertDocument strategy\n */\nInertBodyHelper = /** @class */ (function () {\n    function InertBodyHelper(defaultDoc) {\n        this.defaultDoc = defaultDoc;\n        this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n        this.inertBodyElement = this.inertDocument.body;\n        if (this.inertBodyElement == null) {\n            /** @type {?} */\n            var inertHtml = this.inertDocument.createElement('html');\n            this.inertDocument.appendChild(inertHtml);\n            this.inertBodyElement = this.inertDocument.createElement('body');\n            inertHtml.appendChild(this.inertBodyElement);\n        }\n        this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n        if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n            // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n            // so use the XHR strategy.\n            this.getInertBodyElement = this.getInertBodyElement_XHR;\n            return;\n        }\n        this.inertBodyElement.innerHTML =\n            '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n        if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n            // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n            // so use the DOMParser strategy, if it is available.\n            // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n            // fall through to the default strategy below.\n            if (isDOMParserAvailable()) {\n                this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                return;\n            }\n        }\n        // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n        this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n    }\n    /**\n     * Use XHR to create and fill an inert body element (on Safari 10.1)\n     * See\n     * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n     * @param {?} html\n     * @return {?}\n     */\n    InertBodyHelper.prototype.getInertBodyElement_XHR = /**\n     * Use XHR to create and fill an inert body element (on Safari 10.1)\n     * See\n     * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n     * @param {?} html\n     * @return {?}\n     */\n    function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            html = encodeURI(html);\n        }\n        catch (e) {\n            return null;\n        }\n        /** @type {?} */\n        var xhr = new XMLHttpRequest();\n        xhr.responseType = 'document';\n        xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n        xhr.send(undefined);\n        /** @type {?} */\n        var body = xhr.response.body;\n        body.removeChild(/** @type {?} */ ((body.firstChild)));\n        return body;\n    };\n    /**\n     * Use DOMParser to create and fill an inert body element (on Firefox)\n     * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n     *\n     * @param {?} html\n     * @return {?}\n     */\n    InertBodyHelper.prototype.getInertBodyElement_DOMParser = /**\n     * Use DOMParser to create and fill an inert body element (on Firefox)\n     * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n     *\n     * @param {?} html\n     * @return {?}\n     */\n    function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            /** @type {?} */\n            var body = /** @type {?} */ (new (/** @type {?} */ (window))\n                .DOMParser()\n                .parseFromString(html, 'text/html')\n                .body);\n            body.removeChild(/** @type {?} */ ((body.firstChild)));\n            return body;\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    /**\n     * Use an HTML5 `template` element, if supported, or an inert body element created via\n     * `createHtmlDocument` to create and fill an inert DOM element.\n     * This is the default sane strategy to use if the browser does not require one of the specialised\n     * strategies above.\n     * @param {?} html\n     * @return {?}\n     */\n    InertBodyHelper.prototype.getInertBodyElement_InertDocument = /**\n     * Use an HTML5 `template` element, if supported, or an inert body element created via\n     * `createHtmlDocument` to create and fill an inert DOM element.\n     * This is the default sane strategy to use if the browser does not require one of the specialised\n     * strategies above.\n     * @param {?} html\n     * @return {?}\n     */\n    function (html) {\n        /** @type {?} */\n        var templateEl = this.inertDocument.createElement('template');\n        if ('content' in templateEl) {\n            templateEl.innerHTML = html;\n            return templateEl;\n        }\n        this.inertBodyElement.innerHTML = html;\n        // Support: IE 9-11 only\n        // strip custom-namespaced attributes on IE<=11\n        if ((/** @type {?} */ (this.defaultDoc)).documentMode) {\n            this.stripCustomNsAttrs(this.inertBodyElement);\n        }\n        return this.inertBodyElement;\n    };\n    /**\n     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n     * 'ns1:xlink:foo').\n     *\n     * This is undesirable since we don't want to allow any of these custom attributes. This method\n     * strips them all.\n     * @param {?} el\n     * @return {?}\n     */\n    InertBodyHelper.prototype.stripCustomNsAttrs = /**\n     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n     * 'ns1:xlink:foo').\n     *\n     * This is undesirable since we don't want to allow any of these custom attributes. This method\n     * strips them all.\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        /** @type {?} */\n        var elAttrs = el.attributes;\n        // loop backwards so that we can support removals.\n        for (var i = elAttrs.length - 1; 0 < i; i--) {\n            /** @type {?} */\n            var attrib = elAttrs.item(i);\n            /** @type {?} */\n            var attrName = /** @type {?} */ ((attrib)).name;\n            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                el.removeAttribute(attrName);\n            }\n        }\n        /** @type {?} */\n        var childNode = /** @type {?} */ (el.firstChild);\n        while (childNode) {\n            if (childNode.nodeType === Node.ELEMENT_NODE)\n                this.stripCustomNsAttrs(/** @type {?} */ (childNode));\n            childNode = childNode.nextSibling;\n        }\n    };\n    return InertBodyHelper;\n}());\n/**\n * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we must use one of three strategies for doing this.\n * Support: Safari 10.x -> XHR strategy\n * Support: Firefox -> DomParser strategy\n * Default: InertDocument strategy\n */\nexport { InertBodyHelper };\nif (false) {\n    /** @type {?} */\n    InertBodyHelper.prototype.inertBodyElement;\n    /** @type {?} */\n    InertBodyHelper.prototype.inertDocument;\n    /**\n     * Get an inert DOM element containing DOM created from the dirty HTML string provided.\n     * The implementation of this is determined in the constructor, when the class is instantiated.\n     * @type {?}\n     */\n    InertBodyHelper.prototype.getInertBodyElement;\n    /** @type {?} */\n    InertBodyHelper.prototype.defaultDoc;\n}\n/**\n * We need to determine whether the DOMParser exists in the global context.\n * The try-catch is because, on some browsers, trying to access this property\n * on window can actually throw an error.\n *\n * @suppress {uselessCode}\n * @return {?}\n */\nfunction isDOMParserAvailable() {\n    try {\n        return !!(/** @type {?} */ (window)).DOMParser;\n    }\n    catch (e) {\n        return false;\n    }\n}\n//# sourceMappingURL=inert_body.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { isDevMode } from '../is_dev_mode';\n/** *\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n  @type {?} */\nvar SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n/** @type {?} */\nvar SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n/** *\n * A pattern that matches safe data URLs. Only matches image, video and audio types.\n  @type {?} */\nvar DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n/**\n * @param {?} url\n * @return {?}\n */\nexport function _sanitizeUrl(url) {\n    url = String(url);\n    if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n        return url;\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n    }\n    return 'unsafe:' + url;\n}\n/**\n * @param {?} srcset\n * @return {?}\n */\nexport function sanitizeSrcset(srcset) {\n    srcset = String(srcset);\n    return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n}\n//# sourceMappingURL=url_sanitizer.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { isDevMode } from '../is_dev_mode';\nimport { InertBodyHelper } from './inert_body';\nimport { _sanitizeUrl, sanitizeSrcset } from './url_sanitizer';\n/**\n * @param {?} tags\n * @return {?}\n */\nfunction tagSet(tags) {\n    /** @type {?} */\n    var res = {};\n    for (var _i = 0, _a = tags.split(','); _i < _a.length; _i++) {\n        var t = _a[_i];\n        res[t] = true;\n    }\n    return res;\n}\n/**\n * @param {...?} sets\n * @return {?}\n */\nfunction merge() {\n    var sets = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sets[_i] = arguments[_i];\n    }\n    /** @type {?} */\n    var res = {};\n    for (var _a = 0, sets_1 = sets; _a < sets_1.length; _a++) {\n        var s = sets_1[_a];\n        for (var v in s) {\n            if (s.hasOwnProperty(v))\n                res[v] = true;\n        }\n    }\n    return res;\n}\n/** @type {?} */\nvar VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n/** @type {?} */\nvar OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n/** @type {?} */\nvar OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n/** @type {?} */\nvar OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n/** @type {?} */\nvar BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n    'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n    'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n/** @type {?} */\nvar INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n    'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n    'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n/** @type {?} */\nexport var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n/** @type {?} */\nexport var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n/** @type {?} */\nexport var SRCSET_ATTRS = tagSet('srcset');\n/** @type {?} */\nvar HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n/** @type {?} */\nexport var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nvar /**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nSanitizingHtmlSerializer = /** @class */ (function () {\n    function SanitizingHtmlSerializer() {\n        this.sanitizedSomething = false;\n        this.buf = [];\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.sanitizeChildren = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        /** @type {?} */\n        var current = /** @type {?} */ ((el.firstChild));\n        /** @type {?} */\n        var elementValid = true;\n        while (current) {\n            if (current.nodeType === Node.ELEMENT_NODE) {\n                elementValid = this.startElement(/** @type {?} */ (current));\n            }\n            else if (current.nodeType === Node.TEXT_NODE) {\n                this.chars(/** @type {?} */ ((current.nodeValue)));\n            }\n            else {\n                // Strip non-element, non-text nodes.\n                this.sanitizedSomething = true;\n            }\n            if (elementValid && current.firstChild) {\n                current = /** @type {?} */ ((current.firstChild));\n                continue;\n            }\n            while (current) {\n                // Leaving the element. Walk up and to the right, closing tags as we go.\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.endElement(/** @type {?} */ (current));\n                }\n                /** @type {?} */\n                var next = this.checkClobberedElement(current, /** @type {?} */ ((current.nextSibling)));\n                if (next) {\n                    current = next;\n                    break;\n                }\n                current = this.checkClobberedElement(current, /** @type {?} */ ((current.parentNode)));\n            }\n        }\n        return this.buf.join('');\n    };\n    /**\n     * Outputs only valid Elements.\n     *\n     * Invalid elements are skipped.\n     *\n     * @param {?} element element to sanitize\n     * Returns true if the element is valid.\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.startElement = /**\n     * Outputs only valid Elements.\n     *\n     * Invalid elements are skipped.\n     *\n     * @param {?} element element to sanitize\n     * Returns true if the element is valid.\n     * @return {?}\n     */\n    function (element) {\n        /** @type {?} */\n        var tagName = element.nodeName.toLowerCase();\n        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.sanitizedSomething = true;\n            return false;\n        }\n        this.buf.push('<');\n        this.buf.push(tagName);\n        /** @type {?} */\n        var elAttrs = element.attributes;\n        for (var i = 0; i < elAttrs.length; i++) {\n            /** @type {?} */\n            var elAttr = elAttrs.item(i);\n            /** @type {?} */\n            var attrName = /** @type {?} */ ((elAttr)).name;\n            /** @type {?} */\n            var lower = attrName.toLowerCase();\n            if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                this.sanitizedSomething = true;\n                continue;\n            }\n            /** @type {?} */\n            var value = /** @type {?} */ ((elAttr)).value;\n            // TODO(martinprobst): Special case image URIs for data:image/...\n            if (URI_ATTRS[lower])\n                value = _sanitizeUrl(value);\n            if (SRCSET_ATTRS[lower])\n                value = sanitizeSrcset(value);\n            this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n        }\n        this.buf.push('>');\n        return true;\n    };\n    /**\n     * @param {?} current\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.endElement = /**\n     * @param {?} current\n     * @return {?}\n     */\n    function (current) {\n        /** @type {?} */\n        var tagName = current.nodeName.toLowerCase();\n        if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.buf.push('</');\n            this.buf.push(tagName);\n            this.buf.push('>');\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.chars = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) { this.buf.push(encodeEntities(chars)); };\n    /**\n     * @param {?} node\n     * @param {?} nextNode\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.checkClobberedElement = /**\n     * @param {?} node\n     * @param {?} nextNode\n     * @return {?}\n     */\n    function (node, nextNode) {\n        if (nextNode &&\n            (node.compareDocumentPosition(nextNode) &\n                Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n            throw new Error(\"Failed to sanitize html because the element is clobbered: \" + ((/** @type {?} */ (node))).outerHTML);\n        }\n        return nextNode;\n    };\n    return SanitizingHtmlSerializer;\n}());\nif (false) {\n    /** @type {?} */\n    SanitizingHtmlSerializer.prototype.sanitizedSomething;\n    /** @type {?} */\n    SanitizingHtmlSerializer.prototype.buf;\n}\n/** @type {?} */\nvar SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n/** @type {?} */\nvar NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param {?} value\n * @return {?}\n */\nfunction encodeEntities(value) {\n    return value.replace(/&/g, '&amp;')\n        .replace(SURROGATE_PAIR_REGEXP, function (match) {\n        /** @type {?} */\n        var hi = match.charCodeAt(0);\n        /** @type {?} */\n        var low = match.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n    })\n        .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\n/** @type {?} */\nvar inertBodyHelper;\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n * @param {?} defaultDoc\n * @param {?} unsafeHtmlInput\n * @return {?}\n */\nexport function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n    /** @type {?} */\n    var inertBodyElement = null;\n    try {\n        inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n        /** @type {?} */\n        var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n        inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        /** @type {?} */\n        var mXSSAttempts = 5;\n        /** @type {?} */\n        var parsedHtml = unsafeHtml;\n        do {\n            if (mXSSAttempts === 0) {\n                throw new Error('Failed to sanitize html because the input is unstable');\n            }\n            mXSSAttempts--;\n            unsafeHtml = parsedHtml;\n            parsedHtml = /** @type {?} */ ((inertBodyElement)).innerHTML;\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        } while (unsafeHtml !== parsedHtml);\n        /** @type {?} */\n        var sanitizer = new SanitizingHtmlSerializer();\n        /** @type {?} */\n        var safeHtml = sanitizer.sanitizeChildren(/** @type {?} */ (getTemplateContent(/** @type {?} */ ((inertBodyElement)))) || inertBodyElement);\n        if (isDevMode() && sanitizer.sanitizedSomething) {\n            console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n        }\n        return safeHtml;\n    }\n    finally {\n        // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n        if (inertBodyElement) {\n            /** @type {?} */\n            var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n            while (parent_1.firstChild) {\n                parent_1.removeChild(parent_1.firstChild);\n            }\n        }\n    }\n}\n/**\n * @param {?} el\n * @return {?}\n */\nexport function getTemplateContent(el) {\n    return 'content' in (/** @type {?} */ (el /** Microsoft/TypeScript#21517 */) /** Microsoft/TypeScript#21517 */) && isTemplateElement(el) ?\n        el.content :\n        null;\n}\n/**\n * @param {?} el\n * @return {?}\n */\nfunction isTemplateElement(el) {\n    return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n}\n//# sourceMappingURL=html_sanitizer.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar I18nMutateOpCode = {\n    SHIFT_REF: 3,\n    SHIFT_PARENT: 17,\n    MASK_OPCODE: 7,\n    MASK_REF: 136,\n    Select: 0,\n    AppendChild: 1,\n    InsertBefore: 2,\n    Remove: 3,\n    Attr: 4,\n    ElementEnd: 5,\n    RemoveNestedIcu: 6,\n};\nexport { I18nMutateOpCode };\n/** *\n * Marks that the next string is for element.\n *\n * See `I18nMutateOpCodes` documentation.\n  @type {?} */\nexport var ELEMENT_MARKER = {\n    marker: 'element'\n};\n/** *\n * Marks that the next string is for comment.\n *\n * See `I18nMutateOpCodes` documentation.\n  @type {?} */\nexport var COMMENT_MARKER = {\n    marker: 'comment'\n};\n/**\n * Array storing OpCode for dynamically creating `i18n` blocks.\n *\n * Example:\n * ```\n * <I18nCreateOpCode>[\n *   // For adding text nodes\n *   // ---------------------\n *   // Equivalent to:\n *   //   const node = lView[index++] = document.createTextNode('abc');\n *   //   lView[1].insertBefore(node, lView[2]);\n *   'abc', 1 << SHIFT_PARENT | 2 << SHIFT_REF | InsertBefore,\n *\n *   // Equivalent to:\n *   //   const node = lView[index++] = document.createTextNode('xyz');\n *   //   lView[1].appendChild(node);\n *   'xyz', 1 << SHIFT_PARENT | AppendChild,\n *\n *   // For adding element nodes\n *   // ---------------------\n *   // Equivalent to:\n *   //   const node = lView[index++] = document.createElement('div');\n *   //   lView[1].insertBefore(node, lView[2]);\n *   ELEMENT_MARKER, 'div', 1 << SHIFT_PARENT | 2 << SHIFT_REF | InsertBefore,\n *\n *   // Equivalent to:\n *   //   const node = lView[index++] = document.createElement('div');\n *   //   lView[1].appendChild(node);\n *   ELEMENT_MARKER, 'div', 1 << SHIFT_PARENT | AppendChild,\n *\n *   // For adding comment nodes\n *   // ---------------------\n *   // Equivalent to:\n *   //   const node = lView[index++] = document.createComment('');\n *   //   lView[1].insertBefore(node, lView[2]);\n *   COMMENT_MARKER, '', 1 << SHIFT_PARENT | 2 << SHIFT_REF | InsertBefore,\n *\n *   // Equivalent to:\n *   //   const node = lView[index++] = document.createComment('');\n *   //   lView[1].appendChild(node);\n *   COMMENT_MARKER, '', 1 << SHIFT_PARENT | AppendChild,\n *\n *   // For moving existing nodes to a different location\n *   // --------------------------------------------------\n *   // Equivalent to:\n *   //   const node = lView[1];\n *   //   lView[2].insertBefore(node, lView[3]);\n *   1 << SHIFT_REF | Select, 2 << SHIFT_PARENT | 3 << SHIFT_REF | InsertBefore,\n *\n *   // Equivalent to:\n *   //   const node = lView[1];\n *   //   lView[2].appendChild(node);\n *   1 << SHIFT_REF | Select, 2 << SHIFT_PARENT | AppendChild,\n *\n *   // For removing existing nodes\n *   // --------------------------------------------------\n *   //   const node = lView[1];\n *   //   removeChild(tView.data(1), node, lView);\n *   1 << SHIFT_REF | Remove,\n *\n *   // For writing attributes\n *   // --------------------------------------------------\n *   //   const node = lView[1];\n *   //   node.setAttribute('attr', 'value');\n *   1 << SHIFT_REF | Select, 'attr', 'value'\n *            // NOTE: Select followed by two string (vs select followed by OpCode)\n * ];\n * ```\n * NOTE:\n *   - `index` is initial location where the extra nodes should be stored in the EXPANDO section of\n * `LVIewData`.\n *\n * See: `applyI18nCreateOpCodes`;\n * @record\n */\nexport function I18nMutateOpCodes() { }\n/** @enum {number} */\nvar I18nUpdateOpCode = {\n    SHIFT_REF: 2,\n    SHIFT_ICU: 17,\n    MASK_OPCODE: 3,\n    MASK_REF: 68,\n    Text: 0,\n    Attr: 1,\n    IcuSwitch: 2,\n    IcuUpdate: 3,\n};\nexport { I18nUpdateOpCode };\n/**\n * Stores DOM operations which need to be applied to update DOM render tree due to changes in\n * expressions.\n *\n * The basic idea is that `i18nExp` OpCodes capture expression changes and update a change\n * mask bit. (Bit 1 for expression 1, bit 2 for expression 2 etc..., bit 32 for expression 32 and\n * higher.) The OpCodes then compare its own change mask against the expression change mask to\n * determine if the OpCodes should execute.\n *\n * These OpCodes can be used by both the i18n block as well as ICU sub-block.\n *\n * ## Example\n *\n * Assume\n * ```\n *   if (rf & RenderFlags.Update) {\n *    i18nExp(bind(ctx.exp1)); // If changed set mask bit 1\n *    i18nExp(bind(ctx.exp2)); // If changed set mask bit 2\n *    i18nExp(bind(ctx.exp3)); // If changed set mask bit 3\n *    i18nExp(bind(ctx.exp4)); // If changed set mask bit 4\n *    i18nApply(0);            // Apply all changes by executing the OpCodes.\n *  }\n * ```\n * We can assume that each call to `i18nExp` sets an internal `changeMask` bit depending on the\n * index of `i18nExp`.\n *\n * OpCodes\n * ```\n * <I18nUpdateOpCodes>[\n *   // The following OpCodes represent: `<div i18n-title=\"pre{{exp1}}in{{exp2}}post\">`\n *   // If `changeMask & 0b11`\n *   //        has changed then execute update OpCodes.\n *   //        has NOT changed then skip `7` values and start processing next OpCodes.\n *   0b11, 7,\n *   // Concatenate `newValue = 'pre'+lView[bindIndex-4]+'in'+lView[bindIndex-3]+'post';`.\n *   'pre', -4, 'in', -3, 'post',\n *   // Update attribute: `elementAttribute(1, 'title', sanitizerFn(newValue));`\n *   1 << SHIFT_REF | Attr, 'title', sanitizerFn,\n *\n *   // The following OpCodes represent: `<div i18n>Hello {{exp3}}!\">`\n *   // If `changeMask & 0b100`\n *   //        has changed then execute update OpCodes.\n *   //        has NOT changed then skip `4` values and start processing next OpCodes.\n *   0b100, 4,\n *   // Concatenate `newValue = 'Hello ' + lView[bindIndex -2] + '!';`.\n *   'Hello ', -2, '!',\n *   // Update text: `lView[1].textContent = newValue;`\n *   1 << SHIFT_REF | Text,\n *\n *   // The following OpCodes represent: `<div i18n>{exp4, plural, ... }\">`\n *   // If `changeMask & 0b1000`\n *   //        has changed then execute update OpCodes.\n *   //        has NOT changed then skip `4` values and start processing next OpCodes.\n *   0b1000, 4,\n *   // Concatenate `newValue = lView[bindIndex -1];`.\n *   -1,\n *   // Switch ICU: `icuSwitchCase(lView[1], 0, newValue);`\n *   0 << SHIFT_ICU | 1 << SHIFT_REF | IcuSwitch,\n *\n *   // Note `changeMask & -1` is always true, so the IcuUpdate will always execute.\n *   -1, 1,\n *   // Update ICU: `icuUpdateCase(lView[1], 0);`\n *   0 << SHIFT_ICU | 1 << SHIFT_REF | IcuUpdate,\n *\n * ];\n * ```\n *\n * @record\n */\nexport function I18nUpdateOpCodes() { }\n/**\n * Store information for the i18n translation block.\n * @record\n */\nexport function TI18n() { }\n/**\n * Number of slots to allocate in expando.\n *\n * This is the max number of DOM elements which will be created by this i18n + ICU blocks. When\n * the DOM elements are being created they are stored in the EXPANDO, so that update OpCodes can\n * write into them.\n * @type {?}\n */\nTI18n.prototype.vars;\n/**\n * Index in EXPANDO where the i18n stores its DOM nodes.\n *\n * When the bindings are processed by the `i18nEnd` instruction it is necessary to know where the\n * newly created DOM nodes will be inserted.\n * @type {?}\n */\nTI18n.prototype.expandoStartIndex;\n/**\n * A set of OpCodes which will create the Text Nodes and ICU anchors for the translation blocks.\n *\n * NOTE: The ICU anchors are filled in with ICU Update OpCode.\n * @type {?}\n */\nTI18n.prototype.create;\n/**\n * A set of OpCodes which will be executed on each change detection to determine if any changes to\n * DOM are required.\n * @type {?}\n */\nTI18n.prototype.update;\n/**\n * A list of ICUs in a translation block (or `null` if block has no ICUs).\n *\n * Example:\n * Given: `<div i18n>You have {count, plural, ...} and {state, switch, ...}</div>`\n * There would be 2 ICUs in this array.\n *   1. `{count, plural, ...}`\n *   2. `{state, switch, ...}`\n * @type {?}\n */\nTI18n.prototype.icus;\n/** @enum {number} */\nvar IcuType = {\n    select: 0,\n    plural: 1,\n};\nexport { IcuType };\n/**\n * @record\n */\nexport function TIcu() { }\n/**\n * Defines the ICU type of `select` or `plural`\n * @type {?}\n */\nTIcu.prototype.type;\n/**\n * Number of slots to allocate in expando for each case.\n *\n * This is the max number of DOM elements which will be created by this i18n + ICU blocks. When\n * the DOM elements are being created they are stored in the EXPANDO, so that update OpCodes can\n * write into them.\n * @type {?}\n */\nTIcu.prototype.vars;\n/**\n * An optional array of child/sub ICUs.\n *\n * In case of nested ICUs such as:\n * ```\n * {�0�, plural,\n *   =0 {zero}\n *   other {�0� {�1�, select,\n *                     cat {cats}\n *                     dog {dogs}\n *                     other {animals}\n *                   }!\n *   }\n * }\n * ```\n * When the parent ICU is changing it must clean up child ICUs as well. For this reason it needs\n * to know which child ICUs to run clean up for as well.\n *\n * In the above example this would be:\n * ```\n * [\n *   [],   // `=0` has no sub ICUs\n *   [1],  // `other` has one subICU at `1`st index.\n * ]\n * ```\n *\n * The reason why it is Array of Arrays is because first array represents the case, and second\n * represents the child ICUs to clean up. There may be more than one child ICUs per case.\n * @type {?}\n */\nTIcu.prototype.childIcus;\n/**\n * Index in EXPANDO where the i18n stores its DOM nodes.\n *\n * When the bindings are processed by the `i18nEnd` instruction it is necessary to know where the\n * newly created DOM nodes will be inserted.\n * @type {?}\n */\nTIcu.prototype.expandoStartIndex;\n/**\n * A list of case values which the current ICU will try to match.\n *\n * The last value is `other`\n * @type {?}\n */\nTIcu.prototype.cases;\n/**\n * A set of OpCodes to apply in order to build up the DOM render tree for the ICU\n * @type {?}\n */\nTIcu.prototype.create;\n/**\n * A set of OpCodes to apply in order to destroy the DOM render tree for the ICU.\n * @type {?}\n */\nTIcu.prototype.remove;\n/**\n * A set of OpCodes to apply in order to update the DOM render tree for the ICU bindings.\n * @type {?}\n */\nTIcu.prototype.update;\n/** @type {?} */\nexport var unusedValueExportToPlacateAjd = 1;\n//# sourceMappingURL=i18n.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { SRCSET_ATTRS, URI_ATTRS, VALID_ATTRS, VALID_ELEMENTS, getTemplateContent } from '../sanitization/html_sanitizer';\nimport { InertBodyHelper } from '../sanitization/inert_body';\nimport { _sanitizeUrl, sanitizeSrcset } from '../sanitization/url_sanitizer';\nimport { assertDefined, assertEqual, assertGreaterThan } from './assert';\nimport { allocExpando, createNodeAtIndex, elementAttribute, load, textBinding } from './instructions';\nimport { NATIVE, RENDER_PARENT } from './interfaces/container';\nimport { COMMENT_MARKER, ELEMENT_MARKER } from './interfaces/i18n';\nimport { BINDING_INDEX, HEADER_OFFSET, HOST_NODE, RENDERER, TVIEW } from './interfaces/view';\nimport { appendChild, createTextNode, removeChild } from './node_manipulation';\nimport { getIsParent, getLView, getPreviousOrParentTNode, setIsParent, setPreviousOrParentTNode } from './state';\nimport { NO_CHANGE } from './tokens';\nimport { addAllToArray, getNativeByIndex, getNativeByTNode, getTNode, isLContainer, stringify } from './util';\n/** @type {?} */\nvar MARKER = \"\\uFFFD\";\n/** @type {?} */\nvar ICU_BLOCK_REGEX = /^\\s*(�\\d+�)\\s*,\\s*(select|plural)\\s*,/;\n/** @type {?} */\nvar SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n/** @type {?} */\nvar PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n/** @type {?} */\nvar BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n/** @type {?} */\nvar ICU_REGEXP = /({\\s*�\\d+�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n/** @type {?} */\nvar PP_PLACEHOLDERS = /\\[(�.+?�?)\\]/g;\n/** @type {?} */\nvar PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n/** @type {?} */\nvar PP_ICUS = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n/**\n * @record\n */\nfunction IcuExpression() { }\n/** @type {?} */\nIcuExpression.prototype.type;\n/** @type {?} */\nIcuExpression.prototype.mainBinding;\n/** @type {?} */\nIcuExpression.prototype.cases;\n/** @type {?} */\nIcuExpression.prototype.values;\n/**\n * @record\n */\nfunction IcuCase() { }\n/**\n * Number of slots to allocate in expando for this case.\n *\n * This is the max number of DOM elements which will be created by this i18n + ICU blocks. When\n * the DOM elements are being created they are stored in the EXPANDO, so that update OpCodes can\n * write into them.\n * @type {?}\n */\nIcuCase.prototype.vars;\n/**\n * An optional array of child/sub ICUs.\n * @type {?}\n */\nIcuCase.prototype.childIcus;\n/**\n * A set of OpCodes to apply in order to build up the DOM render tree for the ICU\n * @type {?}\n */\nIcuCase.prototype.create;\n/**\n * A set of OpCodes to apply in order to destroy the DOM render tree for the ICU.\n * @type {?}\n */\nIcuCase.prototype.remove;\n/**\n * A set of OpCodes to apply in order to update the DOM render tree for the ICU bindings.\n * @type {?}\n */\nIcuCase.prototype.update;\n/**\n * Breaks pattern into strings and top level {...} blocks.\n * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n * keys and cases.\n * Original code from closure library, modified for Angular.\n *\n * @param {?} pattern (sub)Pattern to be broken.\n *\n * @return {?}\n */\nfunction extractParts(pattern) {\n    if (!pattern) {\n        return [];\n    }\n    /** @type {?} */\n    var prevPos = 0;\n    /** @type {?} */\n    var braceStack = [];\n    /** @type {?} */\n    var results = [];\n    /** @type {?} */\n    var braces = /[{}]/g;\n    // lastIndex doesn't get set to 0 so we have to.\n    braces.lastIndex = 0;\n    /** @type {?} */\n    var match;\n    while (match = braces.exec(pattern)) {\n        /** @type {?} */\n        var pos = match.index;\n        if (match[0] == '}') {\n            braceStack.pop();\n            if (braceStack.length == 0) {\n                /** @type {?} */\n                var block = pattern.substring(prevPos, pos);\n                if (ICU_BLOCK_REGEX.test(block)) {\n                    results.push(parseICUBlock(block));\n                }\n                else if (block) { // Don't push empty strings\n                    // Don't push empty strings\n                    results.push(block);\n                }\n                prevPos = pos + 1;\n            }\n        }\n        else {\n            if (braceStack.length == 0) {\n                /** @type {?} */\n                var substring_1 = pattern.substring(prevPos, pos);\n                results.push(substring_1);\n                prevPos = pos + 1;\n            }\n            braceStack.push('{');\n        }\n    }\n    /** @type {?} */\n    var substring = pattern.substring(prevPos);\n    if (substring != '') {\n        results.push(substring);\n    }\n    return results;\n}\n/**\n * Parses text containing an ICU expression and produces a JSON object for it.\n * Original code from closure library, modified for Angular.\n *\n * @param {?} pattern Text containing an ICU expression that needs to be parsed.\n *\n * @return {?}\n */\nfunction parseICUBlock(pattern) {\n    /** @type {?} */\n    var cases = [];\n    /** @type {?} */\n    var values = [];\n    /** @type {?} */\n    var icuType = 1 /* plural */;\n    /** @type {?} */\n    var mainBinding = 0;\n    pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n        if (type === 'select') {\n            icuType = 0 /* select */;\n        }\n        else {\n            icuType = 1 /* plural */;\n        }\n        mainBinding = parseInt(binding.substr(1), 10);\n        return '';\n    });\n    /** @type {?} */\n    var parts = /** @type {?} */ (extractParts(pattern));\n    // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n    for (var pos = 0; pos < parts.length;) {\n        /** @type {?} */\n        var key = parts[pos++].trim();\n        if (icuType === 1 /* plural */) {\n            // Key can be \"=x\", we just want \"x\"\n            key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n        }\n        if (key.length) {\n            cases.push(key);\n        }\n        /** @type {?} */\n        var blocks = /** @type {?} */ (extractParts(parts[pos++]));\n        if (blocks.length) {\n            values.push(blocks);\n        }\n    }\n    assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n    // TODO(ocombe): support ICU expressions in attributes, see #21615\n    return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n}\n/**\n * Removes everything inside the sub-templates of a message.\n * @param {?} message\n * @return {?}\n */\nfunction removeInnerTemplateTranslation(message) {\n    /** @type {?} */\n    var match;\n    /** @type {?} */\n    var res = '';\n    /** @type {?} */\n    var index = 0;\n    /** @type {?} */\n    var inTemplate = false;\n    /** @type {?} */\n    var tagMatched;\n    while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n        if (!inTemplate) {\n            res += message.substring(index, match.index + match[0].length);\n            tagMatched = match[1];\n            inTemplate = true;\n        }\n        else {\n            if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                index = match.index;\n                inTemplate = false;\n            }\n        }\n    }\n    ngDevMode &&\n        assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n    res += message.substr(index);\n    return res;\n}\n/**\n * Extracts a part of a message and removes the rest.\n *\n * This method is used for extracting a part of the message associated with a template. A translated\n * message can span multiple templates.\n *\n * Example:\n * ```\n * <div i18n>Translate <span *ngIf>me</span>!</div>\n * ```\n *\n * @param {?} message The message to crop\n * @param {?=} subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n * external template and removes all sub-templates.\n * @return {?}\n */\nexport function getTranslationForTemplate(message, subTemplateIndex) {\n    if (typeof subTemplateIndex !== 'number') {\n        // We want the root template message, ignore all sub-templates\n        return removeInnerTemplateTranslation(message);\n    }\n    else {\n        /** @type {?} */\n        var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n        /** @type {?} */\n        var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n        return removeInnerTemplateTranslation(message.substring(start, end));\n    }\n}\n/**\n * Generate the OpCodes to update the bindings of a string.\n *\n * @param {?} str The string containing the bindings.\n * @param {?} destinationNode Index of the destination node which will receive the binding.\n * @param {?=} attrName Name of the attribute, if the string belongs to an attribute.\n * @param {?=} sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n * @return {?}\n */\nfunction generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n    if (sanitizeFn === void 0) { sanitizeFn = null; }\n    /** @type {?} */\n    var updateOpCodes = [null, null];\n    /** @type {?} */\n    var textParts = str.split(BINDING_REGEXP);\n    /** @type {?} */\n    var mask = 0;\n    for (var j = 0; j < textParts.length; j++) {\n        /** @type {?} */\n        var textValue = textParts[j];\n        if (j & 1) {\n            /** @type {?} */\n            var bindingIndex = parseInt(textValue, 10);\n            updateOpCodes.push(-1 - bindingIndex);\n            mask = mask | toMaskBit(bindingIndex);\n        }\n        else if (textValue !== '') {\n            // Even indexes are text\n            updateOpCodes.push(textValue);\n        }\n    }\n    updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n        (attrName ? 1 /* Attr */ : 0 /* Text */));\n    if (attrName) {\n        updateOpCodes.push(attrName, sanitizeFn);\n    }\n    updateOpCodes[0] = mask;\n    updateOpCodes[1] = updateOpCodes.length - 2;\n    return updateOpCodes;\n}\n/**\n * @param {?} icuExpression\n * @param {?=} mask\n * @return {?}\n */\nfunction getBindingMask(icuExpression, mask) {\n    if (mask === void 0) { mask = 0; }\n    mask = mask | toMaskBit(icuExpression.mainBinding);\n    /** @type {?} */\n    var match;\n    for (var i = 0; i < icuExpression.values.length; i++) {\n        /** @type {?} */\n        var valueArr = icuExpression.values[i];\n        for (var j = 0; j < valueArr.length; j++) {\n            /** @type {?} */\n            var value = valueArr[j];\n            if (typeof value === 'string') {\n                while (match = BINDING_REGEXP.exec(value)) {\n                    mask = mask | toMaskBit(parseInt(match[1], 10));\n                }\n            }\n            else {\n                mask = getBindingMask(/** @type {?} */ (value), mask);\n            }\n        }\n    }\n    return mask;\n}\n/** @type {?} */\nvar i18nIndexStack = [];\n/** @type {?} */\nvar i18nIndexStackPointer = -1;\n/**\n * Convert binding index to mask bit.\n *\n * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n * that we will execute binding code more often than necessary. (penalty of performance)\n * @param {?} bindingIndex\n * @return {?}\n */\nfunction toMaskBit(bindingIndex) {\n    return 1 << Math.min(bindingIndex, 31);\n}\n/** @type {?} */\nvar parentIndexStack = [];\n/**\n * Marks a block of text as translatable.\n *\n * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n * The translation `message` is the value which is locale specific. The translation string may\n * contain placeholders which associate inner elements and sub-templates within the translation.\n *\n * The translation `message` placeholders are:\n * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n *   `block` that matches the sub-template in which it was declared.\n * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n *   and end of DOM element that were embedded in the original translation block. The placeholder\n *   `index` points to the element index in the template instructions set. An optional `block` that\n *   matches the sub-template in which it was declared.\n * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n *   split up and translated separately in each angular template function. The `index` points to the\n *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n *\n * @param {?} index A unique index of the translation in the static block.\n * @param {?} message The translation message.\n * @param {?=} subTemplateIndex Optional sub-template index in the `message`.\n * @return {?}\n */\nexport function i18nStart(index, message, subTemplateIndex) {\n    /** @type {?} */\n    var tView = getLView()[TVIEW];\n    ngDevMode && assertDefined(tView, \"tView should be defined\");\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n    if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n        i18nStartFirstPass(tView, index, message, subTemplateIndex);\n    }\n}\n/**\n * See `i18nStart` above.\n * @param {?} tView\n * @param {?} index\n * @param {?} message\n * @param {?=} subTemplateIndex\n * @return {?}\n */\nfunction i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n    i18nIndexStack[++i18nIndexStackPointer] = index;\n    /** @type {?} */\n    var viewData = getLView();\n    /** @type {?} */\n    var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n    /** @type {?} */\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    /** @type {?} */\n    var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n        previousOrParentTNode && previousOrParentTNode.parent;\n    /** @type {?} */\n    var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n        parentTNode.index - HEADER_OFFSET :\n        index;\n    /** @type {?} */\n    var parentIndexPointer = 0;\n    parentIndexStack[parentIndexPointer] = parentIndex;\n    /** @type {?} */\n    var createOpCodes = [];\n    // If the previous node wasn't the direct parent then we have a translation without top level\n    // element and we need to keep a reference of the previous element if there is one\n    if (index > 0 && previousOrParentTNode !== parentTNode) {\n        // Create an OpCode to select the previous TNode\n        createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n    }\n    /** @type {?} */\n    var updateOpCodes = [];\n    /** @type {?} */\n    var icuExpressions = [];\n    /** @type {?} */\n    var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n    /** @type {?} */\n    var msgParts = templateTranslation.split(PH_REGEXP);\n    for (var i = 0; i < msgParts.length; i++) {\n        /** @type {?} */\n        var value = msgParts[i];\n        if (i & 1) {\n            // Odd indexes are placeholders (elements and sub-templates)\n            if (value.charAt(0) === '/') {\n                // It is a closing tag\n                if (value.charAt(1) === '#') {\n                    /** @type {?} */\n                    var phIndex = parseInt(value.substr(2), 10);\n                    parentIndex = parentIndexStack[--parentIndexPointer];\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                }\n            }\n            else {\n                /** @type {?} */\n                var phIndex = parseInt(value.substr(1), 10);\n                // The value represents a placeholder that we move to the designated index\n                createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                if (value.charAt(0) === '#') {\n                    parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                }\n            }\n        }\n        else {\n            /** @type {?} */\n            var parts = value.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // Create the comment node that will anchor the ICU expression\n                    allocExpando(viewData);\n                    /** @type {?} */\n                    var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                    createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    /** @type {?} */\n                    var icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n                    /** @type {?} */\n                    var mask = getBindingMask(icuExpression);\n                    icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                    /** @type {?} */\n                    var tIcuIndex = icuExpressions.length - 1;\n                    updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                    3, // skip 3 opCodes if not changed\n                    // skip 3 opCodes if not changed\n                    -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                    2, // skip 2 opCodes if not changed\n                    // skip 2 opCodes if not changed\n                    icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                }\n                else if (value !== '') {\n                    /** @type {?} */\n                    var hasBinding = value.match(BINDING_REGEXP);\n                    // Create text nodes\n                    allocExpando(viewData);\n                    createOpCodes.push(\n                    // If there is a binding, the value will be set during update\n                    hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                    }\n                }\n            }\n        }\n    }\n    /** @type {?} */\n    var tI18n = {\n        vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n        expandoStartIndex: expandoStartIndex,\n        create: createOpCodes,\n        update: updateOpCodes,\n        icus: icuExpressions.length ? icuExpressions : null,\n    };\n    tView.data[index + HEADER_OFFSET] = tI18n;\n}\n/**\n * @param {?} tNode\n * @param {?} parentTNode\n * @param {?} previousTNode\n * @return {?}\n */\nfunction appendI18nNode(tNode, parentTNode, previousTNode) {\n    ngDevMode && ngDevMode.rendererMoveNode++;\n    /** @type {?} */\n    var viewData = getLView();\n    if (!previousTNode) {\n        previousTNode = parentTNode;\n    }\n    // re-organize node tree to put this node in the correct position.\n    if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n        tNode.next = parentTNode.child;\n        parentTNode.child = tNode;\n    }\n    else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n        tNode.next = previousTNode.next;\n        previousTNode.next = tNode;\n    }\n    else {\n        tNode.next = null;\n    }\n    if (parentTNode !== viewData[HOST_NODE]) {\n        tNode.parent = /** @type {?} */ (parentTNode);\n    }\n    appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n    /** @type {?} */\n    var slotValue = viewData[tNode.index];\n    if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n        // Nodes that inject ViewContainerRef also have a comment node that should be moved\n        appendChild(slotValue[NATIVE], tNode, viewData);\n    }\n    return tNode;\n}\n/**\n * Handles message string post-processing for internationalization.\n *\n * Handles message string post-processing by transforming it from intermediate\n * format (that might contain some markers that we need to replace) to the final\n * form, consumable by i18nStart instruction. Post processing steps include:\n *\n * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n *    in case multiple ICUs have the same placeholder name\n *\n * \\@publicAPI\n * @param {?} message Raw translation string for post processing\n * @param {?} replacements Set of replacements that should be applied\n *\n * @return {?} Transformed string that can be consumed by i18nStart instruction\n *\n */\nexport function i18nPostprocess(message, replacements) {\n    /** @type {?} */\n    var matches = {};\n    /** @type {?} */\n    var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n        if (!matches[content]) {\n            matches[content] = content.split('|');\n        }\n        if (!matches[content].length) {\n            throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n        }\n        return /** @type {?} */ ((matches[content].shift()));\n    });\n    /** @type {?} */\n    var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n    if (hasUnmatchedValues) {\n        throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n    }\n    // return current result if no replacements specified\n    if (!Object.keys(replacements).length) {\n        return result;\n    }\n    //\n    // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n    //\n    result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n        return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n    });\n    //\n    // Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n    // in case multiple ICUs have the same placeholder name\n    //\n    result = result.replace(PP_ICUS, function (match, key) {\n        if (replacements.hasOwnProperty(key)) {\n            /** @type {?} */\n            var list = /** @type {?} */ (replacements[key]);\n            if (!list.length) {\n                throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n            }\n            return /** @type {?} */ ((list.shift()));\n        }\n        return match;\n    });\n    return result;\n}\n/**\n * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n * @return {?}\n */\nexport function i18nEnd() {\n    /** @type {?} */\n    var tView = getLView()[TVIEW];\n    ngDevMode && assertDefined(tView, \"tView should be defined\");\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n    if (tView.firstTemplatePass) {\n        i18nEndFirstPass(tView);\n    }\n}\n/**\n * See `i18nEnd` above.\n * @param {?} tView\n * @return {?}\n */\nfunction i18nEndFirstPass(tView) {\n    /** @type {?} */\n    var viewData = getLView();\n    ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n    /** @type {?} */\n    var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n    /** @type {?} */\n    var tI18n = /** @type {?} */ (tView.data[rootIndex + HEADER_OFFSET]);\n    ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n    /** @type {?} */\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    /** @type {?} */\n    var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n    // Remove deleted placeholders\n    // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n    for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n        if (visitedPlaceholders.indexOf(i) === -1) {\n            removeNode(i, viewData);\n        }\n    }\n}\n/**\n * @param {?} index\n * @param {?} createOpCodes\n * @param {?} expandoStartIndex\n * @param {?} viewData\n * @return {?}\n */\nfunction readCreateOpCodes(index, createOpCodes, expandoStartIndex, viewData) {\n    /** @type {?} */\n    var renderer = getLView()[RENDERER];\n    /** @type {?} */\n    var currentTNode = null;\n    /** @type {?} */\n    var previousTNode = null;\n    /** @type {?} */\n    var visitedPlaceholders = [];\n    for (var i = 0; i < createOpCodes.length; i++) {\n        /** @type {?} */\n        var opCode = createOpCodes[i];\n        if (typeof opCode == 'string') {\n            /** @type {?} */\n            var textRNode = createTextNode(opCode, renderer);\n            ngDevMode && ngDevMode.rendererCreateTextNode++;\n            previousTNode = currentTNode;\n            currentTNode =\n                createNodeAtIndex(expandoStartIndex++, 3 /* Element */, textRNode, null, null);\n            setIsParent(false);\n        }\n        else if (typeof opCode == 'number') {\n            switch (opCode & 7 /* MASK_OPCODE */) {\n                case 1 /* AppendChild */:\n                    /** @type {?} */\n                    var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                    /** @type {?} */\n                    var destinationTNode = void 0;\n                    if (destinationNodeIndex === index) {\n                        // If the destination node is `i18nStart`, we don't have a\n                        // top-level node and we should use the host node instead\n                        destinationTNode = /** @type {?} */ ((viewData[HOST_NODE]));\n                    }\n                    else {\n                        destinationTNode = getTNode(destinationNodeIndex, viewData);\n                    }\n                    ngDevMode &&\n                        assertDefined(/** @type {?} */ ((currentTNode)), \"You need to create or select a node before you can insert it into the DOM\");\n                    previousTNode = appendI18nNode(/** @type {?} */ ((currentTNode)), destinationTNode, previousTNode);\n                    destinationTNode.next = null;\n                    break;\n                case 0 /* Select */:\n                    /** @type {?} */\n                    var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                    visitedPlaceholders.push(nodeIndex);\n                    previousTNode = currentTNode;\n                    currentTNode = getTNode(nodeIndex, viewData);\n                    if (currentTNode) {\n                        setPreviousOrParentTNode(currentTNode);\n                        if (currentTNode.type === 3 /* Element */) {\n                            setIsParent(true);\n                        }\n                    }\n                    break;\n                case 5 /* ElementEnd */:\n                    /** @type {?} */\n                    var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                    previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                    setPreviousOrParentTNode(currentTNode);\n                    setIsParent(false);\n                    break;\n                case 4 /* Attr */:\n                    /** @type {?} */\n                    var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                    /** @type {?} */\n                    var attrName = /** @type {?} */ (createOpCodes[++i]);\n                    /** @type {?} */\n                    var attrValue = /** @type {?} */ (createOpCodes[++i]);\n                    elementAttribute(elementNodeIndex, attrName, attrValue);\n                    break;\n                default:\n                    throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n            }\n        }\n        else {\n            switch (opCode) {\n                case COMMENT_MARKER:\n                    /** @type {?} */\n                    var commentValue = /** @type {?} */ (createOpCodes[++i]);\n                    ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                    /** @type {?} */\n                    var commentRNode = renderer.createComment(commentValue);\n                    ngDevMode && ngDevMode.rendererCreateComment++;\n                    previousTNode = currentTNode;\n                    currentTNode = createNodeAtIndex(expandoStartIndex++, 5 /* IcuContainer */, commentRNode, null, null);\n                    (/** @type {?} */ (currentTNode)).activeCaseIndex = null;\n                    // We will add the case nodes later, during the update phase\n                    setIsParent(false);\n                    break;\n                case ELEMENT_MARKER:\n                    /** @type {?} */\n                    var tagNameValue = /** @type {?} */ (createOpCodes[++i]);\n                    ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                    /** @type {?} */\n                    var elementRNode = renderer.createElement(tagNameValue);\n                    ngDevMode && ngDevMode.rendererCreateElement++;\n                    previousTNode = currentTNode;\n                    currentTNode = createNodeAtIndex(expandoStartIndex++, 3 /* Element */, elementRNode, tagNameValue, null);\n                    break;\n                default:\n                    throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n            }\n        }\n    }\n    setIsParent(false);\n    return visitedPlaceholders;\n}\n/**\n * @param {?} updateOpCodes\n * @param {?} icus\n * @param {?} bindingsStartIndex\n * @param {?} changeMask\n * @param {?} viewData\n * @param {?=} bypassCheckBit\n * @return {?}\n */\nfunction readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n    if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n    /** @type {?} */\n    var caseCreated = false;\n    for (var i = 0; i < updateOpCodes.length; i++) {\n        /** @type {?} */\n        var checkBit = /** @type {?} */ (updateOpCodes[i]);\n        /** @type {?} */\n        var skipCodes = /** @type {?} */ (updateOpCodes[++i]);\n        if (bypassCheckBit || (checkBit & changeMask)) {\n            /** @type {?} */\n            var value = '';\n            for (var j = i + 1; j <= (i + skipCodes); j++) {\n                /** @type {?} */\n                var opCode = updateOpCodes[j];\n                if (typeof opCode == 'string') {\n                    value += opCode;\n                }\n                else if (typeof opCode == 'number') {\n                    if (opCode < 0) {\n                        // It's a binding index whose value is negative\n                        value += stringify(viewData[bindingsStartIndex - opCode]);\n                    }\n                    else {\n                        /** @type {?} */\n                        var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                        switch (opCode & 3 /* MASK_OPCODE */) {\n                            case 1 /* Attr */:\n                                /** @type {?} */\n                                var attrName = /** @type {?} */ (updateOpCodes[++j]);\n                                /** @type {?} */\n                                var sanitizeFn = /** @type {?} */ (updateOpCodes[++j]);\n                                elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                break;\n                            case 0 /* Text */:\n                                textBinding(nodeIndex, value);\n                                break;\n                            case 2 /* IcuSwitch */:\n                                /** @type {?} */\n                                var tIcuIndex = /** @type {?} */ (updateOpCodes[++j]);\n                                /** @type {?} */\n                                var tIcu = /** @type {?} */ ((icus))[tIcuIndex];\n                                /** @type {?} */\n                                var icuTNode = /** @type {?} */ (getTNode(nodeIndex, viewData));\n                                // If there is an active case, delete the old nodes\n                                if (icuTNode.activeCaseIndex !== null) {\n                                    /** @type {?} */\n                                    var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                    for (var k = 0; k < removeCodes.length; k++) {\n                                        /** @type {?} */\n                                        var removeOpCode = /** @type {?} */ (removeCodes[k]);\n                                        switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                            case 3 /* Remove */:\n                                                /** @type {?} */\n                                                var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                removeNode(nodeIndex_1, viewData);\n                                                break;\n                                            case 6 /* RemoveNestedIcu */:\n                                                /** @type {?} */\n                                                var nestedIcuNodeIndex = /** @type {?} */ (removeCodes[k + 1]) >>> 3 /* SHIFT_REF */;\n                                                /** @type {?} */\n                                                var nestedIcuTNode = /** @type {?} */ (getTNode(nestedIcuNodeIndex, viewData));\n                                                /** @type {?} */\n                                                var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                if (activeIndex !== null) {\n                                                    /** @type {?} */\n                                                    var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    /** @type {?} */\n                                                    var nestedTIcu = /** @type {?} */ ((icus))[nestedIcuTIndex];\n                                                    addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                }\n                                                break;\n                                        }\n                                    }\n                                }\n                                /** @type {?} */\n                                var caseIndex = getCaseIndex(tIcu, value);\n                                icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                // Add the nodes for the new case\n                                readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                                caseCreated = true;\n                                break;\n                            case 3 /* IcuUpdate */:\n                                tIcuIndex = /** @type {?} */ (updateOpCodes[++j]);\n                                tIcu = /** @type {?} */ ((icus))[tIcuIndex];\n                                icuTNode = /** @type {?} */ (getTNode(nodeIndex, viewData));\n                                readUpdateOpCodes(tIcu.update[/** @type {?} */ ((icuTNode.activeCaseIndex))], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                break;\n                        }\n                    }\n                }\n            }\n        }\n        i += skipCodes;\n    }\n}\n/**\n * @param {?} index\n * @param {?} viewData\n * @return {?}\n */\nfunction removeNode(index, viewData) {\n    /** @type {?} */\n    var removedPhTNode = getTNode(index, viewData);\n    /** @type {?} */\n    var removedPhRNode = getNativeByIndex(index, viewData);\n    removeChild(removedPhTNode, removedPhRNode || null, viewData);\n    removedPhTNode.detached = true;\n    ngDevMode && ngDevMode.rendererRemoveNode++;\n    /** @type {?} */\n    var slotValue = /** @type {?} */ (load(index));\n    if (isLContainer(slotValue)) {\n        /** @type {?} */\n        var lContainer = /** @type {?} */ (slotValue);\n        if (removedPhTNode.type !== 0 /* Container */) {\n            removeChild(removedPhTNode, lContainer[NATIVE] || null, viewData);\n        }\n        lContainer[RENDER_PARENT] = null;\n    }\n}\n/**\n *\n * Use this instruction to create a translation block that doesn't contain any placeholder.\n * It calls both {\\@link i18nStart} and {\\@link i18nEnd} in one instruction.\n *\n * The translation `message` is the value which is locale specific. The translation string may\n * contain placeholders which associate inner elements and sub-templates within the translation.\n *\n * The translation `message` placeholders are:\n * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n *   `block` that matches the sub-template in which it was declared.\n * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n *   and end of DOM element that were embedded in the original translation block. The placeholder\n *   `index` points to the element index in the template instructions set. An optional `block` that\n *   matches the sub-template in which it was declared.\n * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n *   split up and translated separately in each angular template function. The `index` points to the\n *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n *\n * @param {?} index A unique index of the translation in the static block.\n * @param {?} message The translation message.\n * @param {?=} subTemplateIndex Optional sub-template index in the `message`.\n * @return {?}\n */\nexport function i18n(index, message, subTemplateIndex) {\n    i18nStart(index, message, subTemplateIndex);\n    i18nEnd();\n}\n/**\n * Marks a list of attributes as translatable.\n *\n * @param {?} index A unique index in the static block\n * @param {?} values\n * @return {?}\n */\nexport function i18nAttributes(index, values) {\n    /** @type {?} */\n    var tView = getLView()[TVIEW];\n    ngDevMode && assertDefined(tView, \"tView should be defined\");\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n    if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n        i18nAttributesFirstPass(tView, index, values);\n    }\n}\n/**\n * See `i18nAttributes` above.\n * @param {?} tView\n * @param {?} index\n * @param {?} values\n * @return {?}\n */\nfunction i18nAttributesFirstPass(tView, index, values) {\n    /** @type {?} */\n    var previousElement = getPreviousOrParentTNode();\n    /** @type {?} */\n    var previousElementIndex = previousElement.index - HEADER_OFFSET;\n    /** @type {?} */\n    var updateOpCodes = [];\n    for (var i = 0; i < values.length; i += 2) {\n        /** @type {?} */\n        var attrName = values[i];\n        /** @type {?} */\n        var message = values[i + 1];\n        /** @type {?} */\n        var parts = message.split(ICU_REGEXP);\n        for (var j = 0; j < parts.length; j++) {\n            /** @type {?} */\n            var value = parts[j];\n            if (j & 1) {\n                // Odd indexes are ICU expressions\n                // TODO(ocombe): support ICU expressions in attributes\n            }\n            else if (value !== '') {\n                /** @type {?} */\n                var hasBinding = !!value.match(BINDING_REGEXP);\n                if (hasBinding) {\n                    addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                }\n                else {\n                    elementAttribute(previousElementIndex, attrName, value);\n                }\n            }\n        }\n    }\n    tView.data[index + HEADER_OFFSET] = updateOpCodes;\n}\n/** @type {?} */\nvar changeMask = 0;\n/** @type {?} */\nvar shiftsCounter = 0;\n/**\n * Stores the values of the bindings during each update cycle in order to determine if we need to\n * update the translated nodes.\n *\n * @template T\n * @param {?} expression The binding's new value or NO_CHANGE\n * @return {?}\n */\nexport function i18nExp(expression) {\n    if (expression !== NO_CHANGE) {\n        changeMask = changeMask | (1 << shiftsCounter);\n    }\n    shiftsCounter++;\n}\n/**\n * Updates a translation block or an i18n attribute when the bindings have changed.\n *\n * @param {?} index Index of either {\\@link i18nStart} (translation block) or {\\@link i18nAttributes}\n * (i18n attribute) on which it should update the content.\n * @return {?}\n */\nexport function i18nApply(index) {\n    if (shiftsCounter) {\n        /** @type {?} */\n        var lView = getLView();\n        /** @type {?} */\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        /** @type {?} */\n        var tI18n = tView.data[index + HEADER_OFFSET];\n        /** @type {?} */\n        var updateOpCodes = void 0;\n        /** @type {?} */\n        var icus = null;\n        if (Array.isArray(tI18n)) {\n            updateOpCodes = /** @type {?} */ (tI18n);\n        }\n        else {\n            updateOpCodes = (/** @type {?} */ (tI18n)).update;\n            icus = (/** @type {?} */ (tI18n)).icus;\n        }\n        /** @type {?} */\n        var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n        readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n        // Reset changeMask & maskBit to default for the next update cycle\n        changeMask = 0;\n        shiftsCounter = 0;\n    }\n}\n/** @enum {number} */\nvar Plural = {\n    Zero: 0,\n    One: 1,\n    Two: 2,\n    Few: 3,\n    Many: 4,\n    Other: 5,\n};\nPlural[Plural.Zero] = 'Zero';\nPlural[Plural.One] = 'One';\nPlural[Plural.Two] = 'Two';\nPlural[Plural.Few] = 'Few';\nPlural[Plural.Many] = 'Many';\nPlural[Plural.Other] = 'Other';\n/**\n * Returns the plural case based on the locale.\n * This is a copy of the deprecated function that we used in Angular v4.\n * // TODO(ocombe): remove this once we can the real getPluralCase function\n *\n * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n * @param {?} locale\n * @param {?} nLike\n * @return {?}\n */\nfunction getPluralCase(locale, nLike) {\n    if (typeof nLike === 'string') {\n        nLike = parseInt(/** @type {?} */ (nLike), 10);\n    }\n    /** @type {?} */\n    var n = /** @type {?} */ (nLike);\n    /** @type {?} */\n    var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n    /** @type {?} */\n    var i = Math.floor(Math.abs(n));\n    /** @type {?} */\n    var v = nDecimal.length;\n    /** @type {?} */\n    var f = parseInt(nDecimal, 10);\n    /** @type {?} */\n    var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n    /** @type {?} */\n    var lang = locale.split('-')[0].toLowerCase();\n    switch (lang) {\n        case 'af':\n        case 'asa':\n        case 'az':\n        case 'bem':\n        case 'bez':\n        case 'bg':\n        case 'brx':\n        case 'ce':\n        case 'cgg':\n        case 'chr':\n        case 'ckb':\n        case 'ee':\n        case 'el':\n        case 'eo':\n        case 'es':\n        case 'eu':\n        case 'fo':\n        case 'fur':\n        case 'gsw':\n        case 'ha':\n        case 'haw':\n        case 'hu':\n        case 'jgo':\n        case 'jmc':\n        case 'ka':\n        case 'kk':\n        case 'kkj':\n        case 'kl':\n        case 'ks':\n        case 'ksb':\n        case 'ky':\n        case 'lb':\n        case 'lg':\n        case 'mas':\n        case 'mgo':\n        case 'ml':\n        case 'mn':\n        case 'nb':\n        case 'nd':\n        case 'ne':\n        case 'nn':\n        case 'nnh':\n        case 'nyn':\n        case 'om':\n        case 'or':\n        case 'os':\n        case 'ps':\n        case 'rm':\n        case 'rof':\n        case 'rwk':\n        case 'saq':\n        case 'seh':\n        case 'sn':\n        case 'so':\n        case 'sq':\n        case 'ta':\n        case 'te':\n        case 'teo':\n        case 'tk':\n        case 'tr':\n        case 'ug':\n        case 'uz':\n        case 'vo':\n        case 'vun':\n        case 'wae':\n        case 'xog':\n            if (n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'ak':\n        case 'ln':\n        case 'mg':\n        case 'pa':\n        case 'ti':\n            if (n === Math.floor(n) && n >= 0 && n <= 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'am':\n        case 'as':\n        case 'bn':\n        case 'fa':\n        case 'gu':\n        case 'hi':\n        case 'kn':\n        case 'mr':\n        case 'zu':\n            if (i === 0 || n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'ar':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                return Plural.Few;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                return Plural.Many;\n            return Plural.Other;\n        case 'ast':\n        case 'ca':\n        case 'de':\n        case 'en':\n        case 'et':\n        case 'fi':\n        case 'fy':\n        case 'gl':\n        case 'it':\n        case 'nl':\n        case 'sv':\n        case 'sw':\n        case 'ur':\n        case 'yi':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            return Plural.Other;\n        case 'be':\n            if (n % 10 === 1 && !(n % 100 === 11))\n                return Plural.One;\n            if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                !(n % 100 >= 12 && n % 100 <= 14))\n                return Plural.Few;\n            if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'br':\n            if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                return Plural.One;\n            if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                return Plural.Two;\n            if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                    n % 100 >= 90 && n % 100 <= 99))\n                return Plural.Few;\n            if (!(n === 0) && n % 1e6 === 0)\n                return Plural.Many;\n            return Plural.Other;\n        case 'bs':\n        case 'hr':\n        case 'sr':\n            if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14) ||\n                f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                    !(f % 100 >= 12 && f % 100 <= 14))\n                return Plural.Few;\n            return Plural.Other;\n        case 'cs':\n        case 'sk':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                return Plural.Few;\n            if (!(v === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'cy':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n === 3)\n                return Plural.Few;\n            if (n === 6)\n                return Plural.Many;\n            return Plural.Other;\n        case 'da':\n            if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                return Plural.One;\n            return Plural.Other;\n        case 'dsb':\n        case 'hsb':\n            if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                return Plural.One;\n            if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                return Plural.Two;\n            if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                return Plural.Few;\n            return Plural.Other;\n        case 'ff':\n        case 'fr':\n        case 'hy':\n        case 'kab':\n            if (i === 0 || i === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'fil':\n            if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                return Plural.One;\n            return Plural.Other;\n        case 'ga':\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n === Math.floor(n) && n >= 3 && n <= 6)\n                return Plural.Few;\n            if (n === Math.floor(n) && n >= 7 && n <= 10)\n                return Plural.Many;\n            return Plural.Other;\n        case 'gd':\n            if (n === 1 || n === 11)\n                return Plural.One;\n            if (n === 2 || n === 12)\n                return Plural.Two;\n            if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                return Plural.Few;\n            return Plural.Other;\n        case 'gv':\n            if (v === 0 && i % 10 === 1)\n                return Plural.One;\n            if (v === 0 && i % 10 === 2)\n                return Plural.Two;\n            if (v === 0 &&\n                (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                return Plural.Few;\n            if (!(v === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'he':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (i === 2 && v === 0)\n                return Plural.Two;\n            if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                return Plural.Many;\n            return Plural.Other;\n        case 'is':\n            if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                return Plural.One;\n            return Plural.Other;\n        case 'ksh':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'kw':\n        case 'naq':\n        case 'se':\n        case 'smn':\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            return Plural.Other;\n        case 'lag':\n            if (n === 0)\n                return Plural.Zero;\n            if ((i === 0 || i === 1) && !(n === 0))\n                return Plural.One;\n            return Plural.Other;\n        case 'lt':\n            if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                return Plural.One;\n            if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                !(n % 100 >= 11 && n % 100 <= 19))\n                return Plural.Few;\n            if (!(f === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'lv':\n        case 'prg':\n            if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                return Plural.Zero;\n            if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                !(v === 2) && f % 10 === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'mk':\n            if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'mt':\n            if (n === 1)\n                return Plural.One;\n            if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                return Plural.Few;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                return Plural.Many;\n            return Plural.Other;\n        case 'pl':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14))\n                return Plural.Few;\n            if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'pt':\n            if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                return Plural.One;\n            return Plural.Other;\n        case 'ro':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (!(v === 0) || n === 0 ||\n                !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                return Plural.Few;\n            return Plural.Other;\n        case 'ru':\n        case 'uk':\n            if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14))\n                return Plural.Few;\n            if (v === 0 && i % 10 === 0 ||\n                v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'shi':\n            if (i === 0 || n === 1)\n                return Plural.One;\n            if (n === Math.floor(n) && n >= 2 && n <= 10)\n                return Plural.Few;\n            return Plural.Other;\n        case 'si':\n            if (n === 0 || n === 1 || i === 0 && f === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'sl':\n            if (v === 0 && i % 100 === 1)\n                return Plural.One;\n            if (v === 0 && i % 100 === 2)\n                return Plural.Two;\n            if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                return Plural.Few;\n            return Plural.Other;\n        case 'tzm':\n            if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                return Plural.One;\n            return Plural.Other;\n        // When there is no specification, the default is always \"other\"\n        // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n        // > other (required—general plural form — also used if the language only has a single form)\n        default:\n            return Plural.Other;\n    }\n}\n/**\n * @param {?} value\n * @param {?} locale\n * @return {?}\n */\nfunction getPluralCategory(value, locale) {\n    /** @type {?} */\n    var plural = getPluralCase(locale, value);\n    switch (plural) {\n        case Plural.Zero:\n            return 'zero';\n        case Plural.One:\n            return 'one';\n        case Plural.Two:\n            return 'two';\n        case Plural.Few:\n            return 'few';\n        case Plural.Many:\n            return 'many';\n        default:\n            return 'other';\n    }\n}\n/**\n * Returns the index of the current case of an ICU expression depending on the main binding value\n *\n * @param {?} icuExpression\n * @param {?} bindingValue The value of the main binding used by this ICU expression\n * @return {?}\n */\nfunction getCaseIndex(icuExpression, bindingValue) {\n    /** @type {?} */\n    var index = icuExpression.cases.indexOf(bindingValue);\n    if (index === -1) {\n        switch (icuExpression.type) {\n            case 1 /* plural */: {\n                /** @type {?} */\n                var locale = 'en-US';\n                /** @type {?} */\n                var resolvedCase = getPluralCategory(bindingValue, locale);\n                index = icuExpression.cases.indexOf(resolvedCase);\n                if (index === -1 && resolvedCase !== 'other') {\n                    index = icuExpression.cases.indexOf('other');\n                }\n                break;\n            }\n            case 0 /* select */: {\n                index = icuExpression.cases.indexOf('other');\n                break;\n            }\n        }\n    }\n    return index;\n}\n/**\n * Generate the OpCodes for ICU expressions.\n *\n * @param {?} tIcus\n * @param {?} icuExpression\n * @param {?} startIndex\n * @param {?} expandoStartIndex\n * @return {?}\n */\nfunction icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n    /** @type {?} */\n    var createCodes = [];\n    /** @type {?} */\n    var removeCodes = [];\n    /** @type {?} */\n    var updateCodes = [];\n    /** @type {?} */\n    var vars = [];\n    /** @type {?} */\n    var childIcus = [];\n    for (var i = 0; i < icuExpression.values.length; i++) {\n        /** @type {?} */\n        var valueArr = icuExpression.values[i];\n        /** @type {?} */\n        var nestedIcus = [];\n        for (var j = 0; j < valueArr.length; j++) {\n            /** @type {?} */\n            var value = valueArr[j];\n            if (typeof value !== 'string') {\n                /** @type {?} */\n                var icuIndex = nestedIcus.push(/** @type {?} */ (value)) - 1;\n                // Replace nested ICU expression by a comment node\n                valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n            }\n        }\n        /** @type {?} */\n        var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n        createCodes.push(icuCase.create);\n        removeCodes.push(icuCase.remove);\n        updateCodes.push(icuCase.update);\n        vars.push(icuCase.vars);\n        childIcus.push(icuCase.childIcus);\n    }\n    /** @type {?} */\n    var tIcu = {\n        type: icuExpression.type,\n        vars: vars,\n        expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n        cases: icuExpression.cases,\n        create: createCodes,\n        remove: removeCodes,\n        update: updateCodes\n    };\n    tIcus.push(tIcu);\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var worstCaseSize = Math.max.apply(Math, vars);\n    for (var i = 0; i < worstCaseSize; i++) {\n        allocExpando(lView);\n    }\n}\n/**\n * Transforms a string template into an HTML template and a list of instructions used to update\n * attributes or nodes that contain bindings.\n *\n * @param {?} unsafeHtml The string to parse\n * @param {?} parentIndex\n * @param {?} nestedIcus\n * @param {?} tIcus\n * @param {?} expandoStartIndex\n * @return {?}\n */\nfunction parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n    /** @type {?} */\n    var inertBodyHelper = new InertBodyHelper(document);\n    /** @type {?} */\n    var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n    if (!inertBodyElement) {\n        throw new Error('Unable to generate inert body element');\n    }\n    /** @type {?} */\n    var wrapper = /** @type {?} */ (getTemplateContent(/** @type {?} */ ((inertBodyElement)))) || inertBodyElement;\n    /** @type {?} */\n    var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n    parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n    return opCodes;\n}\n/** @type {?} */\nvar NESTED_ICU = /�(\\d+)�/;\n/**\n * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n *\n * @param {?} currentNode The first node to parse\n * @param {?} icuCase The data for the ICU expression case that contains those nodes\n * @param {?} parentIndex Index of the current node's parent\n * @param {?} nestedIcus Data for the nested ICU expressions that this case contains\n * @param {?} tIcus Data for all ICU expressions of the current message\n * @param {?} expandoStartIndex Expando start index for the current ICU expression\n * @return {?}\n */\nfunction parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n    if (currentNode) {\n        /** @type {?} */\n        var nestedIcusToCreate = [];\n        while (currentNode) {\n            /** @type {?} */\n            var nextNode = currentNode.nextSibling;\n            /** @type {?} */\n            var newIndex = expandoStartIndex + ++icuCase.vars;\n            switch (currentNode.nodeType) {\n                case Node.ELEMENT_NODE:\n                    /** @type {?} */\n                    var element = /** @type {?} */ (currentNode);\n                    /** @type {?} */\n                    var tagName = element.tagName.toLowerCase();\n                    if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                        // This isn't a valid element, we won't create an element for it\n                        icuCase.vars--;\n                    }\n                    else {\n                        icuCase.create.push(ELEMENT_MARKER, tagName, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        /** @type {?} */\n                        var elAttrs = element.attributes;\n                        for (var i = 0; i < elAttrs.length; i++) {\n                            /** @type {?} */\n                            var attr = /** @type {?} */ ((elAttrs.item(i)));\n                            /** @type {?} */\n                            var lowerAttrName = attr.name.toLowerCase();\n                            /** @type {?} */\n                            var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                            // we assume the input string is safe, unless it's using a binding\n                            if (hasBinding_1) {\n                                if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                    if (URI_ATTRS[lowerAttrName]) {\n                                        addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                    }\n                                    else if (SRCSET_ATTRS[lowerAttrName]) {\n                                        addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                    }\n                                    else {\n                                        addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                    }\n                                }\n                                else {\n                                    ngDevMode &&\n                                        console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                }\n                            }\n                            else {\n                                icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                            }\n                        }\n                        // Parse the children of this node (if any)\n                        parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                        // Remove the parent node after the children\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                    }\n                    break;\n                case Node.TEXT_NODE:\n                    /** @type {?} */\n                    var value = currentNode.textContent || '';\n                    /** @type {?} */\n                    var hasBinding = value.match(BINDING_REGEXP);\n                    icuCase.create.push(hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                    }\n                    break;\n                case Node.COMMENT_NODE:\n                    /** @type {?} */\n                    var match = NESTED_ICU.exec(currentNode.textContent || '');\n                    if (match) {\n                        /** @type {?} */\n                        var nestedIcuIndex = parseInt(match[1], 10);\n                        /** @type {?} */\n                        var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                        // Create the comment node that will anchor the ICU expression\n                        icuCase.create.push(COMMENT_MARKER, newLocal, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        /** @type {?} */\n                        var nestedIcu = nestedIcus[nestedIcuIndex];\n                        nestedIcusToCreate.push([nestedIcu, newIndex]);\n                    }\n                    else {\n                        // We do not handle any other type of comment\n                        icuCase.vars--;\n                    }\n                    break;\n                default:\n                    // We do not handle any other type of element\n                    icuCase.vars--;\n            }\n            currentNode = /** @type {?} */ ((nextNode));\n        }\n        for (var i = 0; i < nestedIcusToCreate.length; i++) {\n            /** @type {?} */\n            var nestedIcu = nestedIcusToCreate[i][0];\n            /** @type {?} */\n            var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n            icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n            /** @type {?} */\n            var nestTIcuIndex = tIcus.length - 1;\n            icuCase.vars += Math.max.apply(Math, tIcus[nestTIcuIndex].vars);\n            icuCase.childIcus.push(nestTIcuIndex);\n            /** @type {?} */\n            var mask = getBindingMask(nestedIcu);\n            icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n            3, // skip 3 opCodes if not changed\n            // skip 3 opCodes if not changed\n            -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n            2, // skip 2 opCodes if not changed\n            // skip 2 opCodes if not changed\n            nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n            icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n        }\n    }\n}\n//# sourceMappingURL=i18n.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { createInjector } from '../di/r3_injector';\nimport { ComponentFactoryResolver as viewEngine_ComponentFactoryResolver } from '../linker/component_factory_resolver';\nimport { NgModuleFactory as viewEngine_NgModuleFactory, NgModuleRef as viewEngine_NgModuleRef } from '../linker/ng_module_factory';\nimport { stringify } from '../util';\nimport { assertDefined } from './assert';\nimport { ComponentFactoryResolver } from './component_ref';\nimport { getNgModuleDef } from './definition';\n/**\n * @record\n */\nexport function NgModuleType() { }\n/** @type {?} */\nNgModuleType.prototype.ngModuleDef;\n/** @type {?} */\nexport var COMPONENT_FACTORY_RESOLVER = {\n    provide: viewEngine_ComponentFactoryResolver,\n    useFactory: function () { return new ComponentFactoryResolver(); },\n    deps: [],\n};\n/**\n * @template T\n */\nvar /**\n * @template T\n */\nNgModuleRef = /** @class */ (function (_super) {\n    tslib_1.__extends(NgModuleRef, _super);\n    function NgModuleRef(ngModuleType, parentInjector) {\n        var _this = _super.call(this) || this;\n        // tslint:disable-next-line:require-internal-with-underscore\n        _this._bootstrapComponents = [];\n        _this.destroyCbs = [];\n        /** @type {?} */\n        /** @nocollapse */ var ngModuleDef = getNgModuleDef(ngModuleType);\n        ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n        _this._bootstrapComponents = /** @type {?} */ ((ngModuleDef)).bootstrap;\n        /** @type {?} */\n        var additionalProviders = [\n            COMPONENT_FACTORY_RESOLVER, {\n                provide: viewEngine_NgModuleRef,\n                useValue: _this,\n            }\n        ];\n        _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n        _this.instance = _this.injector.get(ngModuleType);\n        _this.componentFactoryResolver = new ComponentFactoryResolver();\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleRef.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed'); /** @type {?} */\n        ((this.destroyCbs)).forEach(function (fn) { return fn(); });\n        this.destroyCbs = null;\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed'); /** @type {?} */\n        ((this.destroyCbs)).push(callback);\n    };\n    return NgModuleRef;\n}(viewEngine_NgModuleRef));\n/**\n * @template T\n */\nexport { NgModuleRef };\nif (false) {\n    /** @type {?} */\n    NgModuleRef.prototype._bootstrapComponents;\n    /** @type {?} */\n    NgModuleRef.prototype.injector;\n    /** @type {?} */\n    NgModuleRef.prototype.componentFactoryResolver;\n    /** @type {?} */\n    NgModuleRef.prototype.instance;\n    /** @type {?} */\n    NgModuleRef.prototype.destroyCbs;\n}\n/**\n * @template T\n */\nvar /**\n * @template T\n */\nNgModuleFactory = /** @class */ (function (_super) {\n    tslib_1.__extends(NgModuleFactory, _super);\n    function NgModuleFactory(moduleType) {\n        var _this = _super.call(this) || this;\n        _this.moduleType = moduleType;\n        return _this;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory.prototype.create = /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    function (parentInjector) {\n        return new NgModuleRef(this.moduleType, parentInjector);\n    };\n    return NgModuleFactory;\n}(viewEngine_NgModuleFactory));\n/**\n * @template T\n */\nexport { NgModuleFactory };\nif (false) {\n    /** @type {?} */\n    NgModuleFactory.prototype.moduleType;\n}\n//# sourceMappingURL=ng_module_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\n/**\n * @record\n */\nfunction TypeWithMetadata() { }\n/** @type {?|undefined} */\nTypeWithMetadata.prototype.decorators;\n/** @type {?|undefined} */\nTypeWithMetadata.prototype.ctorParameters;\n/** @type {?|undefined} */\nTypeWithMetadata.prototype.propDecorators;\n/**\n * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n * on the type.\n *\n * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n *\n * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n * tree-shaken away during production builds.\n * @param {?} type\n * @param {?} decorators\n * @param {?} ctorParameters\n * @param {?} propDecorators\n * @return {?}\n */\nexport function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n    var _a;\n    /** @type {?} */\n    var clazz = /** @type {?} */ (type);\n    if (decorators !== null) {\n        if (clazz.decorators !== undefined) {\n            (_a = clazz.decorators).push.apply(_a, decorators);\n        }\n        else {\n            clazz.decorators = decorators;\n        }\n    }\n    if (ctorParameters !== null) {\n        // Rather than merging, clobber the existing parameters. If other projects exist which use\n        // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n        // but that is vanishingly unlikely.\n        clazz.ctorParameters = ctorParameters;\n    }\n    if (propDecorators !== null) {\n        // The property decorator objects are merged as it is possible different fields have different\n        // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n        // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n        // decorator that's also been downleveled.\n        if (clazz.propDecorators !== undefined) {\n            clazz.propDecorators = tslib_1.__assign({}, clazz.propDecorators, propDecorators);\n        }\n        else {\n            clazz.propDecorators = propDecorators;\n        }\n    }\n}\n//# sourceMappingURL=metadata.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { bindingUpdated, bindingUpdated2, bindingUpdated3, bindingUpdated4, getBinding, updateBinding } from './bindings';\nimport { getBindingRoot, getCreationMode, getLView } from './state';\n/**\n * If the value hasn't been saved, calls the pure function to store and return the\n * value. If it has been saved, returns the saved value.\n *\n * @template T\n * @param {?} slotOffset the offset from binding root to the reserved slot\n * @param {?} pureFn Function that returns a value\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} value\n */\nexport function pureFunction0(slotOffset, pureFn, thisArg) {\n    /** @type {?} */\n    var bindingIndex = getBindingRoot() + slotOffset;\n    /** @type {?} */\n    var lView = getLView();\n    return getCreationMode() ?\n        updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n        getBinding(lView, bindingIndex);\n}\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param {?} slotOffset the offset from binding root to the reserved slot\n * @param {?} pureFn Function that returns an updated value\n * @param {?} exp Updated expression value\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nexport function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var bindingIndex = getBindingRoot() + slotOffset;\n    return bindingUpdated(lView, bindingIndex, exp) ?\n        updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n        getBinding(lView, bindingIndex + 1);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset from binding root to the reserved slot\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nexport function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n    /** @type {?} */\n    var bindingIndex = getBindingRoot() + slotOffset;\n    /** @type {?} */\n    var lView = getLView();\n    return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n        updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n        getBinding(lView, bindingIndex + 2);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset from binding root to the reserved slot\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nexport function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n    /** @type {?} */\n    var bindingIndex = getBindingRoot() + slotOffset;\n    /** @type {?} */\n    var lView = getLView();\n    return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n        updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n        getBinding(lView, bindingIndex + 3);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset from binding root to the reserved slot\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nexport function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n    /** @type {?} */\n    var bindingIndex = getBindingRoot() + slotOffset;\n    /** @type {?} */\n    var lView = getLView();\n    return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n        updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n        getBinding(lView, bindingIndex + 4);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset from binding root to the reserved slot\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nexport function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n    /** @type {?} */\n    var bindingIndex = getBindingRoot() + slotOffset;\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n        updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n            pureFn(exp1, exp2, exp3, exp4, exp5)) :\n        getBinding(lView, bindingIndex + 5);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset from binding root to the reserved slot\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?} exp6\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nexport function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n    /** @type {?} */\n    var bindingIndex = getBindingRoot() + slotOffset;\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n        updateBinding(lView, bindingIndex + 6, thisArg ?\n            pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n        getBinding(lView, bindingIndex + 6);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset from binding root to the reserved slot\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?} exp6\n * @param {?} exp7\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nexport function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n    /** @type {?} */\n    var bindingIndex = getBindingRoot() + slotOffset;\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n        updateBinding(lView, bindingIndex + 7, thisArg ?\n            pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n        getBinding(lView, bindingIndex + 7);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset from binding root to the reserved slot\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?} exp6\n * @param {?} exp7\n * @param {?} exp8\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nexport function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n    /** @type {?} */\n    var bindingIndex = getBindingRoot() + slotOffset;\n    /** @type {?} */\n    var lView = getLView();\n    /** @type {?} */\n    var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n        updateBinding(lView, bindingIndex + 8, thisArg ?\n            pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n        getBinding(lView, bindingIndex + 8);\n}\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset from binding root to the reserved slot\n * @param {?} pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param {?} exps An array of binding values\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nexport function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n    /** @type {?} */\n    var bindingIndex = getBindingRoot() + slotOffset;\n    /** @type {?} */\n    var different = false;\n    /** @type {?} */\n    var lView = getLView();\n    for (var i = 0; i < exps.length; i++) {\n        bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n    }\n    return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n        getBinding(lView, bindingIndex);\n}\n//# sourceMappingURL=pure_function.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { load, store } from './instructions';\nimport { HEADER_OFFSET, TVIEW } from './interfaces/view';\nimport { pureFunction1, pureFunction2, pureFunction3, pureFunction4, pureFunctionV } from './pure_function';\nimport { getLView } from './state';\n/**\n * Create a pipe.\n *\n * @param {?} index Pipe index where the pipe will be stored.\n * @param {?} pipeName The name of the pipe\n * @return {?} T the instance of the pipe.\n */\nexport function pipe(index, pipeName) {\n    /** @type {?} */\n    var tView = getLView()[TVIEW];\n    /** @type {?} */\n    var pipeDef;\n    /** @type {?} */\n    var adjustedIndex = index + HEADER_OFFSET;\n    if (tView.firstTemplatePass) {\n        pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n        tView.data[adjustedIndex] = pipeDef;\n        if (pipeDef.onDestroy) {\n            (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n        }\n    }\n    else {\n        pipeDef = /** @type {?} */ (tView.data[adjustedIndex]);\n    }\n    /** @type {?} */\n    var pipeInstance = pipeDef.factory(null);\n    store(index, pipeInstance);\n    return pipeInstance;\n}\n/**\n * Searches the pipe registry for a pipe with the given name. If one is found,\n * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n *\n * @param {?} name Name of pipe to resolve\n * @param {?} registry Full list of available pipes\n * @return {?} Matching PipeDef\n */\nfunction getPipeDef(name, registry) {\n    if (registry) {\n        for (var i = 0; i < registry.length; i++) {\n            /** @type {?} */\n            var pipeDef = registry[i];\n            if (name === pipeDef.name) {\n                return pipeDef;\n            }\n        }\n    }\n    throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n}\n/**\n * Invokes a pipe with 1 arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} slotOffset the offset in the reserved slot space\n * @param {?} v1 1st argument to {\\@link PipeTransform#transform}.\n * @return {?}\n */\nexport function pipeBind1(index, slotOffset, v1) {\n    /** @type {?} */\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n        pipeInstance.transform(v1);\n}\n/**\n * Invokes a pipe with 2 arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} slotOffset the offset in the reserved slot space\n * @param {?} v1 1st argument to {\\@link PipeTransform#transform}.\n * @param {?} v2 2nd argument to {\\@link PipeTransform#transform}.\n * @return {?}\n */\nexport function pipeBind2(index, slotOffset, v1, v2) {\n    /** @type {?} */\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n        pipeInstance.transform(v1, v2);\n}\n/**\n * Invokes a pipe with 3 arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} slotOffset the offset in the reserved slot space\n * @param {?} v1 1st argument to {\\@link PipeTransform#transform}.\n * @param {?} v2 2nd argument to {\\@link PipeTransform#transform}.\n * @param {?} v3 4rd argument to {\\@link PipeTransform#transform}.\n * @return {?}\n */\nexport function pipeBind3(index, slotOffset, v1, v2, v3) {\n    /** @type {?} */\n    var pipeInstance = load(index);\n    return isPure(index) ?\n        pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3);\n}\n/**\n * Invokes a pipe with 4 arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} slotOffset the offset in the reserved slot space\n * @param {?} v1 1st argument to {\\@link PipeTransform#transform}.\n * @param {?} v2 2nd argument to {\\@link PipeTransform#transform}.\n * @param {?} v3 3rd argument to {\\@link PipeTransform#transform}.\n * @param {?} v4 4th argument to {\\@link PipeTransform#transform}.\n * @return {?}\n */\nexport function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n    /** @type {?} */\n    var pipeInstance = load(index);\n    return isPure(index) ?\n        pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3, v4);\n}\n/**\n * Invokes a pipe with variable number of arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} slotOffset the offset in the reserved slot space\n * @param {?} values Array of arguments to pass to {\\@link PipeTransform#transform} method.\n * @return {?}\n */\nexport function pipeBindV(index, slotOffset, values) {\n    /** @type {?} */\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n        pipeInstance.transform.apply(pipeInstance, values);\n}\n/**\n * @param {?} index\n * @return {?}\n */\nfunction isPure(index) {\n    return (/** @type {?} */ (getLView()[TVIEW].data[index + HEADER_OFFSET])).pure;\n}\n//# sourceMappingURL=pipe.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Subject, Subscription } from 'rxjs';\n/**\n * Use in directives and components to emit custom events synchronously\n * or asynchronously, and register handlers for those events by subscribing\n * to an instance.\n *\n * \\@usageNotes\n *\n * In the following example, a component defines two output properties\n * that create event emitters. When the title is clicked, the emitter\n * emits an open or close event to toggle the current visibility state.\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n * \\@Output() open: EventEmitter<any> = new EventEmitter();\n * \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * Access the event object with the `$event` argument passed to the output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * ### Notes\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n *\n * \\@publicApi\n * @template T\n */\nvar /**\n * Use in directives and components to emit custom events synchronously\n * or asynchronously, and register handlers for those events by subscribing\n * to an instance.\n *\n * \\@usageNotes\n *\n * In the following example, a component defines two output properties\n * that create event emitters. When the title is clicked, the emitter\n * emits an open or close event to toggle the current visibility state.\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n * \\@Output() open: EventEmitter<any> = new EventEmitter();\n * \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * Access the event object with the `$event` argument passed to the output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * ### Notes\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n *\n * \\@publicApi\n * @template T\n */\nEventEmitter = /** @class */ (function (_super) {\n    tslib_1.__extends(EventEmitter, _super);\n    /**\n     * Creates an instance of this class that can\n     * deliver events synchronously or asynchronously.\n     *\n     * @param isAsync When true, deliver events asynchronously.\n     *\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * Emits an event containing a given value.\n     * @param value The value to emit.\n     */\n    /**\n     * Emits an event containing a given value.\n     * @param {?=} value The value to emit.\n     * @return {?}\n     */\n    EventEmitter.prototype.emit = /**\n     * Emits an event containing a given value.\n     * @param {?=} value The value to emit.\n     * @return {?}\n     */\n    function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * Registers handlers for events emitted by this instance.\n     * @param generatorOrNext When supplied, a custom handler for emitted events.\n     * @param error When supplied, a custom handler for an error notification\n     * from this emitter.\n     * @param complete When supplied, a custom handler for a completion\n     * notification from this emitter.\n     */\n    /**\n     * Registers handlers for events emitted by this instance.\n     * @param {?=} generatorOrNext When supplied, a custom handler for emitted events.\n     * @param {?=} error When supplied, a custom handler for an error notification\n     * from this emitter.\n     * @param {?=} complete When supplied, a custom handler for a completion\n     * notification from this emitter.\n     * @return {?}\n     */\n    EventEmitter.prototype.subscribe = /**\n     * Registers handlers for events emitted by this instance.\n     * @param {?=} generatorOrNext When supplied, a custom handler for emitted events.\n     * @param {?=} error When supplied, a custom handler for an error notification\n     * from this emitter.\n     * @param {?=} complete When supplied, a custom handler for a completion\n     * notification from this emitter.\n     * @return {?}\n     */\n    function (generatorOrNext, error, complete) {\n        /** @type {?} */\n        var schedulerFn;\n        /** @type {?} */\n        var errorFn = function (err) { return null; };\n        /** @type {?} */\n        var completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        /** @type {?} */\n        var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        if (generatorOrNext instanceof Subscription) {\n            generatorOrNext.add(sink);\n        }\n        return sink;\n    };\n    return EventEmitter;\n}(Subject));\n/**\n * Use in directives and components to emit custom events synchronously\n * or asynchronously, and register handlers for those events by subscribing\n * to an instance.\n *\n * \\@usageNotes\n *\n * In the following example, a component defines two output properties\n * that create event emitters. When the title is clicked, the emitter\n * emits an open or close event to toggle the current visibility state.\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n * \\@Output() open: EventEmitter<any> = new EventEmitter();\n * \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * Access the event object with the `$event` argument passed to the output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * ### Notes\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n *\n * \\@publicApi\n * @template T\n */\nexport { EventEmitter };\nif (false) {\n    /**\n     * Internal\n     * @type {?}\n     */\n    EventEmitter.prototype.__isAsync;\n}\n//# sourceMappingURL=event_emitter.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { injectTemplateRef as render3InjectTemplateRef } from '../render3/view_engine_compatibility';\nimport { noop } from '../util/noop';\nimport { ElementRef } from './element_ref';\n/**\n * Represents an embedded template that can be used to instantiate embedded views.\n * To instantiate embedded views based on a template, use the `ViewContainerRef`\n * method `createEmbeddedView()`.\n *\n * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n * is injected into the constructor of the directive,\n * using the `TemplateRef` token.\n *\n * You can also use a `Query` to find a `TemplateRef` associated with\n * a component or a directive.\n *\n * @see `ViewContainerRef`\n * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n *\n * \\@publicApi\n * @abstract\n * @template C\n */\nvar TemplateRef = /** @class */ (function () {\n    function TemplateRef() {\n    }\n    /**\n     * \\@internal\n     */\n    TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n    return TemplateRef;\n}());\nexport { TemplateRef };\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    TemplateRef.__NG_ELEMENT_ID__;\n    /**\n     * The anchor element in the parent view for this embedded view.\n     *\n     * The data-binding and injection contexts of embedded views created from this `TemplateRef`\n     * inherit from the contexts of this location.\n     *\n     * Typically new embedded views are attached to the view container of this location, but in\n     * advanced use-cases, the view can be attached to a different container while keeping the\n     * data-binding and injection context from the original location.\n     *\n     * @abstract\n     * @return {?}\n     */\n    TemplateRef.prototype.elementRef = function () { };\n    /**\n     * Creates a view object and attaches it to the view container of the parent view.\n     * @abstract\n     * @param {?} context The context for the new view, inherited from the anchor element.\n     * @return {?} The new view object.\n     */\n    TemplateRef.prototype.createEmbeddedView = function (context) { };\n}\n/** @type {?} */\nexport var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = render3InjectTemplateRef;\n/** @type {?} */\nvar SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n/** @type {?} */\nvar SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n//# sourceMappingURL=template_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @typedef {?} */\nvar ComponentTemplate;\nexport { ComponentTemplate };\n/** @typedef {?} */\nvar ComponentQuery;\nexport { ComponentQuery };\n/** @enum {number} */\nvar RenderFlags = {\n    /* Whether to run the creation block (e.g. create elements and directives) */\n    Create: 1,\n    /* Whether to run the update block (e.g. refresh bindings) */\n    Update: 2,\n};\nexport { RenderFlags };\n/**\n * A subclass of `Type` which has a static `ngComponentDef`:`ComponentDef` field making it\n * consumable for rendering.\n * @record\n * @template T\n */\nexport function ComponentType() { }\n/** @type {?} */\nComponentType.prototype.ngComponentDef;\n/**\n * A subclass of `Type` which has a static `ngDirectiveDef`:`DirectiveDef` field making it\n * consumable for rendering.\n * @record\n * @template T\n */\nexport function DirectiveType() { }\n/** @type {?} */\nDirectiveType.prototype.ngDirectiveDef;\n/** @enum {number} */\nvar DirectiveDefFlags = {\n    ContentQuery: 2,\n};\nexport { DirectiveDefFlags };\n/**\n * A subclass of `Type` which has a static `ngPipeDef`:`PipeDef` field making it\n * consumable for rendering.\n * @record\n * @template T\n */\nexport function PipeType() { }\n/** @type {?} */\nPipeType.prototype.ngPipeDef;\n/** @typedef {?} */\nvar DirectiveDefWithMeta;\nexport { DirectiveDefWithMeta };\n/**\n * Runtime information for classes that are inherited by components or directives\n * that aren't defined as components or directives.\n *\n * This is an internal data structure used by the render to determine what inputs\n * and outputs should be inherited.\n *\n * See: {\\@link defineBase}\n * @record\n * @template T\n */\nexport function BaseDef() { }\n/**\n * A dictionary mapping the inputs' minified property names to their public API names, which\n * are their aliases if any, or their original unminified property names\n * (as in `\\@Input('alias') propertyName: any;`).\n * @type {?}\n */\nBaseDef.prototype.inputs;\n/**\n * @deprecated This is only here because `NgOnChanges` incorrectly uses declared name instead of\n * public or minified name.\n * @type {?}\n */\nBaseDef.prototype.declaredInputs;\n/**\n * A dictionary mapping the outputs' minified property names to their public API names, which\n * are their aliases if any, or their original unminified property names\n * (as in `\\@Output('alias') propertyName: any;`).\n * @type {?}\n */\nBaseDef.prototype.outputs;\n/**\n * Runtime link information for Directives.\n *\n * This is internal data structure used by the render to link\n * directives into templates.\n *\n * NOTE: Always use `defineDirective` function to create this object,\n * never create the object directly since the shape of this object\n * can change between versions.\n *\n * @param Selector type metadata specifying the selector of the directive or component\n *\n * See: {\\@link defineDirective}\n * @record\n * @template T\n */\nexport function DirectiveDef() { }\n/**\n * Token representing the directive. Used by DI.\n * @type {?}\n */\nDirectiveDef.prototype.type;\n/**\n * Function that resolves providers and publishes them into the DI system.\n * @type {?}\n */\nDirectiveDef.prototype.providersResolver;\n/**\n * The selectors that will be used to match nodes to this directive.\n * @type {?}\n */\nDirectiveDef.prototype.selectors;\n/**\n * Name under which the directive is exported (for use with local references in template)\n * @type {?}\n */\nDirectiveDef.prototype.exportAs;\n/**\n * Factory function used to create a new directive instance.\n * @type {?}\n */\nDirectiveDef.prototype.factory;\n/**\n * Function to create instances of content queries associated with a given directive.\n * @type {?}\n */\nDirectiveDef.prototype.contentQueries;\n/**\n * Refreshes content queries associated with directives in a given view\n * @type {?}\n */\nDirectiveDef.prototype.contentQueriesRefresh;\n/**\n * Refreshes host bindings on the associated directive.\n * @type {?}\n */\nDirectiveDef.prototype.hostBindings;\n/**\n * Static attributes to set on host element.\n *\n * Even indices: attribute name\n * Odd indices: attribute value\n * @type {?}\n */\nDirectiveDef.prototype.attributes;\n/** @type {?} */\nDirectiveDef.prototype.onInit;\n/** @type {?} */\nDirectiveDef.prototype.doCheck;\n/** @type {?} */\nDirectiveDef.prototype.afterContentInit;\n/** @type {?} */\nDirectiveDef.prototype.afterContentChecked;\n/** @type {?} */\nDirectiveDef.prototype.afterViewInit;\n/** @type {?} */\nDirectiveDef.prototype.afterViewChecked;\n/** @type {?} */\nDirectiveDef.prototype.onDestroy;\n/**\n * The features applied to this directive\n * @type {?}\n */\nDirectiveDef.prototype.features;\n/** @typedef {?} */\nvar ComponentDefWithMeta;\nexport { ComponentDefWithMeta };\n/**\n * Runtime link information for Components.\n *\n * This is internal data structure used by the render to link\n * components into templates.\n *\n * NOTE: Always use `defineComponent` function to create this object,\n * never create the object directly since the shape of this object\n * can change between versions.\n *\n * See: {\\@link defineComponent}\n * @record\n * @template T\n */\nexport function ComponentDef() { }\n/**\n * Runtime unique component ID.\n * @type {?}\n */\nComponentDef.prototype.id;\n/**\n * The View template of the component.\n * @type {?}\n */\nComponentDef.prototype.template;\n/**\n * A set of styles that the component needs to be present for component to render correctly.\n * @type {?}\n */\nComponentDef.prototype.styles;\n/**\n * The number of nodes, local refs, and pipes in this component template.\n *\n * Used to calculate the length of the component's LView array, so we\n * can pre-fill the array and set the binding start index.\n * @type {?}\n */\nComponentDef.prototype.consts;\n/**\n * The number of bindings in this component template (including pure fn bindings).\n *\n * Used to calculate the length of the component's LView array, so we\n * can pre-fill the array and set the host binding start index.\n * @type {?}\n */\nComponentDef.prototype.vars;\n/**\n * Query-related instructions for a component.\n * @type {?}\n */\nComponentDef.prototype.viewQuery;\n/**\n * The view encapsulation type, which determines how styles are applied to\n * DOM elements. One of\n * - `Emulated` (default): Emulate native scoping of styles.\n * - `Native`: Use the native encapsulation mechanism of the renderer.\n * - `ShadowDom`: Use modern [ShadowDOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n *   create a ShadowRoot for component's host element.\n * - `None`: Do not provide any template or style encapsulation.\n * @type {?}\n */\nComponentDef.prototype.encapsulation;\n/**\n * Defines arbitrary developer-defined data to be stored on a renderer instance.\n * This is useful for renderers that delegate to other renderers.\n * @type {?}\n */\nComponentDef.prototype.data;\n/**\n * Whether or not this component's ChangeDetectionStrategy is OnPush\n * @type {?}\n */\nComponentDef.prototype.onPush;\n/**\n * Registry of directives and components that may be found in this view.\n *\n * The property is either an array of `DirectiveDef`s or a function which returns the array of\n * `DirectiveDef`s. The function is necessary to be able to support forward declarations.\n * @type {?}\n */\nComponentDef.prototype.directiveDefs;\n/**\n * Registry of pipes that may be found in this view.\n *\n * The property is either an array of `PipeDefs`s or a function which returns the array of\n * `PipeDefs`s. The function is necessary to be able to support forward declarations.\n * @type {?}\n */\nComponentDef.prototype.pipeDefs;\n/**\n * Used to store the result of `noSideEffects` function so that it is not removed by closure\n * compiler. The property should never be read.\n * @type {?|undefined}\n */\nComponentDef.prototype._;\n/**\n * Runtime link information for Pipes.\n *\n * This is internal data structure used by the renderer to link\n * pipes into templates.\n *\n * NOTE: Always use `definePipe` function to create this object,\n * never create the object directly since the shape of this object\n * can change between versions.\n *\n * See: {\\@link definePipe}\n * @record\n * @template T\n */\nexport function PipeDef() { }\n/**\n * Pipe name.\n *\n * Used to resolve pipe in templates.\n * @type {?}\n */\nPipeDef.prototype.name;\n/**\n * Factory function used to create a new pipe instance.\n * @type {?}\n */\nPipeDef.prototype.factory;\n/**\n * Whether or not the pipe is pure.\n *\n * Pure pipes result only depends on the pipe input and not on internal\n * state of the pipe.\n * @type {?}\n */\nPipeDef.prototype.pure;\n/** @type {?} */\nPipeDef.prototype.onDestroy;\n/** @typedef {?} */\nvar PipeDefWithMeta;\nexport { PipeDefWithMeta };\n/**\n * @record\n */\nexport function DirectiveDefFeature() { }\n/* TODO: handle strange member:\n<T>(directiveDef: DirectiveDef<T>): void;\n*/\n/** @type {?|undefined} */\nDirectiveDefFeature.prototype.ngInherit;\n/**\n * @record\n */\nexport function ComponentDefFeature() { }\n/* TODO: handle strange member:\n<T>(componentDef: ComponentDef<T>): void;\n*/\n/** @type {?|undefined} */\nComponentDefFeature.prototype.ngInherit;\n/** @typedef {?} */\nvar DirectiveDefListOrFactory;\nexport { DirectiveDefListOrFactory };\n/** @typedef {?} */\nvar DirectiveDefList;\nexport { DirectiveDefList };\n/** @typedef {?} */\nvar DirectiveTypesOrFactory;\nexport { DirectiveTypesOrFactory };\n/** @typedef {?} */\nvar DirectiveTypeList;\nexport { DirectiveTypeList };\n/** @typedef {?} */\nvar HostBindingsFunction;\nexport { HostBindingsFunction };\n/** @typedef {?} */\nvar PipeDefListOrFactory;\nexport { PipeDefListOrFactory };\n/** @typedef {?} */\nvar PipeDefList;\nexport { PipeDefList };\n/** @typedef {?} */\nvar PipeTypesOrFactory;\nexport { PipeTypesOrFactory };\n/** @typedef {?} */\nvar PipeTypeList;\nexport { PipeTypeList };\n/** @type {?} */\nexport var unusedValueExportToPlacateAjd = 1;\n/** @enum {number} */\nvar InitialStylingFlags = {\n    VALUES_MODE: 1,\n};\nexport { InitialStylingFlags };\n//# sourceMappingURL=definition.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used for tracking queries (e.g. ViewChild, ContentChild).\n * @record\n */\nexport function LQueries() { }\n/**\n * The parent LQueries instance.\n *\n * When there is a content query, a new LQueries instance is created to avoid mutating any\n * existing LQueries. After we are done searching content children, the parent property allows\n * us to traverse back up to the original LQueries instance to continue to search for matches\n * in the main view.\n * @type {?}\n */\nLQueries.prototype.parent;\n/**\n * Ask queries to prepare copy of itself. This assures that tracking new queries on content nodes\n * doesn't mutate list of queries tracked on a parent node. We will clone LQueries before\n * constructing content queries.\n * @type {?}\n */\nLQueries.prototype.clone;\n/**\n * Notify `LQueries` that a new `TNode` has been created and needs to be added to query results\n * if matching query predicate.\n * @type {?}\n */\nLQueries.prototype.addNode;\n/**\n * Notify `LQueries` that a new LContainer was added to ivy data structures. As a result we need\n * to prepare room for views that might be inserted into this container.\n * @type {?}\n */\nLQueries.prototype.container;\n/**\n * Notify `LQueries` that a new `LView` has been created. As a result we need to prepare room\n * and collect nodes that match query predicate.\n * @type {?}\n */\nLQueries.prototype.createView;\n/**\n * Notify `LQueries` that a new `LView` has been added to `LContainer`. As a result all\n * the matching nodes from this view should be added to container's queries.\n * @type {?}\n */\nLQueries.prototype.insertView;\n/**\n * Notify `LQueries` that an `LView` has been removed from `LContainer`. As a result all\n * the matching nodes from this view should be removed from container's queries.\n * @type {?}\n */\nLQueries.prototype.removeView;\n/**\n * Add additional `QueryList` to track.\n *\n * \\@param queryList `QueryList` to update with changes.\n * \\@param predicate Either `Type` or selector array of [key, value] predicates.\n * \\@param descend If true the query will recursively apply to the children.\n * \\@param read Indicates which token should be read from DI for this query.\n * @type {?}\n */\nLQueries.prototype.track;\n/** @type {?} */\nexport var unusedValueExportToPlacateAjd = 1;\n//# sourceMappingURL=query.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { EventEmitter } from '../event_emitter';\nimport { ElementRef as ViewEngine_ElementRef } from '../linker/element_ref';\nimport { TemplateRef as ViewEngine_TemplateRef } from '../linker/template_ref';\nimport { getSymbolIterator } from '../util';\nimport { assertDefined, assertEqual, assertPreviousIsParent } from './assert';\nimport { getNodeInjectable, locateDirectiveOrProvider } from './di';\nimport { NG_ELEMENT_ID } from './fields';\nimport { store, storeCleanupWithContext } from './instructions';\nimport { unusedValueExportToPlacateAjd as unused1 } from './interfaces/definition';\nimport { unusedValueExportToPlacateAjd as unused2 } from './interfaces/injector';\nimport { unusedValueExportToPlacateAjd as unused3 } from './interfaces/node';\nimport { unusedValueExportToPlacateAjd as unused4 } from './interfaces/query';\nimport { TVIEW } from './interfaces/view';\nimport { getIsParent, getLView, getOrCreateCurrentQueries } from './state';\nimport { flatten, isContentQueryHost } from './util';\nimport { createElementRef, createTemplateRef } from './view_engine_compatibility';\n/** @type {?} */\nvar unusedValueToPlacateAjd = unused1 + unused2 + unused3 + unused4;\n/**\n * A predicate which determines if a given element/directive should be included in the query\n * results.\n * @record\n * @template T\n */\nexport function QueryPredicate() { }\n/**\n * If looking for directives then it contains the directive type.\n * @type {?}\n */\nQueryPredicate.prototype.type;\n/**\n * If selector then contains local names to query for.\n * @type {?}\n */\nQueryPredicate.prototype.selector;\n/**\n * Indicates which token should be read from DI for this query.\n * @type {?}\n */\nQueryPredicate.prototype.read;\n/**\n * An object representing a query, which is a combination of:\n * - query predicate to determines if a given element/directive should be included in the query\n * - values collected based on a predicate\n * - `QueryList` to which collected values should be reported\n * @record\n * @template T\n */\nexport function LQuery() { }\n/**\n * Next query. Used when queries are stored as a linked list in `LQueries`.\n * @type {?}\n */\nLQuery.prototype.next;\n/**\n * Destination to which the value should be added.\n * @type {?}\n */\nLQuery.prototype.list;\n/**\n * A predicate which determines if a given element/directive should be included in the query\n * results.\n * @type {?}\n */\nLQuery.prototype.predicate;\n/**\n * Values which have been located.\n *\n * This is what builds up the `QueryList._valuesTree`.\n * @type {?}\n */\nLQuery.prototype.values;\n/**\n * A pointer to an array that stores collected values from views. This is necessary so we know a\n * container into which to insert nodes collected from views.\n * @type {?}\n */\nLQuery.prototype.containerValues;\nvar LQueries_ = /** @class */ (function () {\n    function LQueries_(parent, shallow, deep) {\n        this.parent = parent;\n        this.shallow = shallow;\n        this.deep = deep;\n    }\n    /**\n     * @template T\n     * @param {?} queryList\n     * @param {?} predicate\n     * @param {?=} descend\n     * @param {?=} read\n     * @return {?}\n     */\n    LQueries_.prototype.track = /**\n     * @template T\n     * @param {?} queryList\n     * @param {?} predicate\n     * @param {?=} descend\n     * @param {?=} read\n     * @return {?}\n     */\n    function (queryList, predicate, descend, read) {\n        if (descend) {\n            this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n        }\n        else {\n            this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    LQueries_.prototype.clone = /**\n     * @return {?}\n     */\n    function () { return new LQueries_(this, null, this.deep); };\n    /**\n     * @return {?}\n     */\n    LQueries_.prototype.container = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var shallowResults = copyQueriesToContainer(this.shallow);\n        /** @type {?} */\n        var deepResults = copyQueriesToContainer(this.deep);\n        return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n    };\n    /**\n     * @return {?}\n     */\n    LQueries_.prototype.createView = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var shallowResults = copyQueriesToView(this.shallow);\n        /** @type {?} */\n        var deepResults = copyQueriesToView(this.deep);\n        return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    LQueries_.prototype.insertView = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        insertView(index, this.shallow);\n        insertView(index, this.deep);\n    };\n    /**\n     * @param {?} tNode\n     * @return {?}\n     */\n    LQueries_.prototype.addNode = /**\n     * @param {?} tNode\n     * @return {?}\n     */\n    function (tNode) {\n        add(this.deep, tNode);\n        if (isContentQueryHost(tNode)) {\n            add(this.shallow, tNode);\n            if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                // if node has a content query and parent also has a content query\n                // both queries need to check this node for shallow matches\n                add(/** @type {?} */ ((this.parent)).shallow, tNode);\n            }\n            return this.parent;\n        }\n        isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    LQueries_.prototype.removeView = /**\n     * @return {?}\n     */\n    function () {\n        removeView(this.shallow);\n        removeView(this.deep);\n    };\n    return LQueries_;\n}());\nexport { LQueries_ };\nif (false) {\n    /** @type {?} */\n    LQueries_.prototype.parent;\n    /** @type {?} */\n    LQueries_.prototype.shallow;\n    /** @type {?} */\n    LQueries_.prototype.deep;\n}\n/**\n * @param {?} tNode\n * @return {?}\n */\nfunction isRootNodeOfQuery(tNode) {\n    return tNode.parent === null || isContentQueryHost(tNode.parent);\n}\n/**\n * @param {?} query\n * @return {?}\n */\nfunction copyQueriesToContainer(query) {\n    /** @type {?} */\n    var result = null;\n    while (query) {\n        /** @type {?} */\n        var containerValues = []; // prepare room for views\n        query.values.push(containerValues);\n        /** @type {?} */\n        var clonedQuery = {\n            next: result,\n            list: query.list,\n            predicate: query.predicate,\n            values: containerValues,\n            containerValues: null\n        };\n        result = clonedQuery;\n        query = query.next;\n    }\n    return result;\n}\n/**\n * @param {?} query\n * @return {?}\n */\nfunction copyQueriesToView(query) {\n    /** @type {?} */\n    var result = null;\n    while (query) {\n        /** @type {?} */\n        var clonedQuery = {\n            next: result,\n            list: query.list,\n            predicate: query.predicate,\n            values: [],\n            containerValues: query.values\n        };\n        result = clonedQuery;\n        query = query.next;\n    }\n    return result;\n}\n/**\n * @param {?} index\n * @param {?} query\n * @return {?}\n */\nfunction insertView(index, query) {\n    while (query) {\n        ngDevMode &&\n            assertDefined(query.containerValues, 'View queries need to have a pointer to container values.'); /** @type {?} */\n        ((query.containerValues)).splice(index, 0, query.values);\n        query = query.next;\n    }\n}\n/**\n * @param {?} query\n * @return {?}\n */\nfunction removeView(query) {\n    while (query) {\n        ngDevMode &&\n            assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n        /** @type {?} */\n        var containerValues = /** @type {?} */ ((query.containerValues));\n        /** @type {?} */\n        var viewValuesIdx = containerValues.indexOf(query.values);\n        /** @type {?} */\n        var removed = containerValues.splice(viewValuesIdx, 1);\n        // mark a query as dirty only when removed view had matching modes\n        ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n        if (removed[0].length) {\n            query.list.setDirty();\n        }\n        query = query.next;\n    }\n}\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param {?} tNode static data of a node to check\n * @param {?} selector selector to match\n * @return {?} directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode, selector) {\n    /** @type {?} */\n    var localNames = tNode.localNames;\n    if (localNames) {\n        for (var i = 0; i < localNames.length; i += 2) {\n            if (localNames[i] === selector) {\n                return /** @type {?} */ (localNames[i + 1]);\n            }\n        }\n    }\n    return null;\n}\n/**\n * @param {?} read\n * @param {?} tNode\n * @param {?} currentView\n * @return {?}\n */\nfunction queryByReadToken(read, tNode, currentView) {\n    /** @type {?} */\n    var factoryFn = (/** @type {?} */ (read))[NG_ELEMENT_ID];\n    if (typeof factoryFn === 'function') {\n        return factoryFn();\n    }\n    else {\n        /** @type {?} */\n        var matchingIdx = locateDirectiveOrProvider(tNode, currentView, /** @type {?} */ (read), false);\n        if (matchingIdx !== null) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, /** @type {?} */ (tNode));\n        }\n    }\n    return null;\n}\n/**\n * @param {?} tNode\n * @param {?} currentView\n * @return {?}\n */\nfunction queryByTNodeType(tNode, currentView) {\n    if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n        return createElementRef(ViewEngine_ElementRef, tNode, currentView);\n    }\n    if (tNode.type === 0 /* Container */) {\n        return createTemplateRef(ViewEngine_TemplateRef, ViewEngine_ElementRef, tNode, currentView);\n    }\n    return null;\n}\n/**\n * @param {?} templateRefToken\n * @param {?} tNode\n * @param {?} currentView\n * @param {?} read\n * @return {?}\n */\nfunction queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n    /** @type {?} */\n    var templateRefResult = (/** @type {?} */ (templateRefToken))[NG_ELEMENT_ID]();\n    if (read) {\n        return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n    }\n    return templateRefResult;\n}\n/**\n * @param {?} tNode\n * @param {?} currentView\n * @param {?} read\n * @param {?} matchingIdx\n * @return {?}\n */\nfunction queryRead(tNode, currentView, read, matchingIdx) {\n    if (read) {\n        return queryByReadToken(read, tNode, currentView);\n    }\n    if (matchingIdx > -1) {\n        return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, /** @type {?} */ (tNode));\n    }\n    // if read token and / or strategy is not specified,\n    // detect it using appropriate tNode type\n    return queryByTNodeType(tNode, currentView);\n}\n/**\n * @param {?} query\n * @param {?} tNode\n * @return {?}\n */\nfunction add(query, tNode) {\n    /** @type {?} */\n    var currentView = getLView();\n    while (query) {\n        /** @type {?} */\n        var predicate = query.predicate;\n        /** @type {?} */\n        var type = /** @type {?} */ (predicate.type);\n        if (type) {\n            /** @type {?} */\n            var result = null;\n            if (type === ViewEngine_TemplateRef) {\n                result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n            }\n            else {\n                /** @type {?} */\n                var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false);\n                if (matchingIdx !== null) {\n                    result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                }\n            }\n            if (result !== null) {\n                addMatch(query, result);\n            }\n        }\n        else {\n            /** @type {?} */\n            var selector = /** @type {?} */ ((predicate.selector));\n            for (var i = 0; i < selector.length; i++) {\n                /** @type {?} */\n                var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                if (matchingIdx !== null) {\n                    /** @type {?} */\n                    var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n        }\n        query = query.next;\n    }\n}\n/**\n * @param {?} query\n * @param {?} matchingValue\n * @return {?}\n */\nfunction addMatch(query, matchingValue) {\n    query.values.push(matchingValue);\n    query.list.setDirty();\n}\n/**\n * @template T\n * @param {?} predicate\n * @param {?} read\n * @return {?}\n */\nfunction createPredicate(predicate, read) {\n    /** @type {?} */\n    var isArray = Array.isArray(predicate);\n    return {\n        type: isArray ? null : /** @type {?} */ (predicate),\n        selector: isArray ? /** @type {?} */ (predicate) : null,\n        read: read\n    };\n}\n/**\n * @template T\n * @param {?} previous\n * @param {?} queryList\n * @param {?} predicate\n * @param {?} read\n * @return {?}\n */\nfunction createQuery(previous, queryList, predicate, read) {\n    return {\n        next: previous,\n        list: queryList,\n        predicate: createPredicate(predicate, read),\n        values: (/** @type {?} */ ((queryList)))._valuesTree,\n        containerValues: null\n    };\n}\n/**\n * @template T\n */\nvar /**\n * @template T\n */\nQueryList_ = /** @class */ (function () {\n    function QueryList_() {\n        this.dirty = true;\n        this.changes = new EventEmitter();\n        this._values = [];\n        /**\n         * \\@internal\n         */\n        this._valuesTree = [];\n    }\n    Object.defineProperty(QueryList_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._values.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"first\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var values = this._values;\n            return values.length ? values[0] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"last\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var values = this._values;\n            return values.length ? values[values.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.map = /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return this._values.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.filter = /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._values.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.find = /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._values.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList_.prototype.reduce = /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        return this._values.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.forEach = /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._values.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.some = /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._values.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.toArray = /**\n     * @return {?}\n     */\n    function () { return this._values.slice(0); };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype[getSymbolIterator()] = /**\n     * @return {?}\n     */\n    function () { return (/** @type {?} */ (this._values))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this._values.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList_.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        this._values = flatten(res);\n        (/** @type {?} */ (this)).dirty = false;\n    };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this.changes)).emit(this); };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.setDirty = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this)).dirty = true; };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    };\n    return QueryList_;\n}());\nif (false) {\n    /** @type {?} */\n    QueryList_.prototype.dirty;\n    /** @type {?} */\n    QueryList_.prototype.changes;\n    /** @type {?} */\n    QueryList_.prototype._values;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    QueryList_.prototype._valuesTree;\n}\n/** @type {?} */\nexport var QueryList = /** @type {?} */ (QueryList_);\n/**\n * Creates and returns a QueryList.\n *\n * @template T\n * @param {?} memoryIndex The index in memory where the QueryList should be saved. If null,\n * this is is a content query and the QueryList will be saved later through directiveCreate.\n * @param {?} predicate The type for which the query will search\n * @param {?=} descend Whether or not to descend into children\n * @param {?=} read What to save in the query\n * @return {?} QueryList<T>\n */\nexport function query(memoryIndex, predicate, descend, \n// TODO: \"read\" should be an AbstractType (FW-486)\nread) {\n    ngDevMode && assertPreviousIsParent(getIsParent());\n    /** @type {?} */\n    var queryList = new QueryList();\n    /** @type {?} */\n    var queries = getOrCreateCurrentQueries(LQueries_);\n    queries.track(queryList, predicate, descend, read);\n    storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n    if (memoryIndex != null) {\n        store(memoryIndex, queryList);\n    }\n    return queryList;\n}\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n * Returns true if a query got dirty during change detection, false otherwise.\n * @param {?} queryList\n * @return {?}\n */\nexport function queryRefresh(queryList) {\n    /** @type {?} */\n    var queryListImpl = (/** @type {?} */ ((queryList)));\n    if (queryList.dirty) {\n        queryList.reset(queryListImpl._valuesTree);\n        queryList.notifyOnChanges();\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=query.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef as ViewEngine_ElementRef } from '../linker/element_ref';\nimport { TemplateRef as ViewEngine_TemplateRef } from '../linker/template_ref';\nimport { createTemplateRef } from './view_engine_compatibility';\n/**\n * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n * `<ng-template>` element.\n * @param {?} tNode\n * @param {?} currentView\n * @return {?}\n */\nexport function templateRefExtractor(tNode, currentView) {\n    return createTemplateRef(ViewEngine_TemplateRef, ViewEngine_ElementRef, tNode, currentView);\n}\n//# sourceMappingURL=view_engine_compatibility_prebound.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nimport { LifecycleHooksFeature, renderComponent, whenRendered } from './component';\nimport { defineBase, defineComponent, defineDirective, defineNgModule, definePipe } from './definition';\nimport { getHostElement, getRenderedText } from './discovery_utils';\nimport { InheritDefinitionFeature } from './features/inherit_definition_feature';\nimport { NgOnChangesFeature } from './features/ng_onchanges_feature';\nimport { ProvidersFeature } from './features/providers_feature';\nexport { ComponentFactory, ComponentFactoryResolver, ComponentRef, injectComponentFactoryResolver } from './component_ref';\nexport { getFactoryOf, getInheritedFactory } from './di';\nexport { allocHostVars, bind, interpolation1, interpolation2, interpolation3, interpolation4, interpolation5, interpolation6, interpolation7, interpolation8, interpolationV, container, containerRefreshStart, containerRefreshEnd, nextContext, element, elementAttribute, elementClassProp, elementEnd, elementProperty, elementStart, elementContainerStart, elementContainerEnd, elementStyling, elementStylingMap, elementStyleProp, elementStylingApply, listener, store, load, namespaceHTML, namespaceMathML, namespaceSVG, projection, projectionDef, text, textBinding, template, reference, embeddedViewStart, embeddedViewEnd, detectChanges, markDirty, tick, directiveInject, injectAttribute, getCurrentView } from './instructions';\nexport { restoreView, enableBindings, disableBindings, } from './state';\nexport { i18n, i18nAttributes, i18nExp, i18nStart, i18nEnd, i18nApply, i18nPostprocess } from './i18n';\nexport { NgModuleFactory, NgModuleRef } from './ng_module_ref';\nexport { setClassMetadata, } from './metadata';\nexport { pipe, pipeBind1, pipeBind2, pipeBind3, pipeBind4, pipeBindV, } from './pipe';\nexport { QueryList, query, queryRefresh, } from './query';\nexport { registerContentQuery, loadQueryList, } from './instructions';\nexport { pureFunction0, pureFunction1, pureFunction2, pureFunction3, pureFunction4, pureFunction5, pureFunction6, pureFunction7, pureFunction8, pureFunctionV, } from './pure_function';\nexport { templateRefExtractor } from './view_engine_compatibility_prebound';\nexport { NgOnChangesFeature, InheritDefinitionFeature, ProvidersFeature, LifecycleHooksFeature, defineComponent, defineDirective, defineNgModule, defineBase, definePipe, getHostElement, getRenderedText, renderComponent, whenRendered, };\nexport { NO_CHANGE } from './tokens';\n//# sourceMappingURL=index.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nvar BRAND = '__SANITIZER_TRUSTED_BRAND__';\n/** @enum {string} */\nvar BypassType = {\n    Url: 'Url',\n    Html: 'Html',\n    ResourceUrl: 'ResourceUrl',\n    Script: 'Script',\n    Style: 'Style',\n};\nexport { BypassType };\n/**\n * A branded trusted string used with sanitization.\n *\n * See: {\\@link TrustedHtmlString}, {\\@link TrustedResourceUrlString}, {\\@link TrustedScriptString},\n * {\\@link TrustedStyleString}, {\\@link TrustedUrlString}\n * @record\n */\nexport function TrustedString() { }\n/**\n * A branded trusted string used with sanitization of `html` strings.\n *\n * See: {\\@link bypassSanitizationTrustHtml} and {\\@link htmlSanitizer}.\n * @record\n */\nexport function TrustedHtmlString() { }\n/**\n * A branded trusted string used with sanitization of `style` strings.\n *\n * See: {\\@link bypassSanitizationTrustStyle} and {\\@link styleSanitizer}.\n * @record\n */\nexport function TrustedStyleString() { }\n/**\n * A branded trusted string used with sanitization of `url` strings.\n *\n * See: {\\@link bypassSanitizationTrustScript} and {\\@link scriptSanitizer}.\n * @record\n */\nexport function TrustedScriptString() { }\n/**\n * A branded trusted string used with sanitization of `url` strings.\n *\n * See: {\\@link bypassSanitizationTrustUrl} and {\\@link urlSanitizer}.\n * @record\n */\nexport function TrustedUrlString() { }\n/**\n * A branded trusted string used with sanitization of `resourceUrl` strings.\n *\n * See: {\\@link bypassSanitizationTrustResourceUrl} and {\\@link resourceUrlSanitizer}.\n * @record\n */\nexport function TrustedResourceUrlString() { }\n/**\n * @param {?} value\n * @param {?} type\n * @return {?}\n */\nexport function allowSanitizationBypass(value, type) {\n    return (value instanceof String && (/** @type {?} */ (value))[BRAND] === type);\n}\n/**\n * Mark `html` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {\\@link htmlSanitizer} to be trusted implicitly.\n *\n * @param {?} trustedHtml `html` string which needs to be implicitly trusted.\n * @return {?} a `html` `String` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustHtml(trustedHtml) {\n    return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n}\n/**\n * Mark `style` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {\\@link styleSanitizer} to be trusted implicitly.\n *\n * @param {?} trustedStyle `style` string which needs to be implicitly trusted.\n * @return {?} a `style` `String` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustStyle(trustedStyle) {\n    return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n}\n/**\n * Mark `script` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {\\@link scriptSanitizer} to be trusted implicitly.\n *\n * @param {?} trustedScript `script` string which needs to be implicitly trusted.\n * @return {?} a `script` `String` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustScript(trustedScript) {\n    return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {\\@link urlSanitizer} to be trusted implicitly.\n *\n * @param {?} trustedUrl `url` string which needs to be implicitly trusted.\n * @return {?} a `url` `String` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustUrl(trustedUrl) {\n    return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {\\@link resourceUrlSanitizer} to be trusted implicitly.\n *\n * @param {?} trustedResourceUrl `url` string which needs to be implicitly trusted.\n * @return {?} a `url` `String` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n    return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n}\n/**\n * @param {?} trustedString\n * @param {?} mode\n * @return {?}\n */\nfunction bypassSanitizationTrustString(trustedString, mode) {\n    /** @type {?} */\n    var trusted = /** @type {?} */ (new String(trustedString));\n    trusted[BRAND] = mode;\n    return trusted;\n}\n//# sourceMappingURL=bypass.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { isDevMode } from '../is_dev_mode';\nimport { _sanitizeUrl } from './url_sanitizer';\n/** *\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n  @type {?} */\nvar VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n/** @type {?} */\nvar TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n/** @type {?} */\nvar COLOR_FNS = '(?:rgb|hsl)a?';\n/** @type {?} */\nvar GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n/** @type {?} */\nvar CSS3_FNS = '(?:calc|attr)';\n/** @type {?} */\nvar FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n/** @type {?} */\nvar SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n    (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n    (FN_ARGS + \")$\"), 'g');\n/** *\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n  @type {?} */\nvar URL_RE = /^url\\(([^)]+)\\)$/;\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n *\n * This code was taken from the Closure sanitization library.\n * @param {?} value\n * @return {?}\n */\nfunction hasBalancedQuotes(value) {\n    /** @type {?} */\n    var outsideSingle = true;\n    /** @type {?} */\n    var outsideDouble = true;\n    for (var i = 0; i < value.length; i++) {\n        /** @type {?} */\n        var c = value.charAt(i);\n        if (c === '\\'' && outsideDouble) {\n            outsideSingle = !outsideSingle;\n        }\n        else if (c === '\"' && outsideSingle) {\n            outsideDouble = !outsideDouble;\n        }\n    }\n    return outsideSingle && outsideDouble;\n}\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n * @param {?} value\n * @return {?}\n */\nexport function _sanitizeStyle(value) {\n    value = String(value).trim(); // Make sure it's actually a string.\n    if (!value)\n        return '';\n    /** @type {?} */\n    var urlMatch = value.match(URL_RE);\n    if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n        value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n        return value; // Safe style values.\n    }\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n    }\n    return 'unsafe';\n}\n/**\n * Used to intercept and sanitize style values before they are written to the renderer.\n *\n * This function is designed to be called in two modes. When a value is not provided\n * then the function will return a boolean whether a property will be sanitized later.\n * If a value is provided then the sanitized version of that will be returned.\n * @record\n */\nexport function StyleSanitizeFn() { }\n//# sourceMappingURL=style_sanitizer.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { SANITIZER } from '../render3/interfaces/view';\nimport { getLView } from '../render3/state';\nimport { stringify } from '../render3/util';\nimport { allowSanitizationBypass } from './bypass';\nimport { _sanitizeHtml as _sanitizeHtml } from './html_sanitizer';\nimport { SecurityContext } from './security';\nimport { _sanitizeStyle as _sanitizeStyle } from './style_sanitizer';\nimport { _sanitizeUrl as _sanitizeUrl } from './url_sanitizer';\n/**\n * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `html` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {\\@link bypassSanitizationTrustHtml}.\n *\n * @param {?} unsafeHtml untrusted `html`, typically from the user.\n * @return {?} `html` string which is safe to display to user, because all of the dangerous javascript\n * and urls have been removed.\n */\nexport function sanitizeHtml(unsafeHtml) {\n    /** @type {?} */\n    var sanitizer = getLView()[SANITIZER];\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.HTML, unsafeHtml) || '';\n    }\n    if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n        return unsafeHtml.toString();\n    }\n    return _sanitizeHtml(document, stringify(unsafeHtml));\n}\n/**\n * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `style` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {\\@link bypassSanitizationTrustStyle}.\n *\n * @param {?} unsafeStyle untrusted `style`, typically from the user.\n * @return {?} `style` string which is safe to bind to the `style` properties, because all of the\n * dangerous javascript and urls have been removed.\n */\nexport function sanitizeStyle(unsafeStyle) {\n    /** @type {?} */\n    var sanitizer = getLView()[SANITIZER];\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.STYLE, unsafeStyle) || '';\n    }\n    if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n        return unsafeStyle.toString();\n    }\n    return _sanitizeStyle(stringify(unsafeStyle));\n}\n/**\n * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n * dangerous\n * content.\n *\n * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n * removes it.\n *\n * It is possible to mark a string as trusted by calling {\\@link bypassSanitizationTrustUrl}.\n *\n * @param {?} unsafeUrl untrusted `url`, typically from the user.\n * @return {?} `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * all of the dangerous javascript has been removed.\n */\nexport function sanitizeUrl(unsafeUrl) {\n    /** @type {?} */\n    var sanitizer = getLView()[SANITIZER];\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.URL, unsafeUrl) || '';\n    }\n    if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n        return unsafeUrl.toString();\n    }\n    return _sanitizeUrl(stringify(unsafeUrl));\n}\n/**\n * A `url` sanitizer which only lets trusted `url`s through.\n *\n * This passes only `url`s marked trusted by calling {\\@link bypassSanitizationTrustResourceUrl}.\n *\n * @param {?} unsafeResourceUrl untrusted `url`, typically from the user.\n * @return {?} `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * only trusted `url`s have been allowed to pass.\n */\nexport function sanitizeResourceUrl(unsafeResourceUrl) {\n    /** @type {?} */\n    var sanitizer = getLView()[SANITIZER];\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n    }\n    if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n        return unsafeResourceUrl.toString();\n    }\n    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n}\n/**\n * A `script` sanitizer which only lets trusted javascript through.\n *\n * This passes only `script`s marked trusted by calling {\\@link\n * bypassSanitizationTrustScript}.\n *\n * @param {?} unsafeScript untrusted `script`, typically from the user.\n * @return {?} `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n * because only trusted `scripts` have been allowed to pass.\n */\nexport function sanitizeScript(unsafeScript) {\n    /** @type {?} */\n    var sanitizer = getLView()[SANITIZER];\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.SCRIPT, unsafeScript) || '';\n    }\n    if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n        return unsafeScript.toString();\n    }\n    throw new Error('unsafe value used in a script context');\n}\n/** *\n * The default style sanitizer will handle sanitization for style properties by\n * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n  @type {?} */\nexport var defaultStyleSanitizer = (/** @type {?} */ (function (prop, value) {\n    if (value === undefined) {\n        return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n            prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n            prop === 'list-style-image';\n    }\n    return sanitizeStyle(value);\n}));\n//# sourceMappingURL=sanitization.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { defineInjectable, defineInjector, } from '../../di/defs';\nimport { inject } from '../../di/injector_compatibility';\nimport * as r3 from '../index';\nimport * as sanitization from '../../sanitization/sanitization';\n/** *\n * A mapping of the \\@angular/core API surface used in generated expressions to the actual symbols.\n *\n * This should be kept up to date with the public exports of \\@angular/core.\n  @type {?} */\nexport var angularCoreEnv = {\n    'ɵdefineBase': r3.defineBase,\n    'ɵdefineComponent': r3.defineComponent,\n    'ɵdefineDirective': r3.defineDirective,\n    'defineInjectable': defineInjectable,\n    'defineInjector': defineInjector,\n    'ɵdefineNgModule': r3.defineNgModule,\n    'ɵdefinePipe': r3.definePipe,\n    'ɵdirectiveInject': r3.directiveInject,\n    'ɵgetFactoryOf': r3.getFactoryOf,\n    'ɵgetInheritedFactory': r3.getInheritedFactory,\n    'inject': inject,\n    'ɵinjectAttribute': r3.injectAttribute,\n    'ɵtemplateRefExtractor': r3.templateRefExtractor,\n    'ɵNgOnChangesFeature': r3.NgOnChangesFeature,\n    'ɵProvidersFeature': r3.ProvidersFeature,\n    'ɵInheritDefinitionFeature': r3.InheritDefinitionFeature,\n    'ɵelementAttribute': r3.elementAttribute,\n    'ɵbind': r3.bind,\n    'ɵcontainer': r3.container,\n    'ɵnextContext': r3.nextContext,\n    'ɵcontainerRefreshStart': r3.containerRefreshStart,\n    'ɵcontainerRefreshEnd': r3.containerRefreshEnd,\n    'ɵloadQueryList': r3.loadQueryList,\n    'ɵnamespaceHTML': r3.namespaceHTML,\n    'ɵnamespaceMathML': r3.namespaceMathML,\n    'ɵnamespaceSVG': r3.namespaceSVG,\n    'ɵenableBindings': r3.enableBindings,\n    'ɵdisableBindings': r3.disableBindings,\n    'ɵallocHostVars': r3.allocHostVars,\n    'ɵelementStart': r3.elementStart,\n    'ɵelementEnd': r3.elementEnd,\n    'ɵelement': r3.element,\n    'ɵelementContainerStart': r3.elementContainerStart,\n    'ɵelementContainerEnd': r3.elementContainerEnd,\n    'ɵpureFunction0': r3.pureFunction0,\n    'ɵpureFunction1': r3.pureFunction1,\n    'ɵpureFunction2': r3.pureFunction2,\n    'ɵpureFunction3': r3.pureFunction3,\n    'ɵpureFunction4': r3.pureFunction4,\n    'ɵpureFunction5': r3.pureFunction5,\n    'ɵpureFunction6': r3.pureFunction6,\n    'ɵpureFunction7': r3.pureFunction7,\n    'ɵpureFunction8': r3.pureFunction8,\n    'ɵpureFunctionV': r3.pureFunctionV,\n    'ɵgetCurrentView': r3.getCurrentView,\n    'ɵrestoreView': r3.restoreView,\n    'ɵinterpolation1': r3.interpolation1,\n    'ɵinterpolation2': r3.interpolation2,\n    'ɵinterpolation3': r3.interpolation3,\n    'ɵinterpolation4': r3.interpolation4,\n    'ɵinterpolation5': r3.interpolation5,\n    'ɵinterpolation6': r3.interpolation6,\n    'ɵinterpolation7': r3.interpolation7,\n    'ɵinterpolation8': r3.interpolation8,\n    'ɵinterpolationV': r3.interpolationV,\n    'ɵelementClassProp': r3.elementClassProp,\n    'ɵlistener': r3.listener,\n    'ɵload': r3.load,\n    'ɵprojection': r3.projection,\n    'ɵelementProperty': r3.elementProperty,\n    'ɵpipeBind1': r3.pipeBind1,\n    'ɵpipeBind2': r3.pipeBind2,\n    'ɵpipeBind3': r3.pipeBind3,\n    'ɵpipeBind4': r3.pipeBind4,\n    'ɵpipeBindV': r3.pipeBindV,\n    'ɵprojectionDef': r3.projectionDef,\n    'ɵpipe': r3.pipe,\n    'ɵquery': r3.query,\n    'ɵqueryRefresh': r3.queryRefresh,\n    'ɵregisterContentQuery': r3.registerContentQuery,\n    'ɵreference': r3.reference,\n    'ɵelementStyling': r3.elementStyling,\n    'ɵelementStylingMap': r3.elementStylingMap,\n    'ɵelementStyleProp': r3.elementStyleProp,\n    'ɵelementStylingApply': r3.elementStylingApply,\n    'ɵtemplate': r3.template,\n    'ɵtext': r3.text,\n    'ɵtextBinding': r3.textBinding,\n    'ɵembeddedViewStart': r3.embeddedViewStart,\n    'ɵembeddedViewEnd': r3.embeddedViewEnd,\n    'ɵi18n': r3.i18n,\n    'ɵi18nAttributes': r3.i18nAttributes,\n    'ɵi18nExp': r3.i18nExp,\n    'ɵi18nStart': r3.i18nStart,\n    'ɵi18nEnd': r3.i18nEnd,\n    'ɵi18nApply': r3.i18nApply,\n    'ɵi18nPostprocess': r3.i18nPostprocess,\n    'ɵsanitizeHtml': sanitization.sanitizeHtml,\n    'ɵsanitizeStyle': sanitization.sanitizeStyle,\n    'ɵdefaultStyleSanitizer': sanitization.defaultStyleSanitizer,\n    'ɵsanitizeResourceUrl': sanitization.sanitizeResourceUrl,\n    'ɵsanitizeScript': sanitization.sanitizeScript,\n    'ɵsanitizeUrl': sanitization.sanitizeUrl\n};\n//# sourceMappingURL=environment.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** *\n * \\@description\n *\n * Represents a type that a Component or other object is instances of.\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * \\@publicApi\n  @type {?} */\nexport var Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nexport function isType(v) {\n    return typeof v === 'function';\n}\n/** @typedef {?} */\nvar Mutable;\nexport { Mutable };\n//# sourceMappingURL=type.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Type, isType } from '../type';\nimport { global, stringify } from '../util';\nimport { ANNOTATIONS, PARAMETERS, PROP_METADATA } from '../util/decorators';\n/** *\n * Attention: These regex has to hold even if the code is minified!\n  @type {?} */\nexport var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n/** @type {?} */\nexport var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n/** @type {?} */\nexport var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\nvar ReflectionCapabilities = /** @class */ (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || global['Reflect'];\n    }\n    /**\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.isReflectionEnabled = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.factory = /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, [void 0].concat(args)))();\n    }; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    function (paramTypes, paramAnnotations) {\n        /** @type {?} */\n        var result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownParameters = /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (type, parentCtor) {\n        /** @type {?} */\n        var typeStr = type.toString();\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(typeStr) ||\n            (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n            return null;\n        }\n        // Prefer the direct API.\n        if ((/** @type {?} */ (type)).parameters && (/** @type {?} */ (type)).parameters !== parentCtor.parameters) {\n            return (/** @type {?} */ (type)).parameters;\n        }\n        /** @type {?} */\n        var tsickleCtorParams = (/** @type {?} */ (type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            /** @type {?} */\n            var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            /** @type {?} */\n            var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            /** @type {?} */\n            var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        /** @type {?} */\n        var paramAnnotations = type.hasOwnProperty(PARAMETERS) && (/** @type {?} */ (type))[PARAMETERS];\n        /** @type {?} */\n        var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array((/** @type {?} */ (type.length))).fill(undefined);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        /** @type {?} */\n        var parentCtor = getParentCtor(type);\n        /** @type {?} */\n        var parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownAnnotations = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).annotations && (/** @type {?} */ (typeOrFunc)).annotations !== parentCtor.annotations) {\n            /** @type {?} */\n            var annotations = (/** @type {?} */ (typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).decorators && (/** @type {?} */ (typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata((/** @type {?} */ (typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return (/** @type {?} */ (typeOrFunc))[ANNOTATIONS];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        /** @type {?} */\n        var parentCtor = getParentCtor(typeOrFunc);\n        /** @type {?} */\n        var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        /** @type {?} */\n        var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownPropMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).propMetadata &&\n            (/** @type {?} */ (typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            /** @type {?} */\n            var propMetadata = (/** @type {?} */ (typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).propDecorators &&\n            (/** @type {?} */ (typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            /** @type {?} */\n            var propDecorators_1 = (/** @type {?} */ (typeOrFunc)).propDecorators;\n            /** @type {?} */\n            var propMetadata_1 = /** @type {?} */ ({});\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return (/** @type {?} */ (typeOrFunc))[PROP_METADATA];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        /** @type {?} */\n        var parentCtor = getParentCtor(typeOrFunc);\n        /** @type {?} */\n        var propMetadata = {};\n        if (parentCtor !== Object) {\n            /** @type {?} */\n            var parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        /** @type {?} */\n        var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                /** @type {?} */\n                var decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                decorators.push.apply(decorators, ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.guards = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return {}; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return /** @type {?} */ (new Function('o', 'return o.' + name + ';')); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return /** @type {?} */ (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        /** @type {?} */\n        var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return /** @type {?} */ (new Function('o', 'args', functionBody));\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return \"./\" + stringify(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveEnum = /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\nexport { ReflectionCapabilities };\nif (false) {\n    /** @type {?} */\n    ReflectionCapabilities.prototype._reflect;\n}\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        /** @type {?} */\n        var decoratorType = decoratorInvocation.type;\n        /** @type {?} */\n        var annotationCls = decoratorType.annotationCls;\n        /** @type {?} */\n        var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    /** @type {?} */\n    var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n    /** @type {?} */\n    var parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n//# sourceMappingURL=reflection_capabilities.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Host, Inject, Optional, Self, SkipSelf } from '../../di/metadata';\nimport { Attribute } from '../../metadata/di';\nimport { ReflectionCapabilities } from '../../reflection/reflection_capabilities';\nimport { getCompilerFacade } from './compiler_facade';\n/** @type {?} */\nvar _reflect = null;\n/**\n * @return {?}\n */\nexport function getReflect() {\n    return (_reflect = _reflect || new ReflectionCapabilities());\n}\n/**\n * @param {?} type\n * @return {?}\n */\nexport function reflectDependencies(type) {\n    return convertDependencies(getReflect().parameters(type));\n}\n/**\n * @param {?} deps\n * @return {?}\n */\nexport function convertDependencies(deps) {\n    /** @type {?} */\n    var compiler = getCompilerFacade();\n    return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n}\n/**\n * @param {?} compiler\n * @param {?} dep\n * @return {?}\n */\nfunction reflectDependency(compiler, dep) {\n    /** @type {?} */\n    var meta = {\n        token: null,\n        host: false,\n        optional: false,\n        resolved: compiler.R3ResolvedDependencyType.Token,\n        self: false,\n        skipSelf: false,\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    function setTokenAndResolvedType(token) {\n        meta.resolved = compiler.R3ResolvedDependencyType.Token;\n        meta.token = token;\n    }\n    if (Array.isArray(dep)) {\n        if (dep.length === 0) {\n            throw new Error('Dependency array must have arguments.');\n        }\n        for (var j = 0; j < dep.length; j++) {\n            /** @type {?} */\n            var param = dep[j];\n            if (param === undefined) {\n                // param may be undefined if type of dep is not set by ngtsc\n                continue;\n            }\n            else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                meta.optional = true;\n            }\n            else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                meta.skipSelf = true;\n            }\n            else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                meta.self = true;\n            }\n            else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                meta.host = true;\n            }\n            else if (param instanceof Inject) {\n                meta.token = param.token;\n            }\n            else if (param instanceof Attribute) {\n                if (param.attributeName === undefined) {\n                    throw new Error(\"Attribute name must be defined.\");\n                }\n                meta.token = param.attributeName;\n                meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n            }\n            else {\n                setTokenAndResolvedType(param);\n            }\n        }\n    }\n    else {\n        setTokenAndResolvedType(dep);\n    }\n    return meta;\n}\n//# sourceMappingURL=util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Component } from '../../metadata/directives';\nimport { assertDefined } from '../assert';\nimport { getComponentDef, getDirectiveDef, getNgModuleDef, getPipeDef } from '../definition';\nimport { NG_COMPONENT_DEF, NG_DIRECTIVE_DEF, NG_INJECTOR_DEF, NG_MODULE_DEF, NG_PIPE_DEF } from '../fields';\nimport { stringify } from '../util';\nimport { getCompilerFacade } from './compiler_facade';\nimport { angularCoreEnv } from './environment';\nimport { getReflect, reflectDependencies } from './util';\n/** @type {?} */\nvar EMPTY_ARRAY = [];\n/**\n * Compiles a module in JIT mode.\n *\n * This function automatically gets called when a class has a `\\@NgModule` decorator.\n * @param {?} moduleType\n * @param {?=} ngModule\n * @return {?}\n */\nexport function compileNgModule(moduleType, ngModule) {\n    if (ngModule === void 0) { ngModule = {}; }\n    compileNgModuleDefs(moduleType, ngModule);\n    setScopeOnDeclaredComponents(moduleType, ngModule);\n}\n/**\n * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n * @param {?} moduleType\n * @param {?} ngModule\n * @return {?}\n */\nexport function compileNgModuleDefs(moduleType, ngModule) {\n    ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n    ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n    /** @type {?} */\n    var declarations = flatten(ngModule.declarations || EMPTY_ARRAY);\n    /** @type {?} */\n    /** @nocollapse */ var ngModuleDef = null;\n    Object.defineProperty(moduleType, NG_MODULE_DEF, {\n        configurable: true,\n        get: function () {\n            if (ngModuleDef === null) {\n                ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                    type: moduleType,\n                    bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY),\n                    declarations: declarations,\n                    imports: flatten(ngModule.imports || EMPTY_ARRAY).map(expandModuleWithProviders),\n                    exports: flatten(ngModule.exports || EMPTY_ARRAY).map(expandModuleWithProviders),\n                    emitInline: true,\n                });\n            }\n            return ngModuleDef;\n        }\n    });\n    /** @type {?} */\n    /** @nocollapse */ var ngInjectorDef = null;\n    Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n        get: function () {\n            if (ngInjectorDef === null) {\n                /** @type {?} */\n                var meta = {\n                    name: moduleType.name,\n                    type: moduleType,\n                    deps: reflectDependencies(moduleType),\n                    providers: ngModule.providers || EMPTY_ARRAY,\n                    imports: [\n                        ngModule.imports || EMPTY_ARRAY,\n                        ngModule.exports || EMPTY_ARRAY,\n                    ],\n                };\n                ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n            }\n            return ngInjectorDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n}\n/**\n * Some declared components may be compiled asynchronously, and thus may not have their\n * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n * the `ngSelectorScope` property of the declared type.\n * @param {?} moduleType\n * @param {?} ngModule\n * @return {?}\n */\nfunction setScopeOnDeclaredComponents(moduleType, ngModule) {\n    /** @type {?} */\n    var declarations = flatten(ngModule.declarations || EMPTY_ARRAY);\n    /** @type {?} */\n    var transitiveScopes = transitiveScopesFor(moduleType);\n    declarations.forEach(function (declaration) {\n        if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n            /** @type {?} */\n            var component = /** @type {?} */ (declaration);\n            patchComponentDefWithScope(component, transitiveScopes);\n        }\n        else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n            // Set `ngSelectorScope` for future reference when the component compilation finishes.\n            (/** @type {?} */ (declaration)).ngSelectorScope = moduleType;\n        }\n    });\n}\n/**\n * Patch the definition of a component with directives and pipes from the compilation scope of\n * a given module.\n * @template C\n * @param {?} component\n * @param {?} transitiveScopes\n * @return {?}\n */\nexport function patchComponentDefWithScope(component, transitiveScopes) {\n    /** @type {?} */\n    var componentDef = /** @type {?} */ ((getComponentDef(component)));\n    /** @type {?} */\n    var meta = /** @type {?} */ (getReflect().annotations(component).filter(function (m) { return m instanceof Component; }).pop());\n    if (!meta) {\n        throw new Error(stringify(component) + \" has no component metadata\");\n    }\n    /** @type {?} */\n    var directives = (meta.directives || []).concat(Array.from(transitiveScopes.compilation.directives));\n    if (directives.length) {\n        componentDef.directiveDefs = function () {\n            return directives.map(function (dir) { return getDirectiveDef(dir) || /** @type {?} */ ((getComponentDef(dir))); }).filter(function (def) { return !!def; });\n        };\n    }\n    /** @type {?} */\n    var pipes = (meta.pipes || []).concat(Array.from(transitiveScopes.compilation.pipes));\n    if (pipes.length) {\n        componentDef.pipeDefs = function () { return pipes.map(function (pipe) { return ((getPipeDef(pipe))); }); };\n    }\n}\n/**\n * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n *\n * This operation is memoized and the result is cached on the module's definition. It can be called\n * on modules with components that have not fully compiled yet, but the result should not be used\n * until they have.\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\nexport function transitiveScopesFor(moduleType) {\n    if (!isNgModule(moduleType)) {\n        throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n    }\n    /** @type {?} */\n    var def = /** @type {?} */ ((getNgModuleDef(moduleType)));\n    if (def.transitiveCompileScopes !== null) {\n        return def.transitiveCompileScopes;\n    }\n    /** @type {?} */\n    var scopes = {\n        compilation: {\n            directives: new Set(),\n            pipes: new Set(),\n        },\n        exported: {\n            directives: new Set(),\n            pipes: new Set(),\n        },\n    };\n    def.declarations.forEach(function (declared) {\n        /** @type {?} */\n        var declaredWithDefs = /** @type {?} */ (declared);\n        if (getPipeDef(declaredWithDefs)) {\n            scopes.compilation.pipes.add(declared);\n        }\n        else {\n            // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n            // had its template compiled yet. In either case, it gets added to the compilation's\n            // directives.\n            scopes.compilation.directives.add(declared);\n        }\n    });\n    def.imports.forEach(function (imported) {\n        /** @type {?} */\n        var importedTyped = /** @type {?} */ (imported);\n        if (!isNgModule(importedTyped)) {\n            throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n        }\n        /** @type {?} */\n        var importedScope = transitiveScopesFor(importedTyped);\n        importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n        importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n    });\n    def.exports.forEach(function (exported) {\n        /** @type {?} */\n        var exportedTyped = /** @type {?} */ (exported);\n        // Either the type is a module, a pipe, or a component/directive (which may not have an\n        // ngComponentDef as it might be compiled asynchronously).\n        if (isNgModule(exportedTyped)) {\n            /** @type {?} */\n            var exportedScope = transitiveScopesFor(exportedTyped);\n            exportedScope.exported.directives.forEach(function (entry) {\n                scopes.compilation.directives.add(entry);\n                scopes.exported.directives.add(entry);\n            });\n            exportedScope.exported.pipes.forEach(function (entry) {\n                scopes.compilation.pipes.add(entry);\n                scopes.exported.pipes.add(entry);\n            });\n        }\n        else if (getNgModuleDef(exportedTyped)) {\n            scopes.exported.pipes.add(exportedTyped);\n        }\n        else {\n            scopes.exported.directives.add(exportedTyped);\n        }\n    });\n    def.transitiveCompileScopes = scopes;\n    return scopes;\n}\n/**\n * @template T\n * @param {?} values\n * @return {?}\n */\nfunction flatten(values) {\n    /** @type {?} */\n    var out = [];\n    values.forEach(function (value) {\n        if (Array.isArray(value)) {\n            out.push.apply(out, flatten(value));\n        }\n        else {\n            out.push(value);\n        }\n    });\n    return out;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction expandModuleWithProviders(value) {\n    if (isModuleWithProviders(value)) {\n        return value.ngModule;\n    }\n    return value;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isModuleWithProviders(value) {\n    return (/** @type {?} */ (value)).ngModule !== undefined;\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction isNgModule(value) {\n    return !!getNgModuleDef(value);\n}\n//# sourceMappingURL=module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { componentNeedsResolution, maybeQueueResolutionOfComponentResources } from '../../metadata/resource_loading';\nimport { ViewEncapsulation } from '../../metadata/view';\nimport { stringify } from '../../util';\nimport { EMPTY_ARRAY } from '../definition';\nimport { NG_COMPONENT_DEF, NG_DIRECTIVE_DEF } from '../fields';\nimport { getCompilerFacade } from './compiler_facade';\nimport { angularCoreEnv } from './environment';\nimport { patchComponentDefWithScope, transitiveScopesFor } from './module';\nimport { getReflect, reflectDependencies } from './util';\n/**\n * Compile an Angular component according to its decorator metadata, and patch the resulting\n * ngComponentDef onto the component type.\n *\n * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n * until the global queue has been resolved with a call to `resolveComponentResources`.\n * @param {?} type\n * @param {?} metadata\n * @return {?}\n */\nexport function compileComponent(type, metadata) {\n    /** @type {?} */\n    /** @nocollapse */ var ngComponentDef = null;\n    // Metadata may have resources which need to be resolved.\n    maybeQueueResolutionOfComponentResources(metadata);\n    Object.defineProperty(type, NG_COMPONENT_DEF, {\n        get: function () {\n            /** @type {?} */\n            var compiler = getCompilerFacade();\n            if (ngComponentDef === null) {\n                if (componentNeedsResolution(metadata)) {\n                    /** @type {?} */\n                    var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                    if (metadata.templateUrl) {\n                        error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                    }\n                    if (metadata.styleUrls && metadata.styleUrls.length) {\n                        error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                    }\n                    error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                    throw new Error(error.join('\\n'));\n                }\n                /** @type {?} */\n                var meta = tslib_1.__assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(getReflect().propMetadata(type), isViewQuery), directives: [], pipes: new Map(), encapsulation: metadata.encapsulation || ViewEncapsulation.Emulated, viewProviders: metadata.viewProviders || null });\n                ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify(type) + \"/template.html\", meta);\n                // If component compilation is async, then the @NgModule annotation which declares the\n                // component may execute and set an ngSelectorScope property on the component type. This\n                // allows the component to patch itself with directiveDefs from the module after it\n                // finishes compiling.\n                if (hasSelectorScope(type)) {\n                    /** @type {?} */\n                    var scopes = transitiveScopesFor(type.ngSelectorScope);\n                    patchComponentDefWithScope(type, scopes);\n                }\n                else {\n                    patchComponentDefWithScope(type, {\n                        compilation: {\n                            directives: new Set(),\n                            pipes: new Set(),\n                        },\n                        exported: {\n                            directives: new Set(),\n                            pipes: new Set(),\n                        },\n                    });\n                }\n            }\n            return ngComponentDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n}\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\nfunction hasSelectorScope(component) {\n    return (/** @type {?} */ (component)).ngSelectorScope !== undefined;\n}\n/**\n * Compile an Angular directive according to its decorator metadata, and patch the resulting\n * ngDirectiveDef onto the component type.\n *\n * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n * will resolve when compilation completes and the directive becomes usable.\n * @param {?} type\n * @param {?} directive\n * @return {?}\n */\nexport function compileDirective(type, directive) {\n    /** @type {?} */\n    /** @nocollapse */ var ngDirectiveDef = null;\n    Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n        get: function () {\n            if (ngDirectiveDef === null) {\n                /** @type {?} */\n                var facade = directiveMetadata(type, directive);\n                ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n            }\n            return ngDirectiveDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n}\n/**\n * @param {?} type\n * @return {?}\n */\nexport function extendsDirectlyFromObject(type) {\n    return Object.getPrototypeOf(type.prototype) === Object.prototype;\n}\n/**\n * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n * `Component`).\n * @param {?} type\n * @param {?} metadata\n * @return {?}\n */\nfunction directiveMetadata(type, metadata) {\n    /** @type {?} */\n    var propMetadata = getReflect().propMetadata(type);\n    return {\n        name: type.name,\n        type: type,\n        typeArgumentCount: 0,\n        selector: /** @type {?} */ ((metadata.selector)),\n        deps: reflectDependencies(type),\n        host: metadata.host || EMPTY_OBJ,\n        propMetadata: propMetadata,\n        inputs: metadata.inputs || EMPTY_ARRAY,\n        outputs: metadata.outputs || EMPTY_ARRAY,\n        queries: extractQueriesMetadata(propMetadata, isContentQuery),\n        lifecycle: {\n            usesOnChanges: type.prototype.ngOnChanges !== undefined,\n        },\n        typeSourceSpan: /** @type {?} */ ((null)),\n        usesInheritance: !extendsDirectlyFromObject(type),\n        exportAs: metadata.exportAs || null,\n        providers: metadata.providers || null,\n    };\n}\n/** @type {?} */\nvar EMPTY_OBJ = {};\n/**\n * @param {?} selector\n * @return {?}\n */\nfunction convertToR3QueryPredicate(selector) {\n    return typeof selector === 'string' ? splitByComma(selector) : selector;\n}\n/**\n * @param {?} propertyName\n * @param {?} ann\n * @return {?}\n */\nexport function convertToR3QueryMetadata(propertyName, ann) {\n    return {\n        propertyName: propertyName,\n        predicate: convertToR3QueryPredicate(ann.selector),\n        descendants: ann.descendants,\n        first: ann.first,\n        read: ann.read ? ann.read : null\n    };\n}\n/**\n * @param {?} propMetadata\n * @param {?} isQueryAnn\n * @return {?}\n */\nfunction extractQueriesMetadata(propMetadata, isQueryAnn) {\n    /** @type {?} */\n    var queriesMeta = [];\n    var _loop_1 = function (field) {\n        if (propMetadata.hasOwnProperty(field)) {\n            propMetadata[field].forEach(function (ann) {\n                if (isQueryAnn(ann)) {\n                    queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                }\n            });\n        }\n    };\n    for (var field in propMetadata) {\n        _loop_1(field);\n    }\n    return queriesMeta;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isContentQuery(value) {\n    /** @type {?} */\n    var name = value.ngMetadataName;\n    return name === 'ContentChild' || name === 'ContentChildren';\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isViewQuery(value) {\n    /** @type {?} */\n    var name = value.ngMetadataName;\n    return name === 'ViewChild' || name === 'ViewChildren';\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction splitByComma(value) {\n    return value.split(',').map(function (piece) { return piece.trim(); });\n}\n//# sourceMappingURL=directive.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NG_PIPE_DEF } from '../fields';\nimport { stringify } from '../util';\nimport { getCompilerFacade } from './compiler_facade';\nimport { angularCoreEnv } from './environment';\nimport { reflectDependencies } from './util';\n/**\n * @param {?} type\n * @param {?} meta\n * @return {?}\n */\nexport function compilePipe(type, meta) {\n    /** @type {?} */\n    /** @nocollapse */ var ngPipeDef = null;\n    Object.defineProperty(type, NG_PIPE_DEF, {\n        get: function () {\n            if (ngPipeDef === null) {\n                ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify(type) + \"/ngPipeDef.js\", {\n                    type: type,\n                    name: type.name,\n                    deps: reflectDependencies(type),\n                    pipeName: meta.name,\n                    pure: meta.pure !== undefined ? meta.pure : true\n                });\n            }\n            return ngPipeDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n}\n//# sourceMappingURL=pipe.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { ChangeDetectionStrategy } from '../change_detection/constants';\nimport { NG_BASE_DEF } from '../render3/fields';\nimport { compileComponent as render3CompileComponent, compileDirective as render3CompileDirective } from '../render3/jit/directive';\nimport { compilePipe as render3CompilePipe } from '../render3/jit/pipe';\nimport { makeDecorator, makePropDecorator } from '../util/decorators';\nimport { fillProperties } from '../util/property';\n/**\n * Type of the Directive decorator / constructor function.\n * \\@publicApi\n * @record\n */\nexport function DirectiveDecorator() { }\n/** *\n * Type of the Directive metadata.\n *\n * \\@publicApi\n  @type {?} */\nexport var Directive = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n}, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n/**\n * Component decorator interface\n *\n * \\@publicApi\n * @record\n */\nexport function ComponentDecorator() { }\n/** *\n * Component decorator and metadata.\n *\n * \\@Annotation\n * \\@publicApi\n  @type {?} */\nexport var Component = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (tslib_1.__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n}, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * \\@publicApi\n * @record\n */\nexport function PipeDecorator() { }\n/** *\n * \\@Annotation\n * \\@publicApi\n  @type {?} */\nexport var Pipe = makeDecorator('Pipe', function (p) { return (tslib_1.__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n/**\n * \\@publicApi\n * @record\n */\nexport function InputDecorator() { }\n/** @type {?} */\nvar initializeBaseDef = function (target) {\n    /** @type {?} */\n    var constructor = target.constructor;\n    /** @nocollapse @type {?} */\n    var inheritedBaseDef = constructor.ngBaseDef;\n    /** @type {?} */\n    var baseDef = constructor.ngBaseDef = {\n        inputs: {},\n        outputs: {},\n        declaredInputs: {},\n    };\n    if (inheritedBaseDef) {\n        fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n        fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n        fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n    }\n};\nvar ɵ0 = initializeBaseDef;\n/** *\n * Does the work of creating the `ngBaseDef` property for the \\@Input and \\@Output decorators.\n * \\@param key \"inputs\" or \"outputs\"\n  @type {?} */\nvar updateBaseDefFromIOProp = function (getProp) {\n    return function (target, name) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        /** @type {?} */\n        var constructor = target.constructor;\n        if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n            initializeBaseDef(target);\n        }\n        /** @nocollapse @type {?} */\n        var baseDef = constructor.ngBaseDef;\n        /** @type {?} */\n        var defProp = getProp(baseDef);\n        defProp[name] = args[0];\n    };\n};\nvar ɵ1 = updateBaseDefFromIOProp;\n/** *\n * \\@Annotation\n * \\@publicApi\n  @type {?} */\nexport var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n/**\n * Type of the Output decorator / constructor function.\n *\n * \\@publicApi\n * @record\n */\nexport function OutputDecorator() { }\n/** *\n * \\@Annotation\n * \\@publicApi\n  @type {?} */\nexport var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n/**\n * Type of the HostBinding decorator / constructor function.\n *\n * \\@publicApi\n * @record\n */\nexport function HostBindingDecorator() { }\n/** *\n * \\@Annotation\n * \\@publicApi\n  @type {?} */\nexport var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * Type of the HostListener decorator / constructor function.\n *\n * \\@publicApi\n * @record\n */\nexport function HostListenerDecorator() { }\n/** *\n * Binds a CSS event to a host listener and supplies configuration metadata.\n * Angular invokes the supplied handler method when the host element emits the specified event,\n * and updates the bound element with the result.\n * If the handler method returns false, applies `preventDefault` on the bound element.\n *\n * \\@usageNotes\n *\n * The following example declares a directive\n * that attaches a click listener to a button and counts clicks.\n *\n * ```\n * \\@Directive({selector: 'button[counting]'})\n * class CountClicks {\n *   numberOfClicks = 0;\n *\n * \\@HostListener('click', ['$event.target'])\n *   onClick(btn) {\n *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n *  }\n * }\n *\n * \\@Component({\n *   selector: 'app',\n *   template: '<button counting>Increment</button>',\n * })\n * class App {}\n * ```\n *\n * \\@Annotation\n * \\@publicApi\n  @type {?} */\nexport var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n/** @type {?} */\nexport var SWITCH_COMPILE_COMPONENT__POST_R3__ = render3CompileComponent;\n/** @type {?} */\nexport var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = render3CompileDirective;\n/** @type {?} */\nexport var SWITCH_COMPILE_PIPE__POST_R3__ = render3CompilePipe;\n/** @type {?} */\nvar SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n/** @type {?} */\nvar SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n/** @type {?} */\nvar SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\nexport { ɵ0, ɵ1 };\n//# sourceMappingURL=directives.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ReflectionCapabilities } from '../reflection/reflection_capabilities';\nimport { getClosureSafeProperty } from '../util/property';\nimport { inject, injectArgs } from './injector_compatibility';\nvar ɵ0 = getClosureSafeProperty;\n/** @type {?} */\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0 });\n/** @type {?} */\nvar EMPTY_ARRAY = [];\n/**\n * @param {?} type\n * @param {?=} provider\n * @return {?}\n */\nexport function convertInjectableProviderToFactory(type, provider) {\n    if (!provider) {\n        /** @type {?} */\n        var reflectionCapabilities = new ReflectionCapabilities();\n        /** @type {?} */\n        var deps_1 = reflectionCapabilities.parameters(type);\n        // TODO - convert to flags.\n        return function () { return new (type.bind.apply(type, [void 0].concat(injectArgs(/** @type {?} */ (deps_1)))))(); };\n    }\n    if (USE_VALUE in provider) {\n        /** @type {?} */\n        var valueProvider_1 = (/** @type {?} */ (provider));\n        return function () { return valueProvider_1.useValue; };\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        /** @type {?} */\n        var existingProvider_1 = (/** @type {?} */ (provider));\n        return function () { return inject(existingProvider_1.useExisting); };\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        /** @type {?} */\n        var factoryProvider_1 = (/** @type {?} */ (provider));\n        return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, injectArgs(factoryProvider_1.deps || EMPTY_ARRAY)); };\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        /** @type {?} */\n        var classProvider_1 = (/** @type {?} */ (provider));\n        /** @type {?} */\n        var deps_2 = (/** @type {?} */ (provider)).deps;\n        if (!deps_2) {\n            /** @type {?} */\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_2 = reflectionCapabilities.parameters(type);\n        }\n        return function () {\n            var _a;\n            return new ((_a = classProvider_1.useClass).bind.apply(_a, [void 0].concat(injectArgs(deps_2))))();\n        };\n    }\n    else {\n        /** @type {?} */\n        var deps_3 = (/** @type {?} */ (provider)).deps;\n        if (!deps_3) {\n            /** @type {?} */\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_3 = reflectionCapabilities.parameters(type);\n        }\n        return function () { return new (type.bind.apply(type, [void 0].concat(injectArgs(/** @type {?} */ ((deps_3))))))(); };\n    }\n}\nexport { ɵ0 };\n//# sourceMappingURL=util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { defineInjector } from '../di/defs';\nimport { convertInjectableProviderToFactory } from '../di/util';\nimport { compileNgModule as render3CompileNgModule } from '../render3/jit/module';\nimport { makeDecorator } from '../util/decorators';\n/**\n * Represents the expansion of an `NgModule` into its scopes.\n *\n * A scope is a set of directives and pipes that are visible in a particular context. Each\n * `NgModule` has two scopes. The `compilation` scope is the set of directives and pipes that will\n * be recognized in the templates of components declared by the module. The `exported` scope is the\n * set of directives and pipes exported by a module (that is, module B's exported scope gets added\n * to module A's compilation scope when module A imports B).\n * @record\n */\nexport function NgModuleTransitiveScopes() { }\n/** @type {?} */\nNgModuleTransitiveScopes.prototype.compilation;\n/** @type {?} */\nNgModuleTransitiveScopes.prototype.exported;\n/** @typedef {?} */\nvar NgModuleDefWithMeta;\nexport { NgModuleDefWithMeta };\n/**\n * Runtime link information for NgModules.\n *\n * This is the internal data structure used by the runtime to assemble components, directives,\n * pipes, and injectors.\n *\n * NOTE: Always use `defineNgModule` function to create this object,\n * never create the object directly since the shape of this object\n * can change between versions.\n * @record\n * @template T\n */\nexport function NgModuleDef() { }\n/**\n * Token representing the module. Used by DI.\n * @type {?}\n */\nNgModuleDef.prototype.type;\n/**\n * List of components to bootstrap.\n * @type {?}\n */\nNgModuleDef.prototype.bootstrap;\n/**\n * List of components, directives, and pipes declared by this module.\n * @type {?}\n */\nNgModuleDef.prototype.declarations;\n/**\n * List of modules or `ModuleWithProviders` imported by this module.\n * @type {?}\n */\nNgModuleDef.prototype.imports;\n/**\n * List of modules, `ModuleWithProviders`, components, directives, or pipes exported by this\n * module.\n * @type {?}\n */\nNgModuleDef.prototype.exports;\n/**\n * Cached value of computed `transitiveCompileScopes` for this module.\n *\n * This should never be read directly, but accessed via `transitiveScopesFor`.\n * @type {?}\n */\nNgModuleDef.prototype.transitiveCompileScopes;\n/**\n * A wrapper around an NgModule that associates it with the providers.\n *\n * @param T the module type. In Ivy applications, this must be explicitly\n * provided.\n *\n * \\@publicApi\n * @record\n * @template T\n */\nexport function ModuleWithProviders() { }\n/** @type {?} */\nModuleWithProviders.prototype.ngModule;\n/** @type {?|undefined} */\nModuleWithProviders.prototype.providers;\n/**\n * A schema definition associated with an NgModule.\n *\n * @see `\\@NgModule`, `CUSTOM_ELEMENTS_SCHEMA`, `NO_ERRORS_SCHEMA`\n *\n * @param name The name of a defined schema.\n *\n * \\@publicApi\n * @record\n */\nexport function SchemaMetadata() { }\n/** @type {?} */\nSchemaMetadata.prototype.name;\n/** *\n * Defines a schema that allows an NgModule to contain the following:\n * - Non-Angular elements named with dash case (`-`).\n * - Element properties named with dash case (`-`).\n * Dash case is the naming convention for custom elements.\n *\n * \\@publicApi\n  @type {?} */\nexport var CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/** *\n * Defines a schema that allows any property on any element.\n *\n * \\@publicApi\n  @type {?} */\nexport var NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\n/**\n * Type of the NgModule decorator / constructor function.\n * @record\n */\nexport function NgModuleDecorator() { }\n/** *\n * \\@Annotation\n * \\@publicApi\n  @type {?} */\nexport var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n/**\n * Decorator that marks the following class as an NgModule, and supplies\n * configuration metadata for it.\n *\n * * The `declarations` and `entryComponents` options configure the compiler\n * with information about what belongs to the NgModule.\n * * The `providers` options configures the NgModule's injector to provide\n * dependencies the NgModule members.\n * * The `imports` and `exports` options bring in members from other modules, and make\n * this module's members available to others.\n */\n/**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\nfunction (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n/**\n * \\@description\n * Hook for manual bootstrapping of the application instead of using bootstrap array in \\@NgModule\n * annotation.\n *\n * Reference to the current application is provided as a parameter.\n *\n * See [\"Bootstrapping\"](guide/bootstrapping) and [\"Entry components\"](guide/entry-components).\n *\n * \\@usageNotes\n * ```typescript\n * class AppModule implements DoBootstrap {\n *   ngDoBootstrap(appRef: ApplicationRef) {\n *     appRef.bootstrap(AppComponent); // Or some other component\n *   }\n * }\n * ```\n *\n * \\@publicApi\n * @record\n */\nexport function DoBootstrap() { }\n/** @type {?} */\nDoBootstrap.prototype.ngDoBootstrap;\n/**\n * @param {?} moduleType\n * @param {?} metadata\n * @return {?}\n */\nfunction preR3NgModuleCompile(moduleType, metadata) {\n    /** @type {?} */\n    var imports = (metadata && metadata.imports) || [];\n    if (metadata && metadata.exports) {\n        imports = imports.concat([metadata.exports]);\n    }\n    /** @nocollapse */ moduleType.ngInjectorDef = defineInjector({\n        factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n        providers: metadata && metadata.providers,\n        imports: imports,\n    });\n}\n/** @type {?} */\nexport var SWITCH_COMPILE_NGMODULE__POST_R3__ = render3CompileNgModule;\n/** @type {?} */\nvar SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n/** @type {?} */\nvar SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n//# sourceMappingURL=ng_module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { ANALYZE_FOR_ENTRY_COMPONENTS, Attribute, ContentChild, ContentChildren, Query, ViewChild, ViewChildren } from './metadata/di';\nexport { Component, Directive, HostBinding, HostListener, Input, Output, Pipe } from './metadata/directives';\nexport { CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule } from './metadata/ng_module';\nexport { ViewEncapsulation } from './metadata/view';\n//# sourceMappingURL=metadata.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { getClosureSafeProperty } from '../../util/property';\nimport { NG_INJECTABLE_DEF } from '../fields';\nimport { getCompilerFacade } from './compiler_facade';\nimport { angularCoreEnv } from './environment';\nimport { convertDependencies, reflectDependencies } from './util';\n/**\n * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n * `ngInjectableDef` onto the injectable type.\n * @param {?} type\n * @param {?=} srcMeta\n * @return {?}\n */\nexport function compileInjectable(type, srcMeta) {\n    /** @type {?} */\n    var meta = srcMeta || { providedIn: null };\n    /** @type {?} */\n    var def = null;\n    // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n    if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n        return;\n    Object.defineProperty(type, NG_INJECTABLE_DEF, {\n        get: function () {\n            if (def === null) {\n                /** @type {?} */\n                var meta_1 = srcMeta || { providedIn: null };\n                /** @type {?} */\n                var hasAProvider = isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1) ||\n                    isUseValueProvider(meta_1) || isUseExistingProvider(meta_1);\n                /** @type {?} */\n                var compilerMeta = {\n                    name: type.name,\n                    type: type,\n                    providedIn: meta_1.providedIn,\n                    ctorDeps: reflectDependencies(type),\n                    userDeps: undefined\n                };\n                if ((isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1)) && meta_1.deps !== undefined) {\n                    compilerMeta.userDeps = convertDependencies(meta_1.deps);\n                }\n                if (!hasAProvider) {\n                    // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                    // The deps will have been reflected above, causing the factory to create the class by\n                    // calling\n                    // its constructor with injected deps.\n                    compilerMeta.useClass = type;\n                }\n                else if (isUseClassProvider(meta_1)) {\n                    // The user explicitly specified useClass, and may or may not have provided deps.\n                    compilerMeta.useClass = meta_1.useClass;\n                }\n                else if (isUseValueProvider(meta_1)) {\n                    // The user explicitly specified useValue.\n                    compilerMeta.useValue = meta_1.useValue;\n                }\n                else if (isUseFactoryProvider(meta_1)) {\n                    // The user explicitly specified useFactory.\n                    compilerMeta.useFactory = meta_1.useFactory;\n                }\n                else if (isUseExistingProvider(meta_1)) {\n                    // The user explicitly specified useExisting.\n                    compilerMeta.useExisting = meta_1.useExisting;\n                }\n                else {\n                    // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                    throw new Error(\"Unreachable state.\");\n                }\n                def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n            }\n            return def;\n        },\n    });\n}\n/** @typedef {?} */\nvar UseClassProvider;\nvar ɵ0 = getClosureSafeProperty;\n/** @type {?} */\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0 });\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction isUseClassProvider(meta) {\n    return (/** @type {?} */ (meta)).useClass !== undefined;\n}\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction isUseValueProvider(meta) {\n    return USE_VALUE in meta;\n}\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction isUseFactoryProvider(meta) {\n    return (/** @type {?} */ (meta)).useFactory !== undefined;\n}\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction isUseExistingProvider(meta) {\n    return (/** @type {?} */ (meta)).useExisting !== undefined;\n}\nexport { ɵ0 };\n//# sourceMappingURL=injectable.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { compileInjectable as render3CompileInjectable } from '../render3/jit/injectable';\nimport { makeDecorator } from '../util/decorators';\nimport { defineInjectable, getInjectableDef } from './defs';\nimport { convertInjectableProviderToFactory } from './util';\n/** @typedef {?} */\nvar InjectableProvider;\nexport { InjectableProvider };\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * \\@publicApi\n * @record\n */\nexport function InjectableDecorator() { }\n/** *\n * Injectable decorator and metadata.\n *\n * \\@Annotation\n * \\@publicApi\n  @type {?} */\nexport var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(/** @type {?} */ (type), meta); });\n/**\n * Type representing injectable service.\n *\n * \\@publicApi\n * @record\n * @template T\n */\nexport function InjectableType() { }\n/** @type {?} */\nInjectableType.prototype.ngInjectableDef;\n/**\n * Supports \\@Injectable() in JIT mode for Render2.\n * @param {?} injectableType\n * @param {?} options\n * @return {?}\n */\nfunction render2CompileInjectable(injectableType, options) {\n    if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n        /** @nocollapse */ injectableType.ngInjectableDef = defineInjectable({\n            providedIn: options.providedIn,\n            factory: convertInjectableProviderToFactory(injectableType, options),\n        });\n    }\n}\n/** @type {?} */\nexport var SWITCH_COMPILE_INJECTABLE__POST_R3__ = render3CompileInjectable;\n/** @type {?} */\nvar SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n/** @type {?} */\nvar SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n//# sourceMappingURL=injectable.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nexport var ERROR_TYPE = 'ngType';\n/** @type {?} */\nexport var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n/** @type {?} */\nexport var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n/** @type {?} */\nexport var ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getType(error) {\n    return (/** @type {?} */ (error))[ERROR_TYPE];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getDebugContext(error) {\n    return (/** @type {?} */ (error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getOriginalError(error) {\n    return (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getErrorLogger(error) {\n    return (/** @type {?} */ (error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, values);\n}\n//# sourceMappingURL=errors.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ERROR_ORIGINAL_ERROR, getDebugContext, getErrorLogger, getOriginalError } from './errors';\n/**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@publicApi\n */\nvar /**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@publicApi\n */\nErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype.handleError = /**\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        /** @type {?} */\n        var originalError = this._findOriginalError(error);\n        /** @type {?} */\n        var context = this._findContext(error);\n        /** @type {?} */\n        var errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findContext = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findOriginalError = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        /** @type {?} */\n        var e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\n/**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@publicApi\n */\nexport { ErrorHandler };\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ErrorHandler.prototype._console;\n}\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nexport function wrappedError(message, originalError) {\n    /** @type {?} */\n    var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    /** @type {?} */\n    var error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n//# sourceMappingURL=error_handler.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { wrappedError } from '../error_handler';\nimport { ERROR_ORIGINAL_ERROR } from '../errors';\nimport { stringify } from '../util';\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    /** @type {?} */\n    var res = [];\n    for (var i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        /** @type {?} */\n        var reversed = findFirstClosedCycle(keys.slice().reverse());\n        /** @type {?} */\n        var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @record\n */\nexport function InjectionError() { }\n/** @type {?} */\nInjectionError.prototype.keys;\n/** @type {?} */\nInjectionError.prototype.injectors;\n/** @type {?} */\nInjectionError.prototype.constructResolvingMessage;\n/** @type {?} */\nInjectionError.prototype.addKey;\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    /** @type {?} */\n    var keys = [key];\n    /** @type {?} */\n    var errMsg = constructResolvingMessage(keys);\n    /** @type {?} */\n    var error = /** @type {?} */ ((originalError ? wrappedError(errMsg, originalError) : Error(errMsg)));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nexport function noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        /** @type {?} */\n        var first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nexport function cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nexport function instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        /** @type {?} */\n        var first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nexport function invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n *\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nexport function noAnnotationError(typeOrFunc, params) {\n    /** @type {?} */\n    var signature = [];\n    for (var i = 0, ii = params.length; i < ii; i++) {\n        /** @type {?} */\n        var parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n *\n * @param {?} index\n * @return {?}\n */\nexport function outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nexport function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n//# sourceMappingURL=reflective_errors.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { stringify } from '../util';\nimport { resolveForwardRef } from './forward_ref';\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n *\n * @deprecated No replacement\n * \\@publicApi\n */\nvar /**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n *\n * @deprecated No replacement\n * \\@publicApi\n */\nReflectiveKey = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    ReflectiveKey.get = /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: /**\n         * @return {?} the number of keys registered in the system.\n         */\n        function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n *\n * @deprecated No replacement\n * \\@publicApi\n */\nexport { ReflectiveKey };\nif (false) {\n    /** @type {?} */\n    ReflectiveKey.prototype.displayName;\n    /** @type {?} */\n    ReflectiveKey.prototype.token;\n    /** @type {?} */\n    ReflectiveKey.prototype.id;\n}\nvar KeyRegistry = /** @class */ (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    KeyRegistry.prototype.get = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return /** @type {?} */ ((this._allKeys.get(token)));\n        }\n        /** @type {?} */\n        var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nexport { KeyRegistry };\nif (false) {\n    /** @type {?} */\n    KeyRegistry.prototype._allKeys;\n}\n/** @type {?} */\nvar _globalKeyRegistry = new KeyRegistry();\n//# sourceMappingURL=reflective_key.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar /**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nReflector = /** @class */ (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    Reflector.prototype.updateCapabilities = /**\n     * @param {?} caps\n     * @return {?}\n     */\n    function (caps) { this.reflectionCapabilities = caps; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.factory = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.factory(type); };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.parameters = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    Reflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.importUri(type); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    Reflector.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.resolveEnum = /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nexport { Reflector };\nif (false) {\n    /** @type {?} */\n    Reflector.prototype.reflectionCapabilities;\n}\n//# sourceMappingURL=reflector.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ReflectionCapabilities } from './reflection_capabilities';\nimport { Reflector } from './reflector';\nexport { Reflector } from './reflector';\n/** *\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n  @type {?} */\nexport var reflector = new Reflector(new ReflectionCapabilities());\n//# sourceMappingURL=reflection.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { reflector } from '../reflection/reflection';\nimport { Type } from '../type';\nimport { resolveForwardRef } from './forward_ref';\nimport { InjectionToken } from './injection_token';\nimport { Inject, Optional, Self, SkipSelf } from './metadata';\nimport { invalidProviderError, mixingMultiProvidersWithRegularProvidersError, noAnnotationError } from './reflective_errors';\nimport { ReflectiveKey } from './reflective_key';\n/**\n * @record\n */\nfunction NormalizedProvider() { }\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar /**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nReflectiveDependency = /** @class */ (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    ReflectiveDependency.fromKey = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nexport { ReflectiveDependency };\nif (false) {\n    /** @type {?} */\n    ReflectiveDependency.prototype.key;\n    /** @type {?} */\n    ReflectiveDependency.prototype.optional;\n    /** @type {?} */\n    ReflectiveDependency.prototype.visibility;\n}\n/** @type {?} */\nvar _EMPTY_LIST = [];\n/**\n * An internal resolved representation of a `Provider` used by the `Injector`.\n *\n * \\@usageNotes\n * This is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * \\@publicApi\n * @record\n */\nexport function ResolvedReflectiveProvider() { }\n/**\n * A key, usually a `Type<any>`.\n * @type {?}\n */\nResolvedReflectiveProvider.prototype.key;\n/**\n * Factory function which can return an instance of an object represented by a key.\n * @type {?}\n */\nResolvedReflectiveProvider.prototype.resolvedFactories;\n/**\n * Indicates if the provider is a multi-provider or a regular provider.\n * @type {?}\n */\nResolvedReflectiveProvider.prototype.multiProvider;\nvar ResolvedReflectiveProvider_ = /** @class */ (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n        this.resolvedFactory = this.resolvedFactories[0];\n    }\n    return ResolvedReflectiveProvider_;\n}());\nexport { ResolvedReflectiveProvider_ };\nif (false) {\n    /** @type {?} */\n    ResolvedReflectiveProvider_.prototype.resolvedFactory;\n    /** @type {?} */\n    ResolvedReflectiveProvider_.prototype.key;\n    /** @type {?} */\n    ResolvedReflectiveProvider_.prototype.resolvedFactories;\n    /** @type {?} */\n    ResolvedReflectiveProvider_.prototype.multiProvider;\n}\n/**\n * An internal resolved representation of a factory function created by resolving `Provider`.\n * \\@publicApi\n */\nvar /**\n * An internal resolved representation of a factory function created by resolving `Provider`.\n * \\@publicApi\n */\nResolvedReflectiveFactory = /** @class */ (function () {\n    function ResolvedReflectiveFactory(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving `Provider`.\n * \\@publicApi\n */\nexport { ResolvedReflectiveFactory };\nif (false) {\n    /**\n     * Factory function which can return an instance of an object represented by a key.\n     * @type {?}\n     */\n    ResolvedReflectiveFactory.prototype.factory;\n    /**\n     * Arguments (dependencies) to the `factory` function.\n     * @type {?}\n     */\n    ResolvedReflectiveFactory.prototype.dependencies;\n}\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    /** @type {?} */\n    var factoryFn;\n    /** @type {?} */\n    var resolvedDeps;\n    if (provider.useClass) {\n        /** @type {?} */\n        var useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the `Provider` into `ResolvedProvider`.\n *\n * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n * syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nexport function resolveReflectiveProviders(providers) {\n    /** @type {?} */\n    var normalized = _normalizeProviders(providers, []);\n    /** @type {?} */\n    var resolved = normalized.map(resolveReflectiveProvider);\n    /** @type {?} */\n    var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n * multi providers have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nexport function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var i = 0; i < providers.length; i++) {\n        /** @type {?} */\n        var provider = providers[i];\n        /** @type {?} */\n        var existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            /** @type {?} */\n            var resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && (/** @type {?} */ (b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nexport function constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        /** @type {?} */\n        var params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    /** @type {?} */\n    var params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    /** @type {?} */\n    var token = null;\n    /** @type {?} */\n    var optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    /** @type {?} */\n    var visibility = null;\n    for (var i = 0; i < metadata.length; ++i) {\n        /** @type {?} */\n        var paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n//# sourceMappingURL=reflective_provider.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injector, THROW_IF_NOT_FOUND } from './injector';\nimport { Self, SkipSelf } from './metadata';\nimport { cyclicDependencyError, instantiationError, noProviderError, outOfBoundsError } from './reflective_errors';\nimport { ReflectiveKey } from './reflective_key';\nimport { resolveReflectiveProviders } from './reflective_provider';\n/** @type {?} */\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * \\@usageNotes\n * ### Example\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * \\@publicApi\n * @abstract\n */\nvar /**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * \\@usageNotes\n * ### Example\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * \\@publicApi\n * @abstract\n */\nReflectiveInjector = /** @class */ (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of `ResolvedReflectiveProvider`s.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     */\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of `ResolvedReflectiveProvider`s.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.resolve = /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of `ResolvedReflectiveProvider`s.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, `Provider`,\n     * or a recursive array of more providers.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     */\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, `Provider`,\n     * or a recursive array of more providers.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.resolveAndCreate = /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, `Provider`,\n     * or a recursive array of more providers.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        /** @type {?} */\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     */\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.fromResolvedProviders = /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * \\@usageNotes\n * ### Example\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * \\@publicApi\n * @abstract\n */\nexport { ReflectiveInjector };\nif (false) {\n    /**\n     * Parent of this injector.\n     *\n     * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n     * -->\n     * @abstract\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.parent = function () { };\n    /**\n     * Resolves an array of providers and creates a child injector from those providers.\n     *\n     * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n     * -->\n     *\n     * The passed-in providers can be an array of `Type`, `Provider`,\n     * or a recursive array of more providers.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class ParentProvider {}\n     * class ChildProvider {}\n     *\n     * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n     * var child = parent.resolveAndCreateChild([ChildProvider]);\n     *\n     * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n     * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n     * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n     * ```\n     * @abstract\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.resolveAndCreateChild = function (providers) { };\n    /**\n     * Creates a child injector from previously resolved providers.\n     *\n     * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n     * -->\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class ParentProvider {}\n     * class ChildProvider {}\n     *\n     * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n     * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n     *\n     * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n     * var child = parent.createChildFromResolved(childProviders);\n     *\n     * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n     * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n     * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n     * ```\n     * @abstract\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.createChildFromResolved = function (providers) { };\n    /**\n     * Resolves a provider and instantiates an object in the context of the injector.\n     *\n     * The created object does not get cached by the injector.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n     *\n     * var car = injector.resolveAndInstantiate(Car);\n     * expect(car.engine).toBe(injector.get(Engine));\n     * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n     * ```\n     * @abstract\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.resolveAndInstantiate = function (provider) { };\n    /**\n     * Instantiates an object using a resolved provider in the context of the injector.\n     *\n     * The created object does not get cached by the injector.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n     * var carProvider = ReflectiveInjector.resolve([Car])[0];\n     * var car = injector.instantiateResolved(carProvider);\n     * expect(car.engine).toBe(injector.get(Engine));\n     * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n     * ```\n     * @abstract\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.instantiateResolved = function (provider) { };\n    /**\n     * @abstract\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.get = function (token, notFoundValue) { };\n}\nvar ReflectiveInjector_ = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        /** @type {?} */\n        var len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndCreateChild = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        /** @type {?} */\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.createChildFromResolved = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        /** @type {?} */\n        var inj = new ReflectiveInjector_(providers);\n        (/** @type {?} */ (inj)).parent = this;\n        return inj;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndInstantiate = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.instantiateResolved = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.getProviderAtIndex = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._new = /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = /**\n     * @return {?}\n     */\n    function () { return this.objs.length; };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.multiProvider) {\n            /** @type {?} */\n            var res = new Array(provider.resolvedFactories.length);\n            for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiate = /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    function (provider, ResolvedReflectiveFactory) {\n        var _this = this;\n        /** @type {?} */\n        var factory = ResolvedReflectiveFactory.factory;\n        /** @type {?} */\n        var deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        /** @type {?} */\n        var obj;\n        try {\n            obj = factory.apply(void 0, deps);\n        }\n        catch (e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByReflectiveDependency = /**\n     * @param {?} dep\n     * @return {?}\n     */\n    function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKey = /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getObjByKeyId = /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    function (keyId) {\n        for (var i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._throwOrNull = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeySelf = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        /** @type {?} */\n        var obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeyDefault = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    function (key, notFoundValue, visibility) {\n        /** @type {?} */\n        var inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            /** @type {?} */\n            var inj_ = /** @type {?} */ (inj);\n            /** @type {?} */\n            var obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\nexport { ReflectiveInjector_ };\nif (false) {\n    /** @type {?} */\n    ReflectiveInjector_.INJECTOR_KEY;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ReflectiveInjector_.prototype._constructionCounter;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ReflectiveInjector_.prototype._providers;\n    /** @type {?} */\n    ReflectiveInjector_.prototype.parent;\n    /** @type {?} */\n    ReflectiveInjector_.prototype.keyIds;\n    /** @type {?} */\n    ReflectiveInjector_.prototype.objs;\n}\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    /** @type {?} */\n    var res = new Array(injector._providers.length);\n    for (var i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n//# sourceMappingURL=reflective_injector.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\nexport { Inject, Optional, Self, SkipSelf, Host } from './di/metadata';\nexport { defineInjectable, defineInjector } from './di/defs';\nexport { forwardRef, resolveForwardRef } from './di/forward_ref';\nexport { Injectable } from './di/injectable';\nexport { INJECTOR, Injector } from './di/injector';\nexport { inject, InjectFlags } from './di/injector_compatibility';\nexport { ReflectiveInjector } from './di/reflective_injector';\nexport { createInjector } from './di/r3_injector';\nexport { ResolvedReflectiveFactory } from './di/reflective_provider';\nexport { ReflectiveKey } from './di/reflective_key';\nexport { InjectionToken } from './di/injection_token';\n//# sourceMappingURL=di.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nexport function isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n * @param {?} obj\n * @return {?}\n */\nexport function isObservable(obj) {\n    // TODO: use isObservable once we update pass rxjs 6.1\n    // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n    return !!obj && typeof obj.subscribe === 'function';\n}\n//# sourceMappingURL=lang.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { isPromise } from '../src/util/lang';\nimport { Inject, Injectable, InjectionToken, Optional } from './di';\n/** *\n * A function that will be executed when an application is initialized.\n *\n * \\@publicApi\n  @type {?} */\nexport var APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n *\n * \\@publicApi\n */\nvar ApplicationInitStatus = /** @class */ (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationInitStatus.prototype.runInitializers = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        /** @type {?} */\n        var asyncInitPromises = [];\n        /** @type {?} */\n        var complete = function () {\n            (/** @type {?} */ (_this)).done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var i = 0; i < this.appInits.length; i++) {\n                /** @type {?} */\n                var initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationInitStatus.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional }] }\n    ]; };\n    return ApplicationInitStatus;\n}());\nexport { ApplicationInitStatus };\nif (false) {\n    /** @type {?} */\n    ApplicationInitStatus.prototype.resolve;\n    /** @type {?} */\n    ApplicationInitStatus.prototype.reject;\n    /** @type {?} */\n    ApplicationInitStatus.prototype.initialized;\n    /** @type {?} */\n    ApplicationInitStatus.prototype.donePromise;\n    /** @type {?} */\n    ApplicationInitStatus.prototype.done;\n    /** @type {?} */\n    ApplicationInitStatus.prototype.appInits;\n}\n//# sourceMappingURL=application_init.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken } from './di';\n/** *\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@publicApi\n  @type {?} */\nexport var APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nexport function _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/** *\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@publicApi\n  @type {?} */\nexport var APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: /** @type {?} */ ([]),\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/** *\n * A function that will be executed when a platform is initialized.\n * \\@publicApi\n  @type {?} */\nexport var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/** *\n * A token that indicates an opaque platform id.\n * \\@publicApi\n  @type {?} */\nexport var PLATFORM_ID = new InjectionToken('Platform ID');\n/** *\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@publicApi\n  @type {?} */\nexport var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/** *\n * A token which indicates the root directory of the application\n * \\@publicApi\n  @type {?} */\nexport var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n//# sourceMappingURL=application_tokens.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable } from './di';\nvar Console = /** @class */ (function () {\n    function Console() {\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.log = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.warn = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console.decorators = [\n        { type: Injectable },\n    ];\n    return Console;\n}());\nexport { Console };\n//# sourceMappingURL=console.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable } from '../di/injectable';\nimport { InjectionToken } from '../di/injection_token';\nimport { NgModuleFactory as NgModuleFactoryR3 } from '../render3/ng_module_ref';\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@publicApi\n * @template T\n */\nvar /**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@publicApi\n * @template T\n */\nModuleWithComponentFactories = /** @class */ (function () {\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@publicApi\n * @template T\n */\nexport { ModuleWithComponentFactories };\nif (false) {\n    /** @type {?} */\n    ModuleWithComponentFactories.prototype.ngModuleFactory;\n    /** @type {?} */\n    ModuleWithComponentFactories.prototype.componentFactories;\n}\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/** @type {?} */\nvar Compiler_compileModuleSync__PRE_R3__ = /** @type {?} */ (_throwError);\n/** @type {?} */\nexport var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n    return new NgModuleFactoryR3(moduleType);\n};\n/** @type {?} */\nvar Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n/** @type {?} */\nvar Compiler_compileModuleAsync__PRE_R3__ = /** @type {?} */ (_throwError);\n/** @type {?} */\nexport var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n    return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n};\n/** @type {?} */\nvar Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n/** @type {?} */\nvar Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = /** @type {?} */ (_throwError);\n/** @type {?} */\nexport var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n    return new ModuleWithComponentFactories(Compiler_compileModuleSync__POST_R3__(moduleType), []);\n};\n/** @type {?} */\nvar Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n/** @type {?} */\nvar Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = /** @type {?} */ (_throwError);\n/** @type {?} */\nexport var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n    return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n};\n/** @type {?} */\nvar Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n *\n * \\@publicApi\n */\nvar Compiler = /** @class */ (function () {\n    function Compiler() {\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        this.compileModuleSync = Compiler_compileModuleSync;\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        this.compileModuleAsync = Compiler_compileModuleAsync;\n        /**\n         * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n        /**\n         * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n    }\n    /**\n     * Clears all caches.\n     */\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    Compiler.prototype.clearCache = /**\n     * Clears all caches.\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    Compiler.prototype.clearCacheFor = /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { };\n    /**\n     * Returns the id for a given NgModule, if one is defined and known to the compiler.\n     */\n    /**\n     * Returns the id for a given NgModule, if one is defined and known to the compiler.\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.getModuleId = /**\n     * Returns the id for a given NgModule, if one is defined and known to the compiler.\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { return undefined; };\n    Compiler.decorators = [\n        { type: Injectable },\n    ];\n    return Compiler;\n}());\nexport { Compiler };\nif (false) {\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @type {?}\n     */\n    Compiler.prototype.compileModuleSync;\n    /**\n     * Compiles the given NgModule and all of its components\n     * @type {?}\n     */\n    Compiler.prototype.compileModuleAsync;\n    /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @type {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync;\n    /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @type {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync;\n}\n/** @typedef {?} */\nvar CompilerOptions;\nexport { CompilerOptions };\n/** *\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@publicApi\n  @type {?} */\nexport var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@publicApi\n * @abstract\n */\nvar /**\n * A factory for creating a Compiler\n *\n * \\@publicApi\n * @abstract\n */\nCompilerFactory = /** @class */ (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n/**\n * A factory for creating a Compiler\n *\n * \\@publicApi\n * @abstract\n */\nexport { CompilerFactory };\nif (false) {\n    /**\n     * @abstract\n     * @param {?=} options\n     * @return {?}\n     */\n    CompilerFactory.prototype.createCompiler = function (options) { };\n}\n//# sourceMappingURL=compiler.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { global } from '../util';\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * \\@publicApi\n * @record\n */\nexport function WtfScopeFn() { }\n/**\n * @record\n */\nfunction WTF() { }\n/** @type {?} */\nWTF.prototype.trace;\n/**\n * @record\n */\nfunction Trace() { }\n/** @type {?} */\nTrace.prototype.events;\n/** @type {?} */\nTrace.prototype.leaveScope;\n/** @type {?} */\nTrace.prototype.beginTimeRange;\n/** @type {?} */\nTrace.prototype.endTimeRange;\n/**\n * @record\n */\nexport function Range() { }\n/**\n * @record\n */\nfunction Events() { }\n/** @type {?} */\nEvents.prototype.createScope;\n/**\n * @record\n */\nexport function Scope() { }\n/** @type {?} */\nvar trace;\n/** @type {?} */\nvar events;\n/**\n * @return {?}\n */\nexport function detectWTF() {\n    /** @type {?} */\n    var wtf = (/** @type {?} */ (global /** TODO #9100 */) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nexport function createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nexport function leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nexport function startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nexport function endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n//# sourceMappingURL=wtf_impl.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { createScope, detectWTF, endTimeRange, leave, startTimeRange } from './wtf_impl';\n/** *\n * True if WTF is enabled.\n  @type {?} */\nexport var wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/** *\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@publicApi\n  @type {?} */\nexport var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/** *\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@publicApi\n  @type {?} */\nexport var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/** *\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * \\@publicApi\n  @type {?} */\nexport var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/** *\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * \\@publicApi\n  @type {?} */\nexport var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n//# sourceMappingURL=profile.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { EventEmitter } from '../event_emitter';\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@publicApi\n */\nvar /**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@publicApi\n */\nNgZone = /** @class */ (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(\"In this configuration Angular requires Zone.js\");\n        }\n        Zone.assertZonePatched();\n        /** @type {?} */\n        var self = /** @type {?} */ ((this));\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if ((/** @type {?} */ (Zone))['wtfZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['wtfZoneSpec']);\n        }\n        if ((/** @type {?} */ (Zone))['TaskTrackingZoneSpec']) {\n            self._inner = self._inner.fork(new (/** @type {?} */ ((/** @type {?} */ (Zone))['TaskTrackingZoneSpec'])));\n        }\n        if (enableLongStackTrace && (/** @type {?} */ (Zone))['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    /**\n     * @return {?}\n     */\n    NgZone.isInAngularZone = /**\n     * @return {?}\n     */\n    function () { return Zone.current.get('isAngularZone') === true; };\n    /**\n     * @return {?}\n     */\n    NgZone.assertInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.assertNotInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.run = /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.run(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    NgZone.prototype.runTask = /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs, name) {\n        /** @type {?} */\n        var zone = (/** @type {?} */ ((this)))._inner;\n        /** @type {?} */\n        var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return /** @type {?} */ (zone.runTask(task, applyThis, applyArgs));\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.runGuarded = /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.runGuarded(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NgZone.prototype.runOutsideAngular = /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._outer.run(fn));\n    };\n    return NgZone;\n}());\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@publicApi\n */\nexport { NgZone };\nif (false) {\n    /** @type {?} */\n    NgZone.prototype.hasPendingMicrotasks;\n    /** @type {?} */\n    NgZone.prototype.hasPendingMacrotasks;\n    /**\n     * Whether there are no outstanding microtasks or macrotasks.\n     * @type {?}\n     */\n    NgZone.prototype.isStable;\n    /**\n     * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n     * @type {?}\n     */\n    NgZone.prototype.onUnstable;\n    /**\n     * Notifies when there is no more microtasks enqueued in the current VM Turn.\n     * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n     * For this reason this event can fire multiple times per VM Turn.\n     * @type {?}\n     */\n    NgZone.prototype.onMicrotaskEmpty;\n    /**\n     * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n     * implies we are about to relinquish VM turn.\n     * This event gets called just once.\n     * @type {?}\n     */\n    NgZone.prototype.onStable;\n    /**\n     * Notifies that an error has been delivered.\n     * @type {?}\n     */\n    NgZone.prototype.onError;\n}\n/**\n * @return {?}\n */\nfunction noop() { }\n/** @type {?} */\nvar EMPTY_PAYLOAD = {};\n/**\n * @record\n */\nfunction NgZonePrivate() { }\n/** @type {?} */\nNgZonePrivate.prototype._outer;\n/** @type {?} */\nNgZonePrivate.prototype._inner;\n/** @type {?} */\nNgZonePrivate.prototype._nesting;\n/** @type {?} */\nNgZonePrivate.prototype.hasPendingMicrotasks;\n/** @type {?} */\nNgZonePrivate.prototype.hasPendingMacrotasks;\n/** @type {?} */\nNgZonePrivate.prototype.isStable;\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: /** @type {?} */ ({ 'isAngularZone': true }),\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nvar /**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nNoopNgZone = /** @class */ (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.run = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runGuarded = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runOutsideAngular = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runTask = /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nexport { NoopNgZone };\nif (false) {\n    /** @type {?} */\n    NoopNgZone.prototype.hasPendingMicrotasks;\n    /** @type {?} */\n    NoopNgZone.prototype.hasPendingMacrotasks;\n    /** @type {?} */\n    NoopNgZone.prototype.isStable;\n    /** @type {?} */\n    NoopNgZone.prototype.onUnstable;\n    /** @type {?} */\n    NoopNgZone.prototype.onMicrotaskEmpty;\n    /** @type {?} */\n    NoopNgZone.prototype.onStable;\n    /** @type {?} */\n    NoopNgZone.prototype.onError;\n}\n//# sourceMappingURL=ng_zone.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable } from '../di';\nimport { scheduleMicroTask } from '../util';\nimport { NgZone } from '../zone/ng_zone';\n/**\n * @record\n */\nexport function PendingMacrotask() { }\n/** @type {?} */\nPendingMacrotask.prototype.source;\n/** @type {?} */\nPendingMacrotask.prototype.creationLocation;\n/** @type {?|undefined} */\nPendingMacrotask.prototype.runCount;\n/** @type {?} */\nPendingMacrotask.prototype.data;\n/**\n * @record\n */\nexport function TaskData() { }\n/** @type {?|undefined} */\nTaskData.prototype.target;\n/** @type {?|undefined} */\nTaskData.prototype.delay;\n/** @type {?|undefined} */\nTaskData.prototype.isPeriodic;\n/** @typedef {?} */\nvar DoneCallback;\nexport { DoneCallback };\n/** @typedef {?} */\nvar UpdateCallback;\nexport { UpdateCallback };\n/**\n * @record\n */\nfunction WaitCallback() { }\n/** @type {?} */\nWaitCallback.prototype.timeoutId;\n/** @type {?} */\nWaitCallback.prototype.doneCb;\n/** @type {?|undefined} */\nWaitCallback.prototype.updateCb;\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@publicApi\n */\nvar Testability = /** @class */ (function () {\n    function Testability(_ngZone) {\n        var _this = this;\n        this._ngZone = _ngZone;\n        this._pendingCount = 0;\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        this._callbacks = [];\n        this.taskTrackingZone = null;\n        this._watchAngularEvents();\n        _ngZone.run(function () {\n            _this.taskTrackingZone =\n                typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n        });\n    }\n    /**\n     * @return {?}\n     */\n    Testability.prototype._watchAngularEvents = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     * @deprecated pending requests are now tracked with zones.\n     */\n    /**\n     * Increases the number of pending request\n     * @deprecated pending requests are now tracked with zones.\n     * @return {?}\n     */\n    Testability.prototype.increasePendingRequestCount = /**\n     * Increases the number of pending request\n     * @deprecated pending requests are now tracked with zones.\n     * @return {?}\n     */\n    function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     * @deprecated pending requests are now tracked with zones\n     */\n    /**\n     * Decreases the number of pending request\n     * @deprecated pending requests are now tracked with zones\n     * @return {?}\n     */\n    Testability.prototype.decreasePendingRequestCount = /**\n     * Decreases the number of pending request\n     * @deprecated pending requests are now tracked with zones\n     * @return {?}\n     */\n    function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    Testability.prototype.isStable = /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    function () {\n        return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    /**\n     * @return {?}\n     */\n    Testability.prototype._runCallbacksIfReady = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    /** @type {?} */\n                    var cb = /** @type {?} */ ((_this._callbacks.pop()));\n                    clearTimeout(cb.timeoutId);\n                    cb.doneCb(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            /** @type {?} */\n            var pending_1 = this.getPendingTasks();\n            this._callbacks = this._callbacks.filter(function (cb) {\n                if (cb.updateCb && cb.updateCb(pending_1)) {\n                    clearTimeout(cb.timeoutId);\n                    return false;\n                }\n                return true;\n            });\n            this._didWork = true;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    Testability.prototype.getPendingTasks = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.taskTrackingZone) {\n            return [];\n        }\n        // Copy the tasks data so that we don't leak tasks.\n        return this.taskTrackingZone.macroTasks.map(function (t) {\n            return {\n                source: t.source,\n                // From TaskTrackingZone:\n                // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                creationLocation: /** @type {?} */ ((/** @type {?} */ (t)).creationLocation),\n                data: t.data\n            };\n        });\n    };\n    /**\n     * @param {?} cb\n     * @param {?=} timeout\n     * @param {?=} updateCb\n     * @return {?}\n     */\n    Testability.prototype.addCallback = /**\n     * @param {?} cb\n     * @param {?=} timeout\n     * @param {?=} updateCb\n     * @return {?}\n     */\n    function (cb, timeout, updateCb) {\n        var _this = this;\n        /** @type {?} */\n        var timeoutId = -1;\n        if (timeout && timeout > 0) {\n            timeoutId = setTimeout(function () {\n                _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                cb(_this._didWork, _this.getPendingTasks());\n            }, timeout);\n        }\n        this._callbacks.push(/** @type {?} */ ({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb }));\n    };\n    /**\n     * Wait for the application to be stable with a timeout. If the timeout is reached before that\n     * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n     *\n     * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n     *    whichever comes first.\n     * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n     *    specified, whenStable() will wait forever.\n     * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n     *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n     *    and no further updates will be issued.\n     */\n    /**\n     * Wait for the application to be stable with a timeout. If the timeout is reached before that\n     * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n     *\n     * @param {?} doneCb The callback to invoke when Angular is stable or the timeout expires\n     *    whichever comes first.\n     * @param {?=} timeout Optional. The maximum time to wait for Angular to become stable. If not\n     *    specified, whenStable() will wait forever.\n     * @param {?=} updateCb Optional. If specified, this callback will be invoked whenever the set of\n     *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n     *    and no further updates will be issued.\n     * @return {?}\n     */\n    Testability.prototype.whenStable = /**\n     * Wait for the application to be stable with a timeout. If the timeout is reached before that\n     * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n     *\n     * @param {?} doneCb The callback to invoke when Angular is stable or the timeout expires\n     *    whichever comes first.\n     * @param {?=} timeout Optional. The maximum time to wait for Angular to become stable. If not\n     *    specified, whenStable() will wait forever.\n     * @param {?=} updateCb Optional. If specified, this callback will be invoked whenever the set of\n     *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n     *    and no further updates will be issued.\n     * @return {?}\n     */\n    function (doneCb, timeout, updateCb) {\n        if (updateCb && !this.taskTrackingZone) {\n            throw new Error('Task tracking zone is required when passing an update callback to ' +\n                'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n        }\n        // These arguments are 'Function' above to keep the public API simple.\n        this.addCallback(/** @type {?} */ (doneCb), timeout, /** @type {?} */ (updateCb));\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     * @deprecated pending requests are now tracked with zones\n     */\n    /**\n     * Get the number of pending requests\n     * @deprecated pending requests are now tracked with zones\n     * @return {?}\n     */\n    Testability.prototype.getPendingRequestCount = /**\n     * Get the number of pending requests\n     * @deprecated pending requests are now tracked with zones\n     * @return {?}\n     */\n    function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    Testability.prototype.findProviders = /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Testability.ctorParameters = function () { return [\n        { type: NgZone }\n    ]; };\n    return Testability;\n}());\nexport { Testability };\nif (false) {\n    /** @type {?} */\n    Testability.prototype._pendingCount;\n    /** @type {?} */\n    Testability.prototype._isZoneStable;\n    /**\n     * Whether any work was done since the last 'whenStable' callback. This is\n     * useful to detect if this could have potentially destabilized another\n     * component while it is stabilizing.\n     * \\@internal\n     * @type {?}\n     */\n    Testability.prototype._didWork;\n    /** @type {?} */\n    Testability.prototype._callbacks;\n    /** @type {?} */\n    Testability.prototype.taskTrackingZone;\n    /** @type {?} */\n    Testability.prototype._ngZone;\n}\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@publicApi\n */\nvar TestabilityRegistry = /** @class */ (function () {\n    function TestabilityRegistry() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.registerApplication = /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterApplication = /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getTestability = /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllRootElements = /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    TestabilityRegistry.ctorParameters = function () { return []; };\n    return TestabilityRegistry;\n}());\nexport { TestabilityRegistry };\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    TestabilityRegistry.prototype._applications;\n}\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * \\@publicApi\n * @record\n */\nexport function GetTestability() { }\n/** @type {?} */\nGetTestability.prototype.addToWindow;\n/** @type {?} */\nGetTestability.prototype.findTestabilityInTree;\nvar _NoopGetTestability = /** @class */ (function () {\n    function _NoopGetTestability() {\n    }\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.addToWindow = /**\n     * @param {?} registry\n     * @return {?}\n     */\n    function (registry) { };\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.findTestabilityInTree = /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@publicApi\n * @param {?} getter\n * @return {?}\n */\nexport function setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\n/** @type {?} */\nvar _testabilityGetter = new _NoopGetTestability();\n//# sourceMappingURL=testability.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Observable, merge } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport { ApplicationInitStatus } from './application_init';\nimport { APP_BOOTSTRAP_LISTENER, PLATFORM_INITIALIZER } from './application_tokens';\nimport { Console } from './console';\nimport { Injectable, InjectionToken, Injector } from './di';\nimport { ErrorHandler } from './error_handler';\nimport { isDevMode } from './is_dev_mode';\nimport { CompilerFactory } from './linker/compiler';\nimport { ComponentFactory } from './linker/component_factory';\nimport { ComponentFactoryBoundToModule, ComponentFactoryResolver } from './linker/component_factory_resolver';\nimport { NgModuleRef } from './linker/ng_module_factory';\nimport { wtfCreateScope, wtfLeave } from './profile/profile';\nimport { assertNgModuleType } from './render3/assert';\nimport { NgModuleFactory as R3NgModuleFactory } from './render3/ng_module_ref';\nimport { Testability, TestabilityRegistry } from './testability/testability';\nimport { scheduleMicroTask, stringify } from './util';\nimport { isPromise } from './util/lang';\nimport { NgZone, NoopNgZone } from './zone/ng_zone';\n/** @type {?} */\nvar _platform;\n/** @type {?} */\nvar compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n/**\n * @template M\n * @param {?} injector\n * @param {?} options\n * @param {?} moduleType\n * @return {?}\n */\nfunction compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n    /** @type {?} */\n    var compilerFactory = injector.get(CompilerFactory);\n    /** @type {?} */\n    var compiler = compilerFactory.createCompiler([options]);\n    return compiler.compileModuleAsync(moduleType);\n}\n/**\n * @template M\n * @param {?} injector\n * @param {?} options\n * @param {?} moduleType\n * @return {?}\n */\nexport function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n    ngDevMode && assertNgModuleType(moduleType);\n    return Promise.resolve(new R3NgModuleFactory(moduleType));\n}\n/** @type {?} */\nexport var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@publicApi\n */\nvar /**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@publicApi\n */\nNgProbeToken = /** @class */ (function () {\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@publicApi\n */\nexport { NgProbeToken };\nif (false) {\n    /** @type {?} */\n    NgProbeToken.prototype.name;\n    /** @type {?} */\n    NgProbeToken.prototype.token;\n}\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@publicApi\n * @param {?} injector\n * @return {?}\n */\nexport function createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    /** @type {?} */\n    var inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@publicApi\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nexport function createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    /** @type {?} */\n    var desc = \"Platform: \" + name;\n    /** @type {?} */\n    var marker = new InjectionToken(desc);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        /** @type {?} */\n        var platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                /** @type {?} */\n                var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@publicApi\n * @param {?} requiredToken\n * @return {?}\n */\nexport function assertPlatform(requiredToken) {\n    /** @type {?} */\n    var platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * \\@publicApi\n * @return {?}\n */\nexport function destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * \\@publicApi\n * @return {?}\n */\nexport function getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * Provides additional options to the bootstraping process.\n *\n *\n * @record\n */\nexport function BootstrapOptions() { }\n/**\n * Optionally specify which `NgZone` should be used.\n *\n * - Provide your own `NgZone` instance.\n * - `zone.js` - Use default `NgZone` which requires `Zone.js`.\n * - `noop` - Use `NoopNgZone` which does nothing.\n * @type {?|undefined}\n */\nBootstrapOptions.prototype.ngZone;\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n *\n * \\@publicApi\n */\nvar PlatformRef = /** @class */ (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * @usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * \\@usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * \\@usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    function (moduleFactory, options) {\n        var _this = this;\n        /** @type {?} */\n        var ngZoneOption = options ? options.ngZone : undefined;\n        /** @type {?} */\n        var ngZone = getNgZone(ngZoneOption);\n        /** @type {?} */\n        var providers = [{ provide: NgZone, useValue: ngZone }];\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            /** @type {?} */\n            var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n            /** @type {?} */\n            var moduleRef = /** @type {?} */ (moduleFactory.create(ngZoneInjector));\n            /** @type {?} */\n            var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); }); /** @type {?} */\n            ((ngZone)).runOutsideAngular(function () { return ((ngZone)).onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ ((ngZone)), function () {\n                /** @type {?} */\n                var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * @usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     *\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * \\@usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     *\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModule = /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * \\@usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     *\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        /** @type {?} */\n        var options = optionsReducer({}, compilerOptions);\n        return compileNgModuleFactory(this.injector, options, moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    PlatformRef.prototype._moduleDoBootstrap = /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    function (moduleRef) {\n        /** @type {?} */\n        var appRef = /** @type {?} */ (moduleRef.injector.get(ApplicationRef));\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    PlatformRef.prototype.onDestroy = /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: /**\n         * Retrieve the platform {\\@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         * @return {?}\n         */\n        function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    PlatformRef.prototype.destroy = /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PlatformRef.ctorParameters = function () { return [\n        { type: Injector }\n    ]; };\n    return PlatformRef;\n}());\nexport { PlatformRef };\nif (false) {\n    /** @type {?} */\n    PlatformRef.prototype._modules;\n    /** @type {?} */\n    PlatformRef.prototype._destroyListeners;\n    /** @type {?} */\n    PlatformRef.prototype._destroyed;\n    /** @type {?} */\n    PlatformRef.prototype._injector;\n}\n/**\n * @param {?=} ngZoneOption\n * @return {?}\n */\nfunction getNgZone(ngZoneOption) {\n    /** @type {?} */\n    var ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        /** @type {?} */\n        var result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * @template T\n * @param {?} dst\n * @param {?} objs\n * @return {?}\n */\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = tslib_1.__assign({}, dst, (/** @type {?} */ (objs)));\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n * \\@publicApi\n */\nvar ApplicationRef = /** @class */ (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        /** @type {?} */\n        var isCurrentlyStable = new Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        /** @type {?} */\n        var isStable = new Observable(function (observer) {\n            /** @type {?} */\n            var stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            /** @type {?} */\n            var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        (/** @type {?} */ (this)).isStable =\n            merge(isCurrentlyStable, isStable.pipe(share()));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * @usageNotes\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the componentType's\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * componentType's selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * \\@usageNotes\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the componentType's\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * componentType's selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    ApplicationRef.prototype.bootstrap = /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * \\@usageNotes\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the componentType's\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * componentType's selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        /** @type {?} */\n        var componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                /** @type {?} */ ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        /** @type {?} */\n        var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        /** @type {?} */\n        var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        /** @type {?} */\n        var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        /** @type {?} */\n        var testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    ApplicationRef.prototype.tick = /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        /** @type {?} */\n        var scope = ApplicationRef._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.attachView = /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        /** @type {?} */\n        var view = (/** @type {?} */ (viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.detachView = /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        /** @type {?} */\n        var view = (/** @type {?} */ (viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._loadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        /** @type {?} */\n        var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._unloadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationRef.prototype.ngOnDestroy = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: /**\n         * Returns the number of attached views.\n         * @return {?}\n         */\n        function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationRef.ctorParameters = function () { return [\n        { type: NgZone },\n        { type: Console },\n        { type: Injector },\n        { type: ErrorHandler },\n        { type: ComponentFactoryResolver },\n        { type: ApplicationInitStatus }\n    ]; };\n    return ApplicationRef;\n}());\nexport { ApplicationRef };\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ApplicationRef._tickScope;\n    /** @type {?} */\n    ApplicationRef.prototype._bootstrapListeners;\n    /** @type {?} */\n    ApplicationRef.prototype._views;\n    /** @type {?} */\n    ApplicationRef.prototype._runningTick;\n    /** @type {?} */\n    ApplicationRef.prototype._enforceNoNewChanges;\n    /** @type {?} */\n    ApplicationRef.prototype._stable;\n    /**\n     * Get a list of component types registered to this application.\n     * This list is populated even before the component is created.\n     * @type {?}\n     */\n    ApplicationRef.prototype.componentTypes;\n    /**\n     * Get a list of components registered to this application.\n     * @type {?}\n     */\n    ApplicationRef.prototype.components;\n    /**\n     * Returns an Observable that indicates when the application is stable or unstable.\n     * @type {?}\n     */\n    ApplicationRef.prototype.isStable;\n    /** @type {?} */\n    ApplicationRef.prototype._zone;\n    /** @type {?} */\n    ApplicationRef.prototype._console;\n    /** @type {?} */\n    ApplicationRef.prototype._injector;\n    /** @type {?} */\n    ApplicationRef.prototype._exceptionHandler;\n    /** @type {?} */\n    ApplicationRef.prototype._componentFactoryResolver;\n    /** @type {?} */\n    ApplicationRef.prototype._initStatus;\n}\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    /** @type {?} */\n    var index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n//# sourceMappingURL=application_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { NgZone, NoopNgZone as ɵNoopNgZone } from './zone/ng_zone';\n//# sourceMappingURL=zone.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { RenderComponentType, Renderer, Renderer2, RendererFactory2, RendererStyleFlags2, RootRenderer } from './render/api';\n//# sourceMappingURL=render.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n *\n * \\@publicApi\n * @abstract\n */\nvar /**\n * Used to load ng module factories.\n *\n * \\@publicApi\n * @abstract\n */\nNgModuleFactoryLoader = /** @class */ (function () {\n    function NgModuleFactoryLoader() {\n    }\n    return NgModuleFactoryLoader;\n}());\n/**\n * Used to load ng module factories.\n *\n * \\@publicApi\n * @abstract\n */\nexport { NgModuleFactoryLoader };\nif (false) {\n    /**\n     * @abstract\n     * @param {?} path\n     * @return {?}\n     */\n    NgModuleFactoryLoader.prototype.load = function (path) { };\n}\n/** @type {?} */\nvar moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * \\@publicApi\n * @param {?} id\n * @param {?} factory\n * @return {?}\n */\nexport function registerModuleFactory(id, factory) {\n    /** @type {?} */\n    var existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n    }\n    moduleFactories.set(id, factory);\n}\n/**\n * @return {?}\n */\nexport function clearModulesForTest() {\n    moduleFactories = new Map();\n}\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * \\@publicApi\n * @param {?} id\n * @return {?}\n */\nexport function getModuleFactory(id) {\n    /** @type {?} */\n    var factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(\"No module with ID \" + id + \" loaded\");\n    return factory;\n}\n//# sourceMappingURL=ng_module_factory_loader.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { EventEmitter } from '../event_emitter';\nimport { getSymbolIterator } from '../util';\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * \\@usageNotes\n * ### Example\n * ```typescript\n * \\@Component({...})\n * class Container {\n * \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n *\n * \\@publicApi\n * @template T\n */\nvar /**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * \\@usageNotes\n * ### Example\n * ```typescript\n * \\@Component({...})\n * class Container {\n * \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n *\n * \\@publicApi\n * @template T\n */\nQueryList = /** @class */ (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n        this.length = 0;\n    }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.map = /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.filter = /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.find = /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList.prototype.reduce = /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.forEach = /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.some = /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toArray = /**\n     * @return {?}\n     */\n    function () { return this._results.slice(); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype[getSymbolIterator()] = /**\n     * @return {?}\n     */\n    function () { return (/** @type {?} */ (this._results))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this._results.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        this._results = flatten(res);\n        (/** @type {?} */ (this)).dirty = false;\n        (/** @type {?} */ (this)).length = this._results.length;\n        (/** @type {?} */ (this)).last = this._results[this.length - 1];\n        (/** @type {?} */ (this)).first = this._results[0];\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this.changes)).emit(this); };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.setDirty = /**\n     * internal\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this)).dirty = true; };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.destroy = /**\n     * internal\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    };\n    return QueryList;\n}());\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * \\@usageNotes\n * ### Example\n * ```typescript\n * \\@Component({...})\n * class Container {\n * \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n *\n * \\@publicApi\n * @template T\n */\nexport { QueryList };\nif (false) {\n    /** @type {?} */\n    QueryList.prototype.dirty;\n    /** @type {?} */\n    QueryList.prototype._results;\n    /** @type {?} */\n    QueryList.prototype.changes;\n    /** @type {?} */\n    QueryList.prototype.length;\n    /** @type {?} */\n    QueryList.prototype.first;\n    /** @type {?} */\n    QueryList.prototype.last;\n}\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        /** @type {?} */\n        var flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n//# sourceMappingURL=query_list.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable, Optional } from '../di';\nimport { Compiler } from './compiler';\n/** @type {?} */\nvar _SEPARATOR = '#';\n/** @type {?} */\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * \\@publicApi\n * @abstract\n */\nvar /**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * \\@publicApi\n * @abstract\n */\nSystemJsNgModuleLoaderConfig = /** @class */ (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * \\@publicApi\n * @abstract\n */\nexport { SystemJsNgModuleLoaderConfig };\nif (false) {\n    /**\n     * Prefix to add when computing the name of the factory module for a given module name.\n     * @type {?}\n     */\n    SystemJsNgModuleLoaderConfig.prototype.factoryPathPrefix;\n    /**\n     * Suffix to add when computing the name of the factory module for a given module name.\n     * @type {?}\n     */\n    SystemJsNgModuleLoaderConfig.prototype.factoryPathSuffix;\n}\n/** @type {?} */\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@publicApi\n */\nvar SystemJsNgModuleLoader = /** @class */ (function () {\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.load = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        /** @type {?} */\n        var offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadAndCompile = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _this = this;\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadFactory = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        /** @type {?} */\n        var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    SystemJsNgModuleLoader.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    SystemJsNgModuleLoader.ctorParameters = function () { return [\n        { type: Compiler },\n        { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional }] }\n    ]; };\n    return SystemJsNgModuleLoader;\n}());\nexport { SystemJsNgModuleLoader };\nif (false) {\n    /** @type {?} */\n    SystemJsNgModuleLoader.prototype._config;\n    /** @type {?} */\n    SystemJsNgModuleLoader.prototype._compiler;\n}\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n//# sourceMappingURL=system_js_ng_module_factory_loader.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { injectViewContainerRef as render3InjectViewContainerRef } from '../render3/view_engine_compatibility';\nimport { noop } from '../util/noop';\nimport { ElementRef } from './element_ref';\n/**\n * Represents a container where one or more views can be attached to a component.\n *\n * Can contain *host views* (created by instantiating a\n * component with the `createComponent()` method), and *embedded views*\n * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n *\n * A view container instance can contain other view containers,\n * creating a [view hierarchy](guide/glossary#view-tree).\n *\n * @see `ComponentRef`\n * @see `EmbeddedViewRef`\n *\n * \\@publicApi\n * @abstract\n */\nvar ViewContainerRef = /** @class */ (function () {\n    function ViewContainerRef() {\n    }\n    /**\n     * \\@internal\n     */\n    ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n    return ViewContainerRef;\n}());\nexport { ViewContainerRef };\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ViewContainerRef.__NG_ELEMENT_ID__;\n    /**\n     * Anchor element that specifies the location of this container in the containing view.\n     * Each view container can have only one anchor element, and each anchor element\n     * can have only a single view container.\n     *\n     * Root elements of views attached to this container become siblings of the anchor element in\n     * the rendered view.\n     *\n     * Access the `ViewContainerRef` of an element by placing a `Directive` injected\n     * with `ViewContainerRef` on the element, or use a `ViewChild` query.\n     *\n     * <!-- TODO: rename to anchorElement -->\n     * @abstract\n     * @return {?}\n     */\n    ViewContainerRef.prototype.element = function () { };\n    /**\n     * The [dependency injector](guide/glossary#injector) for this view container.\n     * @abstract\n     * @return {?}\n     */\n    ViewContainerRef.prototype.injector = function () { };\n    /**\n     * @deprecated No replacement\n     * @abstract\n     * @return {?}\n     */\n    ViewContainerRef.prototype.parentInjector = function () { };\n    /**\n     * Destroys all views in this container.\n     * @abstract\n     * @return {?}\n     */\n    ViewContainerRef.prototype.clear = function () { };\n    /**\n     * Retrieves a view from this container.\n     * @abstract\n     * @param {?} index The 0-based index of the view to retrieve.\n     * @return {?} The `ViewRef` instance, or null if the index is out of range.\n     */\n    ViewContainerRef.prototype.get = function (index) { };\n    /**\n     * Reports how many views are currently attached to this container.\n     * @abstract\n     * @return {?} The number of views.\n     */\n    ViewContainerRef.prototype.length = function () { };\n    /**\n     * Instantiates an embedded view and inserts it\n     * into this container.\n     * @abstract\n     * @template C\n     * @param {?} templateRef The HTML template that defines the view.\n     * @param {?=} context\n     * @param {?=} index The 0-based index at which to insert the new view into this container.\n     * If not specified, appends the new view as the last entry.\n     *\n     * @return {?} The `ViewRef` instance for the newly created view.\n     */\n    ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) { };\n    /**\n     * Instantiates a single component and inserts its host view into this container.\n     *\n     * @abstract\n     * @template C\n     * @param {?} componentFactory The factory to use.\n     * @param {?=} index The index at which to insert the new component's host view into this container.\n     * If not specified, appends the new view as the last entry.\n     * @param {?=} injector The injector to use as the parent for the new component.\n     * @param {?=} projectableNodes\n     * @param {?=} ngModule\n     *\n     * @return {?} The new component instance, containing the host view.\n     *\n     */\n    ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModule) { };\n    /**\n     * Inserts a view into this container.\n     * @abstract\n     * @param {?} viewRef The view to insert.\n     * @param {?=} index The 0-based index at which to insert the view.\n     * If not specified, appends the new view as the last entry.\n     * @return {?} The inserted `ViewRef` instance.\n     *\n     */\n    ViewContainerRef.prototype.insert = function (viewRef, index) { };\n    /**\n     * Moves a view to a new location in this container.\n     * @abstract\n     * @param {?} viewRef The view to move.\n     * @param {?} currentIndex\n     * @return {?} The moved `ViewRef` instance.\n     */\n    ViewContainerRef.prototype.move = function (viewRef, currentIndex) { };\n    /**\n     * Returns the index of a view within the current container.\n     * @abstract\n     * @param {?} viewRef The view to query.\n     * @return {?} The 0-based index of the view's position in this container,\n     * or `-1` if this container doesn't contain the view.\n     */\n    ViewContainerRef.prototype.indexOf = function (viewRef) { };\n    /**\n     * Destroys a view attached to this container\n     * @abstract\n     * @param {?=} index The 0-based index of the view to destroy.\n     * If not specified, the last view in the container is removed.\n     * @return {?}\n     */\n    ViewContainerRef.prototype.remove = function (index) { };\n    /**\n     * Detaches a view from this container without destroying it.\n     * Use along with `insert()` to move a view within the current container.\n     * @abstract\n     * @param {?=} index The 0-based index of the view to detach.\n     * If not specified, the last view in the container is detached.\n     * @return {?}\n     */\n    ViewContainerRef.prototype.detach = function (index) { };\n}\n/** @type {?} */\nexport var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = render3InjectViewContainerRef;\n/** @type {?} */\nvar SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n/** @type {?} */\nvar SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n//# sourceMappingURL=view_container_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { injectChangeDetectorRef as render3InjectChangeDetectorRef } from '../render3/view_engine_compatibility';\n/**\n * Base class for Angular Views, provides change detection functionality.\n * A change-detection tree collects all views that are to be checked for changes.\n * Use the methods to add and remove views from the tree, initiate change-detection,\n * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n *\n * \\@usageNotes\n *\n * The following examples demonstrate how to modify default change-detection behavior\n * to perform explicit detection when needed.\n *\n * ### Use `markForCheck()` with `CheckOnce` strategy\n *\n * The following example sets the `OnPush` change-detection strategy for a component\n * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n * region=\"mark-for-check\"></code-example>\n *\n * ### Detach change detector to limit how often check occurs\n *\n * The following example defines a component with a large list of read-only data\n * that is expected to change constantly, many times per second.\n * To improve performance, we want to check and update the list\n * less often than the changes actually occur. To do that, we detach\n * the component's change detector and perform an explicit local check every five seconds.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n *\n *\n * ### Reattaching a detached component\n *\n * The following example creates a component displaying live data.\n * The component detaches its change detector from the main change detector tree\n * when the `live` property is set to false, and reattaches it when the property\n * becomes true.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n *\n * \\@publicApi\n * @abstract\n */\nvar ChangeDetectorRef = /** @class */ (function () {\n    function ChangeDetectorRef() {\n    }\n    /**\n     * \\@internal\n     */\n    ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n    return ChangeDetectorRef;\n}());\nexport { ChangeDetectorRef };\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ChangeDetectorRef.__NG_ELEMENT_ID__;\n    /**\n     * When a view uses the {\\@link ChangeDetectionStrategy#OnPush OnPush} (checkOnce)\n     * change detection strategy, explicitly marks the view as changed so that\n     * it can be checked again.\n     *\n     * Components are normally marked as dirty (in need of rerendering) when inputs\n     * have changed or events have fired in the view. Call this method to ensure that\n     * a component is checked even if these triggers have not occured.\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * @abstract\n     * @return {?}\n     */\n    ChangeDetectorRef.prototype.markForCheck = function () { };\n    /**\n     * Detaches this view from the change-detection tree.\n     * A detached view is  not checked until it is reattached.\n     * Use in combination with `detectChanges()` to implement local change detection checks.\n     *\n     * Detached views are not checked during change detection runs until they are\n     * re-attached, even if they are marked as dirty.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @abstract\n     * @return {?}\n     */\n    ChangeDetectorRef.prototype.detach = function () { };\n    /**\n     * Checks this view and its children. Use in combination with {\\@link ChangeDetectorRef#detach\n     * detach}\n     * to implement local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @abstract\n     * @return {?}\n     */\n    ChangeDetectorRef.prototype.detectChanges = function () { };\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * Use in development mode to verify that running change detection doesn't introduce\n     * other changes.\n     * @abstract\n     * @return {?}\n     */\n    ChangeDetectorRef.prototype.checkNoChanges = function () { };\n    /**\n     * Re-attaches the previously detached view to the change detection tree.\n     * Views are attached to the tree by default.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * @abstract\n     * @return {?}\n     */\n    ChangeDetectorRef.prototype.reattach = function () { };\n}\n/** @type {?} */\nexport var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = render3InjectChangeDetectorRef;\n/** @type {?} */\nvar SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n};\nvar ɵ0 = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n/** @type {?} */\nvar SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\nexport { ɵ0 };\n//# sourceMappingURL=change_detector_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { ChangeDetectorRef } from '../change_detection/change_detector_ref';\n/**\n * Represents an Angular [view](guide/glossary#view),\n * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n * Also serves as the base class\n * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n *\n * @see `EmbeddedViewRef`\n *\n * \\@publicApi\n * @abstract\n */\nvar /**\n * Represents an Angular [view](guide/glossary#view),\n * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n * Also serves as the base class\n * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n *\n * @see `EmbeddedViewRef`\n *\n * \\@publicApi\n * @abstract\n */\nViewRef = /** @class */ (function (_super) {\n    tslib_1.__extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular [view](guide/glossary#view),\n * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n * Also serves as the base class\n * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n *\n * @see `EmbeddedViewRef`\n *\n * \\@publicApi\n * @abstract\n */\nexport { ViewRef };\nif (false) {\n    /**\n     * Destroys this view and all of the data structures associated with it.\n     * @abstract\n     * @return {?}\n     */\n    ViewRef.prototype.destroy = function () { };\n    /**\n     * Reports whether this view has been destroyed.\n     * @abstract\n     * @return {?} True after the `destroy()` method has been called, false otherwise.\n     */\n    ViewRef.prototype.destroyed = function () { };\n    /**\n     * A lifecycle hook that provides additional developer-defined cleanup\n     * functionality for views.\n     * @abstract\n     * @param {?} callback A handler function that cleans up developer-defined data\n     * associated with a view. Called when the `destroy()` method is invoked.\n     * @return {?}\n     */\n    ViewRef.prototype.onDestroy = function (callback) { };\n}\n/**\n * Represents an Angular [view](guide/glossary#view) in a view container.\n * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n * other than the hosting component whose template defines it, or it can be defined\n * independently by a `TemplateRef`.\n *\n * Properties of elements in a view can change, but the structure (number and order) of elements in\n * a view cannot. Change the structure of elements by inserting, moving, or\n * removing nested views in a view container.\n *\n * @see `ViewContainerRef`\n *\n * \\@usageNotes\n *\n * The following template breaks down into two separate `TemplateRef` instances,\n * an outer one and an inner one.\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * This is the outer `TemplateRef`:\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * This is the inner `TemplateRef`:\n *\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * The outer and inner `TemplateRef` instances are assembled into views as follows:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@publicApi\n * @abstract\n * @template C\n */\nvar /**\n * Represents an Angular [view](guide/glossary#view) in a view container.\n * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n * other than the hosting component whose template defines it, or it can be defined\n * independently by a `TemplateRef`.\n *\n * Properties of elements in a view can change, but the structure (number and order) of elements in\n * a view cannot. Change the structure of elements by inserting, moving, or\n * removing nested views in a view container.\n *\n * @see `ViewContainerRef`\n *\n * \\@usageNotes\n *\n * The following template breaks down into two separate `TemplateRef` instances,\n * an outer one and an inner one.\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * This is the outer `TemplateRef`:\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * This is the inner `TemplateRef`:\n *\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * The outer and inner `TemplateRef` instances are assembled into views as follows:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@publicApi\n * @abstract\n * @template C\n */\nEmbeddedViewRef = /** @class */ (function (_super) {\n    tslib_1.__extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n/**\n * Represents an Angular [view](guide/glossary#view) in a view container.\n * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n * other than the hosting component whose template defines it, or it can be defined\n * independently by a `TemplateRef`.\n *\n * Properties of elements in a view can change, but the structure (number and order) of elements in\n * a view cannot. Change the structure of elements by inserting, moving, or\n * removing nested views in a view container.\n *\n * @see `ViewContainerRef`\n *\n * \\@usageNotes\n *\n * The following template breaks down into two separate `TemplateRef` instances,\n * an outer one and an inner one.\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * This is the outer `TemplateRef`:\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * This is the inner `TemplateRef`:\n *\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * The outer and inner `TemplateRef` instances are assembled into views as follows:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@publicApi\n * @abstract\n * @template C\n */\nexport { EmbeddedViewRef };\nif (false) {\n    /**\n     * The context for this view, inherited from the anchor element.\n     * @abstract\n     * @return {?}\n     */\n    EmbeddedViewRef.prototype.context = function () { };\n    /**\n     * The root nodes for this embedded view.\n     * @abstract\n     * @return {?}\n     */\n    EmbeddedViewRef.prototype.rootNodes = function () { };\n}\n/**\n * @record\n */\nexport function InternalViewRef() { }\n/** @type {?} */\nInternalViewRef.prototype.detachFromAppRef;\n/** @type {?} */\nInternalViewRef.prototype.attachToAppRef;\n//# sourceMappingURL=view_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { COMPILER_OPTIONS, Compiler, CompilerFactory, ModuleWithComponentFactories } from './linker/compiler';\nexport { ComponentFactory, ComponentRef } from './linker/component_factory';\nexport { ComponentFactoryResolver } from './linker/component_factory_resolver';\nexport { ElementRef } from './linker/element_ref';\nexport { NgModuleFactory, NgModuleRef } from './linker/ng_module_factory';\nexport { NgModuleFactoryLoader, getModuleFactory } from './linker/ng_module_factory_loader';\nexport { QueryList } from './linker/query_list';\nexport { SystemJsNgModuleLoader, SystemJsNgModuleLoaderConfig } from './linker/system_js_ng_module_factory_loader';\nexport { TemplateRef } from './linker/template_ref';\nexport { ViewContainerRef } from './linker/view_container_ref';\nexport { EmbeddedViewRef, ViewRef } from './linker/view_ref';\n//# sourceMappingURL=linker.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { assertDomNode } from '../render3/assert';\nimport { getComponent, getInjector, getLocalRefs, loadContext } from '../render3/discovery_utils';\nimport { TVIEW } from '../render3/interfaces/view';\nvar EventListener = /** @class */ (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\nexport { EventListener };\nif (false) {\n    /** @type {?} */\n    EventListener.prototype.name;\n    /** @type {?} */\n    EventListener.prototype.callback;\n}\nvar DebugNode__PRE_R3__ = /** @class */ (function () {\n    function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n        this.listeners = [];\n        this.parent = null;\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement__PRE_R3__) {\n            parent.addChild(this);\n        }\n    }\n    Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode__PRE_R3__;\n}());\nexport { DebugNode__PRE_R3__ };\nif (false) {\n    /** @type {?} */\n    DebugNode__PRE_R3__.prototype.listeners;\n    /** @type {?} */\n    DebugNode__PRE_R3__.prototype.parent;\n    /** @type {?} */\n    DebugNode__PRE_R3__.prototype.nativeNode;\n    /** @type {?} */\n    DebugNode__PRE_R3__.prototype._debugContext;\n}\nvar DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n    tslib_1.__extends(DebugElement__PRE_R3__, _super);\n    function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement__PRE_R3__.prototype.addChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            (/** @type {?} */ (child)).parent = this;\n        }\n    };\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement__PRE_R3__.prototype.removeChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        /** @type {?} */\n        var childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            (/** @type {?} */ (child)).parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    DebugElement__PRE_R3__.prototype.insertChildrenAfter = /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    function (child, newChildren) {\n        var _this = this;\n        var _a;\n        /** @type {?} */\n        var siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, [siblingIndex + 1, 0].concat(newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    (/** @type {?} */ (c.parent)).removeChild(c);\n                }\n                (/** @type {?} */ (child)).parent = _this;\n            });\n        }\n    };\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugElement__PRE_R3__.prototype.insertBefore = /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (refChild, newChild) {\n        /** @type {?} */\n        var refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                (/** @type {?} */ (newChild.parent)).removeChild(newChild);\n            }\n            (/** @type {?} */ (newChild)).parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement__PRE_R3__.prototype.query = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        /** @type {?} */\n        var results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement__PRE_R3__.prototype.queryAll = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        /** @type {?} */\n        var matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement__PRE_R3__.prototype.queryAllNodes = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        /** @type {?} */\n        var matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return /** @type {?} */ (this\n                .childNodes //\n                .filter(function (node) { return node instanceof DebugElement__PRE_R3__; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    DebugElement__PRE_R3__.prototype.triggerEventHandler = /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement__PRE_R3__;\n}(DebugNode__PRE_R3__));\nexport { DebugElement__PRE_R3__ };\nif (false) {\n    /** @type {?} */\n    DebugElement__PRE_R3__.prototype.name;\n    /** @type {?} */\n    DebugElement__PRE_R3__.prototype.properties;\n    /** @type {?} */\n    DebugElement__PRE_R3__.prototype.attributes;\n    /** @type {?} */\n    DebugElement__PRE_R3__.prototype.classes;\n    /** @type {?} */\n    DebugElement__PRE_R3__.prototype.styles;\n    /** @type {?} */\n    DebugElement__PRE_R3__.prototype.childNodes;\n    /** @type {?} */\n    DebugElement__PRE_R3__.prototype.nativeElement;\n}\n/**\n * \\@publicApi\n * @param {?} debugEls\n * @return {?}\n */\nexport function asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement__PRE_R3__) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement__PRE_R3__) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement__PRE_R3__) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n/**\n * @return {?}\n */\nfunction notImplemented() {\n    throw new Error('Missing proper ivy implementation.');\n}\nvar DebugNode__POST_R3__ = /** @class */ (function () {\n    function DebugNode__POST_R3__(nativeNode) {\n        this.nativeNode = nativeNode;\n    }\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var parent = /** @type {?} */ (this.nativeNode.parentNode);\n            return parent ? new DebugElement__POST_R3__(parent) : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return getInjector(this.nativeNode); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var nativeElement = this.nativeNode;\n            return nativeElement && getComponent(/** @type {?} */ (nativeElement));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // https://angular-team.atlassian.net/browse/FW-719\n            throw notImplemented();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // TODO: add real implementation;\n            // https://angular-team.atlassian.net/browse/FW-719\n            return [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return getLocalRefs(this.nativeNode); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var context = /** @type {?} */ ((loadContext(/** @type {?} */ (this.nativeNode), false)));\n            if (!context)\n                return [];\n            /** @type {?} */\n            var lView = context.lView;\n            /** @type {?} */\n            var tView = lView[TVIEW];\n            /** @type {?} */\n            var tNode = /** @type {?} */ (tView.data[context.nodeIndex]);\n            /** @type {?} */\n            var providerTokens = [];\n            /** @type {?} */\n            var nodeFlags = tNode.flags;\n            /** @type {?} */\n            var startIndex = nodeFlags >> 16 /* DirectiveStartingIndexShift */;\n            /** @type {?} */\n            var directiveCount = nodeFlags & 4095 /* DirectiveCountMask */;\n            /** @type {?} */\n            var endIndex = startIndex + directiveCount;\n            for (var i = startIndex; i < endIndex; i++) {\n                /** @type {?} */\n                var value = tView.data[i];\n                if (isDirectiveDefHack(value)) {\n                    // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                    // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                    // is that for Components/Directives we store the def instead the type. The correct behavior\n                    // is that we should always be storing injectable type in this location.\n                    value = value.type;\n                }\n                providerTokens.push(value);\n            }\n            return providerTokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode__POST_R3__;\n}());\nif (false) {\n    /** @type {?} */\n    DebugNode__POST_R3__.prototype.nativeNode;\n}\nvar DebugElement__POST_R3__ = /** @class */ (function (_super) {\n    tslib_1.__extends(DebugElement__POST_R3__, _super);\n    function DebugElement__POST_R3__(nativeNode) {\n        var _this = this;\n        ngDevMode && assertDomNode(nativeNode);\n        _this = _super.call(this, nativeNode) || this;\n        return _this;\n    }\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.nativeNode.nodeType == Node.ELEMENT_NODE ? /** @type {?} */ (this.nativeNode) : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return (/** @type {?} */ (this.nativeElement)).nodeName; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var context = /** @type {?} */ ((loadContext(this.nativeNode)));\n            /** @type {?} */\n            var lView = context.lView;\n            /** @type {?} */\n            var tView = lView[TVIEW];\n            /** @type {?} */\n            var tNode = /** @type {?} */ (tView.data[context.nodeIndex]);\n            /** @type {?} */\n            var properties = {};\n            // TODO: https://angular-team.atlassian.net/browse/FW-681\n            // Missing implementation here...\n            return properties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // https://angular-team.atlassian.net/browse/FW-719\n            throw notImplemented();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // https://angular-team.atlassian.net/browse/FW-719\n            throw notImplemented();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // https://angular-team.atlassian.net/browse/FW-719\n            throw notImplemented();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var childNodes = this.nativeNode.childNodes;\n            /** @type {?} */\n            var children = [];\n            for (var i = 0; i < childNodes.length; i++) {\n                /** @type {?} */\n                var element = childNodes[i];\n                children.push(getDebugNode__POST_R3__(element));\n            }\n            return children;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var nativeElement = this.nativeElement;\n            if (!nativeElement)\n                return [];\n            /** @type {?} */\n            var childNodes = nativeElement.children;\n            /** @type {?} */\n            var children = [];\n            for (var i = 0; i < childNodes.length; i++) {\n                /** @type {?} */\n                var element = childNodes[i];\n                children.push(getDebugNode__POST_R3__(element));\n            }\n            return children;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement__POST_R3__.prototype.query = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        /** @type {?} */\n        var results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement__POST_R3__.prototype.queryAll = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        /** @type {?} */\n        var matches = [];\n        _queryNodeChildrenR3(this, predicate, matches, true);\n        return matches;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement__POST_R3__.prototype.queryAllNodes = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        /** @type {?} */\n        var matches = [];\n        _queryNodeChildrenR3(this, predicate, matches, false);\n        return matches;\n    };\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    DebugElement__POST_R3__.prototype.triggerEventHandler = /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    function (eventName, eventObj) {\n        /** @type {?} */\n        var event = document.createEvent('MouseEvent');\n        event.initEvent(eventName, true, true);\n        (/** @type {?} */ (this.nativeElement)).dispatchEvent(event);\n    };\n    return DebugElement__POST_R3__;\n}(DebugNode__POST_R3__));\n/**\n * This function should not exist because it is megamorphic and only mostly correct.\n *\n * See call site for more info.\n * @param {?} obj\n * @return {?}\n */\nfunction isDirectiveDefHack(obj) {\n    return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @param {?} elementsOnly\n * @return {?}\n */\nfunction _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n    if (parentNode instanceof DebugElement__POST_R3__) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement__POST_R3__) {\n                if (elementsOnly ? node.nativeElement : true) {\n                    _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                }\n            }\n        });\n    }\n}\n/** @type {?} */\nvar _nativeNodeToDebugNode = new Map();\n/**\n * @param {?} nativeNode\n * @return {?}\n */\nfunction getDebugNode__PRE_R3__(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @param {?} nativeNode\n * @return {?}\n */\nexport function getDebugNode__POST_R3__(nativeNode) {\n    if (nativeNode instanceof Node) {\n        return nativeNode.nodeType == Node.ELEMENT_NODE ?\n            new DebugElement__POST_R3__(/** @type {?} */ (nativeNode)) :\n            new DebugNode__POST_R3__(nativeNode);\n    }\n    return null;\n}\n/** *\n * \\@publicApi\n  @type {?} */\nexport var getDebugNode = getDebugNode__PRE_R3__;\n/**\n * @return {?}\n */\nexport function getAllDebugNodes() {\n    return Array.from(_nativeNodeToDebugNode.values());\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * \\@publicApi\n * @record\n * @template T\n */\nexport function Predicate() { }\n/** *\n * \\@publicApi\n  @type {?} */\nexport var DebugNode = /** @type {?} */ (DebugNode__PRE_R3__);\n/** *\n * \\@publicApi\n  @type {?} */\nexport var DebugElement = /** @type {?} */ (DebugElement__PRE_R3__);\n//# sourceMappingURL=debug_node.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { looseIdentical, stringify } from '../../util';\nimport { isListLikeIterable, iterateListLike } from '../change_detection_util';\nvar DefaultIterableDifferFactory = /** @class */ (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return isListLikeIterable(obj); };\n    /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.create = /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nexport { DefaultIterableDifferFactory };\n/** @type {?} */\nvar trackByIdentity = function (index, item) { return item; };\nvar ɵ0 = trackByIdentity;\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n * \\@publicApi\n * @template V\n */\nvar /**\n * @deprecated v4.0.0 - Should not be part of public API.\n * \\@publicApi\n * @template V\n */\nDefaultIterableDiffer = /** @class */ (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachOperation = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var nextIt = this._itHead;\n        /** @type {?} */\n        var nextRemove = this._removalsHead;\n        /** @type {?} */\n        var addRemoveOffset = 0;\n        /** @type {?} */\n        var moveOffsets = null;\n        while (nextIt || nextRemove) {\n            /** @type {?} */\n            var record = !nextRemove ||\n                nextIt && /** @type {?} */ ((nextIt.currentIndex)) < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ? /** @type {?} */\n                ((nextIt)) :\n                nextRemove;\n            /** @type {?} */\n            var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            /** @type {?} */\n            var currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = /** @type {?} */ ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    /** @type {?} */\n                    var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    /** @type {?} */\n                    var localCurrentIndex = /** @type {?} */ ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var i = 0; i < localMovePreviousIndex; i++) {\n                            /** @type {?} */\n                            var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            /** @type {?} */\n                            var index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        /** @type {?} */\n                        var previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachMovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachIdentityChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.diff = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.check = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        var _this = this;\n        this._reset();\n        /** @type {?} */\n        var record = this._itHead;\n        /** @type {?} */\n        var mayBeDirty = false;\n        /** @type {?} */\n        var index;\n        /** @type {?} */\n        var item;\n        /** @type {?} */\n        var itemTrackBy;\n        if (Array.isArray(collection)) {\n            (/** @type {?} */ (this)).length = collection.length;\n            for (var index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            (/** @type {?} */ (this)).length = index;\n        }\n        this._truncate(record);\n        (/** @type {?} */ (this)).collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reset = /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            /** @type {?} */\n            var record = void 0;\n            /** @type {?} */\n            var nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // TODO(vicb): when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._mismatch = /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        /** @type {?} */\n        var previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        /** @type {?} */\n        var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._truncate = /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            /** @type {?} */\n            var nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reinsertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        /** @type {?} */\n        var prev = record._prevRemoved;\n        /** @type {?} */\n        var next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._moveAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // TODO(vicb):\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._insertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        /** @type {?} */\n        var next = prevRecord === null ? this._itHead : prevRecord._next;\n        // TODO(vicb):\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._remove = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._unlink = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        /** @type {?} */\n        var prev = record._prev;\n        /** @type {?} */\n        var next = record._next;\n        // TODO(vicb):\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToMoves = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    function (record, toIndex) {\n        // TODO(vicb):\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // TODO(vicb):\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToRemovals = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // TODO(vicb):\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addIdentityChange = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n * \\@publicApi\n * @template V\n */\nexport { DefaultIterableDiffer };\nif (false) {\n    /** @type {?} */\n    DefaultIterableDiffer.prototype.length;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype.collection;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._linkedRecords;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._unlinkedRecords;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._previousItHead;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._itHead;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._itTail;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._additionsHead;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._additionsTail;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._movesHead;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._movesTail;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._removalsHead;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._removalsTail;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._identityChangesHead;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._identityChangesTail;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._trackByFn;\n}\n/**\n * @template V\n */\nvar /**\n * @template V\n */\nIterableChangeRecord_ = /** @class */ (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\n/**\n * @template V\n */\nexport { IterableChangeRecord_ };\nif (false) {\n    /** @type {?} */\n    IterableChangeRecord_.prototype.currentIndex;\n    /** @type {?} */\n    IterableChangeRecord_.prototype.previousIndex;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._nextPrevious;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._prev;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._next;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._prevDup;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._nextDup;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._prevRemoved;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._nextRemoved;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._nextAdded;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._nextMoved;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._nextIdentityChange;\n    /** @type {?} */\n    IterableChangeRecord_.prototype.item;\n    /** @type {?} */\n    IterableChangeRecord_.prototype.trackById;\n}\n/**\n * @template V\n */\nvar /**\n * @template V\n */\n_DuplicateItemRecordList = /** @class */ (function () {\n    function _DuplicateItemRecordList() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.add = /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            /** @type {?} */ ((\n            // TODO(vicb):\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.get = /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        /** @type {?} */\n        var record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */ ((record.currentIndex))) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.remove = /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        /** @type {?} */\n        var prev = record._prevDup;\n        /** @type {?} */\n        var next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    _DuplicateItemRecordList.prototype._head;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    _DuplicateItemRecordList.prototype._tail;\n}\n/**\n * @template V\n */\nvar /**\n * @template V\n */\n_DuplicateMap = /** @class */ (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.put = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        /** @type {?} */\n        var key = record.trackById;\n        /** @type {?} */\n        var duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateMap.prototype.get = /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        /** @type {?} */\n        var key = trackById;\n        /** @type {?} */\n        var recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.remove = /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        /** @type {?} */\n        var key = record.trackById;\n        /** @type {?} */\n        var recordList = /** @type {?} */ ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    _DuplicateMap.prototype.clear = /**\n     * @return {?}\n     */\n    function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\nif (false) {\n    /** @type {?} */\n    _DuplicateMap.prototype.map;\n}\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    /** @type {?} */\n    var previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    /** @type {?} */\n    var moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\nexport { ɵ0 };\n//# sourceMappingURL=default_iterable_differ.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { looseIdentical, stringify } from '../../util';\nimport { isJsObject } from '../change_detection_util';\n/**\n * @template K, V\n */\nvar /**\n * @template K, V\n */\nDefaultKeyValueDifferFactory = /** @class */ (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return obj instanceof Map || isJsObject(obj); };\n    /**\n     * @template K, V\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.create = /**\n     * @template K, V\n     * @return {?}\n     */\n    function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\n/**\n * @template K, V\n */\nexport { DefaultKeyValueDifferFactory };\n/**\n * @template K, V\n */\nvar /**\n * @template K, V\n */\nDefaultKeyValueDiffer = /** @class */ (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.diff = /**\n     * @param {?=} map\n     * @return {?}\n     */\n    function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    /**\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.check = /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    function (map) {\n        var _this = this;\n        this._reset();\n        /** @type {?} */\n        var insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                /** @type {?} */\n                var record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    function (before, record) {\n        if (before) {\n            /** @type {?} */\n            var prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    function (key, value) {\n        if (this._records.has(key)) {\n            /** @type {?} */\n            var record_1 = /** @type {?} */ ((this._records.get(key)));\n            this._maybeAddToChanges(record_1, value);\n            /** @type {?} */\n            var prev = record_1._prev;\n            /** @type {?} */\n            var next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        /** @type {?} */\n        var record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._reset = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            /** @type {?} */\n            var record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToAdditions = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToChanges = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._forEach = /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\n/**\n * @template K, V\n */\nexport { DefaultKeyValueDiffer };\nif (false) {\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._records;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._mapHead;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._appendAfter;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._previousMapHead;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._changesHead;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._changesTail;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._additionsHead;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._additionsTail;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._removalsHead;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._removalsTail;\n}\n/**\n * @template K, V\n */\nvar /**\n * @template K, V\n */\nKeyValueChangeRecord_ = /** @class */ (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\nif (false) {\n    /** @type {?} */\n    KeyValueChangeRecord_.prototype.previousValue;\n    /** @type {?} */\n    KeyValueChangeRecord_.prototype.currentValue;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    KeyValueChangeRecord_.prototype._nextPrevious;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    KeyValueChangeRecord_.prototype._next;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    KeyValueChangeRecord_.prototype._prev;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    KeyValueChangeRecord_.prototype._nextAdded;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    KeyValueChangeRecord_.prototype._nextRemoved;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    KeyValueChangeRecord_.prototype._nextChanged;\n    /** @type {?} */\n    KeyValueChangeRecord_.prototype.key;\n}\n//# sourceMappingURL=default_keyvalue_differ.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { defineInjectable } from '../../di/defs';\nimport { Optional, SkipSelf } from '../../di/metadata';\nimport { DefaultIterableDifferFactory } from '../differs/default_iterable_differ';\n/** @typedef {?} */\nvar NgIterable;\nexport { NgIterable };\n/**\n * A strategy for tracking changes over time to an iterable. Used by {\\@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * \\@publicApi\n * @record\n * @template V\n */\nexport function IterableDiffer() { }\n/**\n * Compute a difference between the previous state and the new `object` state.\n *\n * \\@param object containing the new value.\n * \\@return an object describing the difference. The return value is only valid until the next\n * `diff()` invocation.\n * @type {?}\n */\nIterableDiffer.prototype.diff;\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * \\@publicApi\n * @record\n * @template V\n */\nexport function IterableChanges() { }\n/**\n * Iterate over all changes. `IterableChangeRecord` will contain information about changes\n * to each item.\n * @type {?}\n */\nIterableChanges.prototype.forEachItem;\n/**\n * Iterate over a set of operations which when applied to the original `Iterable` will produce the\n * new `Iterable`.\n *\n * NOTE: These are not necessarily the actual operations which were applied to the original\n * `Iterable`, rather these are a set of computed operations which may not be the same as the\n * ones applied.\n *\n * \\@param record A change which needs to be applied\n * \\@param previousIndex The `IterableChangeRecord#previousIndex` of the `record` refers to the\n *        original `Iterable` location, where as `previousIndex` refers to the transient location\n *        of the item, after applying the operations up to this point.\n * \\@param currentIndex The `IterableChangeRecord#currentIndex` of the `record` refers to the\n *        original `Iterable` location, where as `currentIndex` refers to the transient location\n *        of the item, after applying the operations up to this point.\n * @type {?}\n */\nIterableChanges.prototype.forEachOperation;\n/**\n * Iterate over changes in the order of original `Iterable` showing where the original items\n * have moved.\n * @type {?}\n */\nIterableChanges.prototype.forEachPreviousItem;\n/**\n * Iterate over all added items.\n * @type {?}\n */\nIterableChanges.prototype.forEachAddedItem;\n/**\n * Iterate over all moved items.\n * @type {?}\n */\nIterableChanges.prototype.forEachMovedItem;\n/**\n * Iterate over all removed items.\n * @type {?}\n */\nIterableChanges.prototype.forEachRemovedItem;\n/**\n * Iterate over all items which had their identity (as computed by the `TrackByFunction`)\n * changed.\n * @type {?}\n */\nIterableChanges.prototype.forEachIdentityChange;\n/**\n * Record representing the item change information.\n *\n * \\@publicApi\n * @record\n * @template V\n */\nexport function IterableChangeRecord() { }\n/**\n * Current index of the item in `Iterable` or null if removed.\n * @type {?}\n */\nIterableChangeRecord.prototype.currentIndex;\n/**\n * Previous index of the item in `Iterable` or null if added.\n * @type {?}\n */\nIterableChangeRecord.prototype.previousIndex;\n/**\n * The item.\n * @type {?}\n */\nIterableChangeRecord.prototype.item;\n/**\n * Track by identity as computed by the `TrackByFunction`.\n * @type {?}\n */\nIterableChangeRecord.prototype.trackById;\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * \\@publicApi\n * @record\n * @template V\n */\nexport function CollectionChangeRecord() { }\n/**\n * An optional function passed into {\\@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * \\@publicApi\n * @record\n * @template T\n */\nexport function TrackByFunction() { }\n/**\n * Provides a factory for {\\@link IterableDiffer}.\n *\n * \\@publicApi\n * @record\n */\nexport function IterableDifferFactory() { }\n/** @type {?} */\nIterableDifferFactory.prototype.supports;\n/** @type {?} */\nIterableDifferFactory.prototype.create;\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n *\n * \\@publicApi\n */\nvar IterableDiffers = /** @class */ (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    IterableDiffers.create = /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent != null) {\n            /** @type {?} */\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new IterableDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    IterableDiffers.extend = /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    IterableDiffers.prototype.find = /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    function (iterable) {\n        /** @type {?} */\n        var factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    /** @nocollapse */\n    /** @nocollapse */ IterableDiffers.ngInjectableDef = defineInjectable({\n        providedIn: 'root',\n        factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n    });\n    return IterableDiffers;\n}());\nexport { IterableDiffers };\nif (false) {\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    IterableDiffers.ngInjectableDef;\n    /**\n     * @deprecated v4.0.0 - Should be private\n     * @type {?}\n     */\n    IterableDiffers.prototype.factories;\n}\n/**\n * @param {?} type\n * @return {?}\n */\nexport function getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n//# sourceMappingURL=iterable_differs.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Optional, SkipSelf, defineInjectable } from '../../di';\nimport { DefaultKeyValueDifferFactory } from './default_keyvalue_differ';\n/**\n * A differ that tracks changes made to an object over time.\n *\n * \\@publicApi\n * @record\n * @template K, V\n */\nexport function KeyValueDiffer() { }\n/**\n * Compute a difference between the previous state and the new `object` state.\n *\n * \\@param object containing the new value.\n * \\@return an object describing the difference. The return value is only valid until the next\n * `diff()` invocation.\n * @type {?}\n */\nKeyValueDiffer.prototype.diff;\n/**\n * Compute a difference between the previous state and the new `object` state.\n *\n * \\@param object containing the new value.\n * \\@return an object describing the difference. The return value is only valid until the next\n * `diff()` invocation.\n * @type {?}\n */\nKeyValueDiffer.prototype.diff;\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * \\@publicApi\n * @record\n * @template K, V\n */\nexport function KeyValueChanges() { }\n/**\n * Iterate over all changes. `KeyValueChangeRecord` will contain information about changes\n * to each item.\n * @type {?}\n */\nKeyValueChanges.prototype.forEachItem;\n/**\n * Iterate over changes in the order of original Map showing where the original items\n * have moved.\n * @type {?}\n */\nKeyValueChanges.prototype.forEachPreviousItem;\n/**\n * Iterate over all keys for which values have changed.\n * @type {?}\n */\nKeyValueChanges.prototype.forEachChangedItem;\n/**\n * Iterate over all added items.\n * @type {?}\n */\nKeyValueChanges.prototype.forEachAddedItem;\n/**\n * Iterate over all removed items.\n * @type {?}\n */\nKeyValueChanges.prototype.forEachRemovedItem;\n/**\n * Record representing the item change information.\n *\n * \\@publicApi\n * @record\n * @template K, V\n */\nexport function KeyValueChangeRecord() { }\n/**\n * Current key in the Map.\n * @type {?}\n */\nKeyValueChangeRecord.prototype.key;\n/**\n * Current value for the key or `null` if removed.\n * @type {?}\n */\nKeyValueChangeRecord.prototype.currentValue;\n/**\n * Previous value for the key or `null` if added.\n * @type {?}\n */\nKeyValueChangeRecord.prototype.previousValue;\n/**\n * Provides a factory for {\\@link KeyValueDiffer}.\n *\n * \\@publicApi\n * @record\n */\nexport function KeyValueDifferFactory() { }\n/**\n * Test to see if the differ knows how to diff this kind of object.\n * @type {?}\n */\nKeyValueDifferFactory.prototype.supports;\n/**\n * Create a `KeyValueDiffer`.\n * @type {?}\n */\nKeyValueDifferFactory.prototype.create;\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n * \\@publicApi\n */\nvar KeyValueDiffers = /** @class */ (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    KeyValueDiffers.create = /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent) {\n            /** @type {?} */\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    KeyValueDiffers.extend = /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    KeyValueDiffers.prototype.find = /**\n     * @param {?} kv\n     * @return {?}\n     */\n    function (kv) {\n        /** @type {?} */\n        var factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    /** @nocollapse */\n    /** @nocollapse */ KeyValueDiffers.ngInjectableDef = defineInjectable({\n        providedIn: 'root',\n        factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n    });\n    return KeyValueDiffers;\n}());\nexport { KeyValueDiffers };\nif (false) {\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    KeyValueDiffers.ngInjectableDef;\n    /**\n     * @deprecated v4.0.0 - Should be private.\n     * @type {?}\n     */\n    KeyValueDiffers.prototype.factories;\n}\n//# sourceMappingURL=keyvalue_differs.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DefaultIterableDifferFactory } from './differs/default_iterable_differ';\nimport { DefaultKeyValueDifferFactory } from './differs/default_keyvalue_differ';\nimport { IterableDiffers } from './differs/iterable_differs';\nimport { KeyValueDiffers } from './differs/keyvalue_differs';\nexport { SimpleChange, WrappedValue, devModeEqual } from './change_detection_util';\nexport { ChangeDetectorRef } from './change_detector_ref';\nexport { ChangeDetectionStrategy, ChangeDetectorStatus, isDefaultChangeDetectionStrategy } from './constants';\nexport { DefaultIterableDifferFactory } from './differs/default_iterable_differ';\nexport { DefaultIterableDiffer } from './differs/default_iterable_differ';\nexport { DefaultKeyValueDifferFactory } from './differs/default_keyvalue_differ';\nexport { IterableDiffers } from './differs/iterable_differs';\nexport { KeyValueDiffers } from './differs/keyvalue_differs';\n/** *\n * Structural diffing for `Object`s and `Map`s.\n  @type {?} */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/** *\n * Structural diffing for `Iterable` types such as `Array`s.\n  @type {?} */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\n/** @type {?} */\nexport var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n/** @type {?} */\nexport var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n//# sourceMappingURL=change_detection.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { ChangeDetectionStrategy, ChangeDetectorRef, DefaultIterableDiffer, IterableDiffers, KeyValueDiffers, SimpleChange, WrappedValue } from './change_detection/change_detection';\n//# sourceMappingURL=change_detection.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { PlatformRef, createPlatformFactory } from './application_ref';\nimport { PLATFORM_ID } from './application_tokens';\nimport { Console } from './console';\nimport { Injector } from './di';\nimport { TestabilityRegistry } from './testability/testability';\n/** @type {?} */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/** *\n * This platform has to be included in any other platform\n *\n * \\@publicApi\n  @type {?} */\nexport var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n//# sourceMappingURL=platform_core_providers.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken } from '../di/injection_token';\n/** *\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * \\@publicApi\n  @type {?} */\nexport var LOCALE_ID = new InjectionToken('LocaleId');\n/** *\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * \\@publicApi\n  @type {?} */\nexport var TRANSLATIONS = new InjectionToken('Translations');\n/** *\n * Provide this token at bootstrap to set the format of your {\\@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * \\@publicApi\n  @type {?} */\nexport var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nexport { MissingTranslationStrategy };\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = 'Error';\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = 'Warning';\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = 'Ignore';\n//# sourceMappingURL=tokens.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { APP_INITIALIZER, ApplicationInitStatus } from './application_init';\nimport { ApplicationRef } from './application_ref';\nimport { APP_ID_RANDOM_PROVIDER } from './application_tokens';\nimport { IterableDiffers, KeyValueDiffers, defaultIterableDiffers, defaultKeyValueDiffers } from './change_detection/change_detection';\nimport { Console } from './console';\nimport { Injector } from './di';\nimport { Inject, Optional, SkipSelf } from './di/metadata';\nimport { ErrorHandler } from './error_handler';\nimport { LOCALE_ID } from './i18n/tokens';\nimport { ComponentFactoryResolver } from './linker';\nimport { Compiler } from './linker/compiler';\nimport { NgModule } from './metadata';\nimport { NgZone } from './zone';\n/**\n * @return {?}\n */\nexport function _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nexport function _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nexport function _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/** *\n * A built-in [dependency injection token](guide/glossary#di-token)\n * that is used to configure the root injector for bootstrapping.\n  @type {?} */\nexport var APPLICATION_MODULE_PROVIDERS = [\n    {\n        provide: ApplicationRef,\n        useClass: ApplicationRef,\n        deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n    },\n    {\n        provide: ApplicationInitStatus,\n        useClass: ApplicationInitStatus,\n        deps: [[new Optional(), APP_INITIALIZER]]\n    },\n    { provide: Compiler, useClass: Compiler, deps: [] },\n    APP_ID_RANDOM_PROVIDER,\n    { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n    { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n    {\n        provide: LOCALE_ID,\n        useFactory: _localeFactory,\n        deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n    },\n];\n/**\n * Configures the root injector for an app with\n * providers of `\\@angular/core` dependencies that `ApplicationRef` needs\n * to bootstrap components.\n *\n * Re-exported by `BrowserModule`, which is included automatically in the root\n * `AppModule` when you create a new app with the CLI `new` command.\n *\n * \\@publicApi\n */\nvar ApplicationModule = /** @class */ (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule.decorators = [\n        { type: NgModule, args: [{ providers: APPLICATION_MODULE_PROVIDERS },] },\n    ];\n    /** @nocollapse */\n    ApplicationModule.ctorParameters = function () { return [\n        { type: ApplicationRef }\n    ]; };\n    return ApplicationModule;\n}());\nexport { ApplicationModule };\n//# sourceMappingURL=application_module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nexport var SWITCH_IVY_ENABLED__POST_R3__ = true;\n/** @type {?} */\nvar SWITCH_IVY_ENABLED__PRE_R3__ = true;\n/** @type {?} */\nexport var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n//# sourceMappingURL=ivy_switch.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// unsupported: template constraints.\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n * @record\n * @template D\n */\nexport function DefinitionFactory() { }\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n * @record\n */\nexport function NodeLogger() { }\n// unsupported: template constraints.\n/**\n * @record\n * @template DF\n */\nexport function Definition() { }\n/** @type {?} */\nDefinition.prototype.factory;\n/**\n * @record\n */\nexport function NgModuleDefinition() { }\n/** @type {?} */\nNgModuleDefinition.prototype.providers;\n/** @type {?} */\nNgModuleDefinition.prototype.providersByKey;\n/** @type {?} */\nNgModuleDefinition.prototype.modules;\n/** @type {?} */\nNgModuleDefinition.prototype.isRoot;\n/**\n * @record\n */\nexport function NgModuleDefinitionFactory() { }\n/**\n * @record\n */\nexport function ViewDefinition() { }\n/** @type {?} */\nViewDefinition.prototype.flags;\n/** @type {?} */\nViewDefinition.prototype.updateDirectives;\n/** @type {?} */\nViewDefinition.prototype.updateRenderer;\n/** @type {?} */\nViewDefinition.prototype.handleEvent;\n/**\n * Order: Depth first.\n * Especially providers are before elements / anchors.\n * @type {?}\n */\nViewDefinition.prototype.nodes;\n/**\n * aggregated NodeFlags for all nodes *\n * @type {?}\n */\nViewDefinition.prototype.nodeFlags;\n/** @type {?} */\nViewDefinition.prototype.rootNodeFlags;\n/** @type {?} */\nViewDefinition.prototype.lastRenderRootNode;\n/** @type {?} */\nViewDefinition.prototype.bindingCount;\n/** @type {?} */\nViewDefinition.prototype.outputCount;\n/**\n * Binary or of all query ids that are matched by one of the nodes.\n * This includes query ids from templates as well.\n * Used as a bloom filter.\n * @type {?}\n */\nViewDefinition.prototype.nodeMatchedQueries;\n/**\n * @record\n */\nexport function ViewDefinitionFactory() { }\n/**\n * @record\n */\nexport function ViewUpdateFn() { }\n/**\n * @record\n */\nexport function NodeCheckFn() { }\n/** @enum {number} */\nvar ArgumentType = {\n    Inline: 0, Dynamic: 1,\n};\nexport { ArgumentType };\n/**\n * @record\n */\nexport function ViewHandleEventFn() { }\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\nexport { ViewFlags };\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n * @record\n */\nexport function NodeDef() { }\n/** @type {?} */\nNodeDef.prototype.flags;\n/** @type {?} */\nNodeDef.prototype.nodeIndex;\n/** @type {?} */\nNodeDef.prototype.checkIndex;\n/** @type {?} */\nNodeDef.prototype.parent;\n/** @type {?} */\nNodeDef.prototype.renderParent;\n/**\n * this is checked against NgContentDef.index to find matched nodes\n * @type {?}\n */\nNodeDef.prototype.ngContentIndex;\n/**\n * number of transitive children\n * @type {?}\n */\nNodeDef.prototype.childCount;\n/**\n * aggregated NodeFlags for all transitive children (does not include self) *\n * @type {?}\n */\nNodeDef.prototype.childFlags;\n/**\n * aggregated NodeFlags for all direct children (does not include self) *\n * @type {?}\n */\nNodeDef.prototype.directChildFlags;\n/** @type {?} */\nNodeDef.prototype.bindingIndex;\n/** @type {?} */\nNodeDef.prototype.bindings;\n/** @type {?} */\nNodeDef.prototype.bindingFlags;\n/** @type {?} */\nNodeDef.prototype.outputIndex;\n/** @type {?} */\nNodeDef.prototype.outputs;\n/**\n * references that the user placed on the element\n * @type {?}\n */\nNodeDef.prototype.references;\n/**\n * ids and value types of all queries that are matched by this node.\n * @type {?}\n */\nNodeDef.prototype.matchedQueries;\n/**\n * Binary or of all matched query ids of this node.\n * @type {?}\n */\nNodeDef.prototype.matchedQueryIds;\n/**\n * Binary or of all query ids that are matched by one of the children.\n * This includes query ids from templates as well.\n * Used as a bloom filter.\n * @type {?}\n */\nNodeDef.prototype.childMatchedQueries;\n/** @type {?} */\nNodeDef.prototype.element;\n/** @type {?} */\nNodeDef.prototype.provider;\n/** @type {?} */\nNodeDef.prototype.text;\n/** @type {?} */\nNodeDef.prototype.query;\n/** @type {?} */\nNodeDef.prototype.ngContent;\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    TypeNgModule: 1073741824,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\nexport { NodeFlags };\n/**\n * @record\n */\nexport function BindingDef() { }\n/** @type {?} */\nBindingDef.prototype.flags;\n/** @type {?} */\nBindingDef.prototype.ns;\n/** @type {?} */\nBindingDef.prototype.name;\n/** @type {?} */\nBindingDef.prototype.nonMinifiedName;\n/** @type {?} */\nBindingDef.prototype.securityContext;\n/** @type {?} */\nBindingDef.prototype.suffix;\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\nexport { BindingFlags };\n/**\n * @record\n */\nexport function OutputDef() { }\n/** @type {?} */\nOutputDef.prototype.type;\n/** @type {?} */\nOutputDef.prototype.target;\n/** @type {?} */\nOutputDef.prototype.eventName;\n/** @type {?} */\nOutputDef.prototype.propName;\n/** @enum {number} */\nvar OutputType = {\n    ElementOutput: 0, DirectiveOutput: 1,\n};\nexport { OutputType };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\nexport { QueryValueType };\n/**\n * @record\n */\nexport function ElementDef() { }\n/** @type {?} */\nElementDef.prototype.name;\n/** @type {?} */\nElementDef.prototype.ns;\n/**\n * ns, name, value\n * @type {?}\n */\nElementDef.prototype.attrs;\n/** @type {?} */\nElementDef.prototype.template;\n/** @type {?} */\nElementDef.prototype.componentProvider;\n/** @type {?} */\nElementDef.prototype.componentRendererType;\n/** @type {?} */\nElementDef.prototype.componentView;\n/**\n * visible public providers for DI in the view,\n * as see from this element. This does not include private providers.\n * @type {?}\n */\nElementDef.prototype.publicProviders;\n/**\n * same as visiblePublicProviders, but also includes private providers\n * that are located on this element.\n * @type {?}\n */\nElementDef.prototype.allProviders;\n/** @type {?} */\nElementDef.prototype.handleEvent;\n/**\n * @record\n */\nexport function ElementHandleEventFn() { }\n/**\n * @record\n */\nexport function ProviderDef() { }\n/** @type {?} */\nProviderDef.prototype.token;\n/** @type {?} */\nProviderDef.prototype.value;\n/** @type {?} */\nProviderDef.prototype.deps;\n/**\n * @record\n */\nexport function NgModuleProviderDef() { }\n/** @type {?} */\nNgModuleProviderDef.prototype.flags;\n/** @type {?} */\nNgModuleProviderDef.prototype.index;\n/** @type {?} */\nNgModuleProviderDef.prototype.token;\n/** @type {?} */\nNgModuleProviderDef.prototype.value;\n/** @type {?} */\nNgModuleProviderDef.prototype.deps;\n/**\n * @record\n */\nexport function DepDef() { }\n/** @type {?} */\nDepDef.prototype.flags;\n/** @type {?} */\nDepDef.prototype.token;\n/** @type {?} */\nDepDef.prototype.tokenKey;\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Self: 4,\n    Value: 8,\n};\nexport { DepFlags };\n/**\n * @record\n */\nexport function TextDef() { }\n/** @type {?} */\nTextDef.prototype.prefix;\n/**\n * @record\n */\nexport function QueryDef() { }\n/** @type {?} */\nQueryDef.prototype.id;\n/** @type {?} */\nQueryDef.prototype.filterId;\n/** @type {?} */\nQueryDef.prototype.bindings;\n/**\n * @record\n */\nexport function QueryBindingDef() { }\n/** @type {?} */\nQueryBindingDef.prototype.propName;\n/** @type {?} */\nQueryBindingDef.prototype.bindingType;\n/** @enum {number} */\nvar QueryBindingType = {\n    First: 0, All: 1,\n};\nexport { QueryBindingType };\n/**\n * @record\n */\nexport function NgContentDef() { }\n/**\n * this index is checked against NodeDef.ngContentIndex to find the nodes\n * that are matched by this ng-content.\n * Note that a NodeDef with an ng-content can be reprojected, i.e.\n * have a ngContentIndex on its own.\n * @type {?}\n */\nNgContentDef.prototype.index;\n/**\n * @record\n */\nexport function NgModuleData() { }\n/** @type {?} */\nNgModuleData.prototype._def;\n/** @type {?} */\nNgModuleData.prototype._parent;\n/** @type {?} */\nNgModuleData.prototype._providers;\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function ViewData() { }\n/** @type {?} */\nViewData.prototype.def;\n/** @type {?} */\nViewData.prototype.root;\n/** @type {?} */\nViewData.prototype.renderer;\n/** @type {?} */\nViewData.prototype.parentNodeDef;\n/** @type {?} */\nViewData.prototype.parent;\n/** @type {?} */\nViewData.prototype.viewContainerParent;\n/** @type {?} */\nViewData.prototype.component;\n/** @type {?} */\nViewData.prototype.context;\n/** @type {?} */\nViewData.prototype.nodes;\n/** @type {?} */\nViewData.prototype.state;\n/** @type {?} */\nViewData.prototype.oldValues;\n/** @type {?} */\nViewData.prototype.disposables;\n/** @type {?} */\nViewData.prototype.initIndex;\n/** @enum {number} */\nvar ViewState = {\n    BeforeFirstCheck: 1,\n    FirstCheck: 2,\n    Attached: 4,\n    ChecksEnabled: 8,\n    IsProjectedView: 16,\n    CheckProjectedView: 32,\n    CheckProjectedViews: 64,\n    Destroyed: 128,\n    // InitState Uses 3 bits\n    InitState_Mask: 1792,\n    InitState_BeforeInit: 0,\n    InitState_CallingOnInit: 256,\n    InitState_CallingAfterContentInit: 512,\n    InitState_CallingAfterViewInit: 768,\n    InitState_AfterInit: 1024,\n    CatDetectChanges: 12,\n    CatInit: 13,\n};\nexport { ViewState };\n/**\n * @param {?} view\n * @param {?} priorInitState\n * @param {?} newInitState\n * @return {?}\n */\nexport function shiftInitState(view, priorInitState, newInitState) {\n    /** @type {?} */\n    var state = view.state;\n    /** @type {?} */\n    var initState = state & 1792 /* InitState_Mask */;\n    if (initState === priorInitState) {\n        view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n        view.initIndex = -1;\n        return true;\n    }\n    return initState === newInitState;\n}\n/**\n * @param {?} view\n * @param {?} initState\n * @param {?} index\n * @return {?}\n */\nexport function shouldCallLifecycleInitHook(view, initState, index) {\n    if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n        view.initIndex = index + 1;\n        return true;\n    }\n    return false;\n}\n/**\n * @record\n */\nexport function DisposableFn() { }\n/**\n * Node instance data.\n *\n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n *\n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nvar /**\n * Node instance data.\n *\n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n *\n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nNodeData = /** @class */ (function () {\n    function NodeData() {\n    }\n    return NodeData;\n}());\n/**\n * Node instance data.\n *\n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n *\n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nexport { NodeData };\nif (false) {\n    /** @type {?} */\n    NodeData.prototype.__brand;\n}\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function TextData() { }\n/** @type {?} */\nTextData.prototype.renderText;\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asTextData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function ElementData() { }\n/** @type {?} */\nElementData.prototype.renderElement;\n/** @type {?} */\nElementData.prototype.componentView;\n/** @type {?} */\nElementData.prototype.viewContainer;\n/** @type {?} */\nElementData.prototype.template;\n/**\n * @record\n */\nexport function ViewContainerData() { }\n/** @type {?} */\nViewContainerData.prototype._embeddedViews;\n/**\n * @record\n */\nexport function TemplateData() { }\n/** @type {?} */\nTemplateData.prototype._projectedViews;\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asElementData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function ProviderData() { }\n/** @type {?} */\nProviderData.prototype.instance;\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asProviderData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function PureExpressionData() { }\n/** @type {?} */\nPureExpressionData.prototype.value;\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asPureExpressionData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asQueryList(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * @record\n */\nexport function RootData() { }\n/** @type {?} */\nRootData.prototype.injector;\n/** @type {?} */\nRootData.prototype.ngModule;\n/** @type {?} */\nRootData.prototype.projectableNodes;\n/** @type {?} */\nRootData.prototype.selectorOrNode;\n/** @type {?} */\nRootData.prototype.renderer;\n/** @type {?} */\nRootData.prototype.rendererFactory;\n/** @type {?} */\nRootData.prototype.errorHandler;\n/** @type {?} */\nRootData.prototype.sanitizer;\n/**\n * @abstract\n */\nvar /**\n * @abstract\n */\nDebugContext = /** @class */ (function () {\n    function DebugContext() {\n    }\n    return DebugContext;\n}());\n/**\n * @abstract\n */\nexport { DebugContext };\nif (false) {\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.view = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.nodeIndex = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.injector = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.component = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.providerTokens = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.references = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.context = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.componentRenderElement = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.renderNode = function () { };\n    /**\n     * @abstract\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext.prototype.logError = function (console, values) { };\n}\n/** @enum {number} */\nvar CheckType = {\n    CheckAndUpdate: 0, CheckNoChanges: 1,\n};\nexport { CheckType };\n/**\n * @record\n */\nexport function ProviderOverride() { }\n/** @type {?} */\nProviderOverride.prototype.token;\n/** @type {?} */\nProviderOverride.prototype.flags;\n/** @type {?} */\nProviderOverride.prototype.value;\n/** @type {?} */\nProviderOverride.prototype.deps;\n/** @type {?} */\nProviderOverride.prototype.deprecatedBehavior;\n/** *\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n  @type {?} */\nexport var Services = {\n    setCurrentNode: /** @type {?} */ ((undefined)),\n    createRootView: /** @type {?} */ ((undefined)),\n    createEmbeddedView: /** @type {?} */ ((undefined)),\n    createComponentView: /** @type {?} */ ((undefined)),\n    createNgModuleRef: /** @type {?} */ ((undefined)),\n    overrideProvider: /** @type {?} */ ((undefined)),\n    overrideComponentView: /** @type {?} */ ((undefined)),\n    clearOverrides: /** @type {?} */ ((undefined)),\n    checkAndUpdateView: /** @type {?} */ ((undefined)),\n    checkNoChangesView: /** @type {?} */ ((undefined)),\n    destroyView: /** @type {?} */ ((undefined)),\n    resolveDep: /** @type {?} */ ((undefined)),\n    createDebugContext: /** @type {?} */ ((undefined)),\n    handleEvent: /** @type {?} */ ((undefined)),\n    updateDirectives: /** @type {?} */ ((undefined)),\n    updateRenderer: /** @type {?} */ ((undefined)),\n    dirtyParentQueries: /** @type {?} */ ((undefined)),\n};\n//# sourceMappingURL=types.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ERROR_DEBUG_CONTEXT, ERROR_LOGGER, getDebugContext } from '../errors';\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nexport function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    /** @type {?} */\n    var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nexport function viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nexport function viewDebugError(msg, context) {\n    /** @type {?} */\n    var err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    (/** @type {?} */ (err))[ERROR_DEBUG_CONTEXT] = context;\n    (/** @type {?} */ (err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nexport function isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nexport function viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n//# sourceMappingURL=errors.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { WrappedValue, devModeEqual } from '../change_detection/change_detection';\nimport { SOURCE } from '../di/injector';\nimport { ViewEncapsulation } from '../metadata/view';\nimport { looseIdentical, stringify } from '../util';\nimport { expressionChangedAfterItHasBeenCheckedError } from './errors';\nimport { Services, asElementData, asTextData } from './types';\n/** @type {?} */\nexport var NOOP = function () { };\n/** @type {?} */\nvar _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nexport function tokenKey(token) {\n    /** @type {?} */\n    var key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (WrappedValue.isWrapped(value)) {\n        value = WrappedValue.unwrap(value);\n        /** @type {?} */\n        var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        /** @type {?} */\n        var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\n/** @type {?} */\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n/** @type {?} */\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nexport function createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\n/** @type {?} */\nvar _renderCompCount = 0;\n/**\n * @param {?=} type\n * @return {?}\n */\nexport function resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        /** @type {?} */\n        var isFilled = ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkBinding(view, def, bindingIdx, value) {\n    /** @type {?} */\n    var oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkBindingNoChanges(view, def, bindingIdx, value) {\n    /** @type {?} */\n    var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        /** @type {?} */\n        var bindingName = def.bindings[bindingIdx].name;\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function markParentViewsForCheck(view) {\n    /** @type {?} */\n    var currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nexport function markParentViewsForCheckProjectedViews(view, endView) {\n    /** @type {?} */\n    var currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nexport function dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        /** @type {?} */\n        var nodeDef = view.def.nodes[nodeIndex];\n        /** @type {?} */\n        var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function declaredViewContainer(view) {\n    if (view.parent) {\n        /** @type {?} */\n        var parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nexport function viewParentEl(view) {\n    /** @type {?} */\n    var parentView = view.parent;\n    if (parentView) {\n        return /** @type {?} */ ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nexport function elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function isComponentView(view) {\n    return !!view.parent && !!(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function isEmbeddedView(view) {\n    return !!view.parent && !(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nexport function filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nexport function splitMatchedQueriesDsl(matchedQueriesDsl) {\n    /** @type {?} */\n    var matchedQueries = {};\n    /** @type {?} */\n    var matchedQueryIds = 0;\n    /** @type {?} */\n    var references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var queryId = _a[0], valueType = _a[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\n/**\n * @param {?} deps\n * @param {?=} sourceName\n * @return {?}\n */\nexport function splitDepsDsl(deps, sourceName) {\n    return deps.map(function (value) {\n        /** @type {?} */\n        var token;\n        /** @type {?} */\n        var flags;\n        if (Array.isArray(value)) {\n            flags = value[0], token = value[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n            Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function getParentRenderElement(view, renderHost, def) {\n    /** @type {?} */\n    var renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (/** @type {?} */ ((renderParent.element)).componentRendererType && /** @type {?} */ ((/** @type {?} */ ((renderParent.element)).componentRendererType)).encapsulation === ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\n/** @type {?} */\nvar DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nexport function resolveDefinition(factory) {\n    /** @type {?} */\n    var value = /** @type {?} */ (((DEFINITION_CACHE.get(factory))));\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function rootRenderNodes(view) {\n    /** @type {?} */\n    var renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/** @enum {number} */\nvar RenderNodeAction = {\n    Collect: 0, AppendChild: 1, InsertBefore: 2, RemoveChild: 3,\n};\nexport { RenderNodeAction };\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nexport function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nexport function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        /** @type {?} */\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nexport function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    /** @type {?} */\n    var compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    /** @type {?} */\n    var hostView = /** @type {?} */ ((compView)).parent;\n    /** @type {?} */\n    var hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    /** @type {?} */\n    var startIndex = /** @type {?} */ ((hostElDef)).nodeIndex + 1;\n    /** @type {?} */\n    var endIndex = /** @type {?} */ ((hostElDef)).nodeIndex + /** @type {?} */ ((hostElDef)).childCount;\n    for (var i = startIndex; i <= endIndex; i++) {\n        /** @type {?} */\n        var nodeDef = /** @type {?} */ ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!/** @type {?} */ ((hostView)).parent) {\n        /** @type {?} */\n        var projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        /** @type {?} */\n        var rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                /** @type {?} */\n                var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            /** @type {?} */\n            var embeddedViews = /** @type {?} */ ((asElementData(view, nodeDef.nodeIndex).viewContainer))._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !/** @type {?} */ ((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    /** @type {?} */\n    var renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            /** @type {?} */ ((target)).push(renderNode);\n            break;\n    }\n}\n/** @type {?} */\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nexport function splitNamespace(name) {\n    if (name[0] === ':') {\n        /** @type {?} */\n        var match = /** @type {?} */ ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nexport function calcBindingFlags(bindings) {\n    /** @type {?} */\n    var flags = 0;\n    for (var i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nexport function interpolate(valueCount, constAndInterp) {\n    /** @type {?} */\n    var result = '';\n    for (var i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nexport function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\n/** @type {?} */\nexport var EMPTY_ARRAY = [];\n/** @type {?} */\nexport var EMPTY_MAP = {};\n//# sourceMappingURL=util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ViewEncapsulation } from '../metadata/view';\nimport { SecurityContext } from '../sanitization/security';\nimport { asElementData } from './types';\nimport { NOOP, calcBindingFlags, checkAndUpdateBinding, dispatchEvent, elementEventFullName, getParentRenderElement, resolveDefinition, resolveRendererType2, splitMatchedQueriesDsl, splitNamespace } from './util';\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nexport function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    /** @type {?} */\n    var template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nexport function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    var _a;\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n    /** @type {?} */\n    var ns = /** @type {?} */ ((null));\n    /** @type {?} */\n    var name = /** @type {?} */ ((null));\n    if (namespaceAndName) {\n        _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n    }\n    bindings = bindings || [];\n    /** @type {?} */\n    var bindingDefs = new Array(bindings.length);\n    for (var i = 0; i < bindings.length; i++) {\n        var _c = bindings[i], bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = splitNamespace(namespaceAndName_1), ns_1 = _d[0], name_1 = _d[1];\n        /** @type {?} */\n        var securityContext = /** @type {?} */ ((undefined));\n        /** @type {?} */\n        var suffix = /** @type {?} */ ((undefined));\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    /** @type {?} */\n    var outputDefs = new Array(outputs.length);\n    for (var i = 0; i < outputs.length; i++) {\n        var _e = outputs[i], target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: /** @type {?} */ (target), eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    /** @type {?} */\n    var attrs = /** @type {?} */ (fixedAttrs.map(function (_a) {\n        var namespaceAndName = _a[0], value = _a[1];\n        var _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n        return [ns, name, value];\n    }));\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function createElement(view, renderHost, def) {\n    /** @type {?} */\n    var elDef = /** @type {?} */ ((def.element));\n    /** @type {?} */\n    var rootSelectorOrNode = view.root.selectorOrNode;\n    /** @type {?} */\n    var renderer = view.renderer;\n    /** @type {?} */\n    var el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        /** @type {?} */\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        /** @type {?} */\n        var preserveContent = (!!elDef.componentRendererType &&\n            elDef.componentRendererType.encapsulation === ViewEncapsulation.ShadowDom);\n        el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n    }\n    if (elDef.attrs) {\n        for (var i = 0; i < elDef.attrs.length; i++) {\n            var _a = elDef.attrs[i], ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nexport function listenToElementOutputs(view, compView, def, el) {\n    for (var i = 0; i < def.outputs.length; i++) {\n        /** @type {?} */\n        var output = def.outputs[i];\n        /** @type {?} */\n        var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        /** @type {?} */\n        var listenTarget = output.target;\n        /** @type {?} */\n        var listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        /** @type {?} */\n        var disposable = /** @type {?} */ (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    var bindLen = def.bindings.length;\n    /** @type {?} */\n    var changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateElementDynamic(view, def, values) {\n    /** @type {?} */\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    /** @type {?} */\n    var binding = def.bindings[bindingIdx];\n    /** @type {?} */\n    var elData = asElementData(view, def.nodeIndex);\n    /** @type {?} */\n    var renderNode = elData.renderElement;\n    /** @type {?} */\n    var name = /** @type {?} */ ((binding.name));\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            /** @type {?} */\n            var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode, ns, name, value) {\n    /** @type {?} */\n    var securityContext = binding.securityContext;\n    /** @type {?} */\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    /** @type {?} */\n    var renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode, name, value) {\n    /** @type {?} */\n    var renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode, name);\n    }\n    else {\n        renderer.removeClass(renderNode, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode, name, value) {\n    /** @type {?} */\n    var renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, /** @type {?} */ (value));\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        /** @type {?} */\n        var unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    /** @type {?} */\n    var renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode, name, value) {\n    /** @type {?} */\n    var securityContext = binding.securityContext;\n    /** @type {?} */\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode, name, renderValue);\n}\n//# sourceMappingURL=element.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { getInjectableDef } from '../di/defs';\nimport { resolveForwardRef } from '../di/forward_ref';\nimport { INJECTOR, Injector } from '../di/injector';\nimport { setCurrentInjector } from '../di/injector_compatibility';\nimport { APP_ROOT } from '../di/scope';\nimport { NgModuleRef } from '../linker/ng_module_factory';\nimport { stringify } from '../util';\nimport { splitDepsDsl, tokenKey } from './util';\n/** @type {?} */\nvar UNDEFINED_VALUE = new Object();\n/** @type {?} */\nvar InjectorRefTokenKey = tokenKey(Injector);\n/** @type {?} */\nvar INJECTORRefTokenKey = tokenKey(INJECTOR);\n/** @type {?} */\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} flags\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nexport function moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    /** @type {?} */\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nexport function moduleDef(providers) {\n    /** @type {?} */\n    var providersByKey = {};\n    /** @type {?} */\n    var modules = [];\n    /** @type {?} */\n    var isRoot = false;\n    for (var i = 0; i < providers.length; i++) {\n        /** @type {?} */\n        var provider = providers[i];\n        if (provider.token === APP_ROOT && provider.value === true) {\n            isRoot = true;\n        }\n        if (provider.flags & 1073741824 /* TypeNgModule */) {\n            modules.push(provider.token);\n        }\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers,\n        modules: modules,\n        isRoot: isRoot,\n    };\n}\n/**\n * @param {?} data\n * @return {?}\n */\nexport function initNgModule(data) {\n    /** @type {?} */\n    var def = data._def;\n    /** @type {?} */\n    var providers = data._providers = new Array(def.providers.length);\n    for (var i = 0; i < def.providers.length; i++) {\n        /** @type {?} */\n        var provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            // Make sure the provider has not been already initialized outside this loop.\n            if (providers[i] === undefined) {\n                providers[i] = _createProviderInstance(data, provDef);\n            }\n        }\n    }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nexport function resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    /** @type {?} */\n    var former = setCurrentInjector(data);\n    try {\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        if (depDef.flags & 1 /* SkipSelf */) {\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        /** @type {?} */\n        var tokenKey_1 = depDef.tokenKey;\n        switch (tokenKey_1) {\n            case InjectorRefTokenKey:\n            case INJECTORRefTokenKey:\n            case NgModuleRefTokenKey:\n                return data;\n        }\n        /** @type {?} */\n        var providerDef = data._def.providersByKey[tokenKey_1];\n        /** @type {?} */\n        var injectableDef = void 0;\n        if (providerDef) {\n            /** @type {?} */\n            var providerInstance = data._providers[providerDef.index];\n            if (providerInstance === undefined) {\n                providerInstance = data._providers[providerDef.index] =\n                    _createProviderInstance(data, providerDef);\n            }\n            return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n        }\n        else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n            /** @type {?} */\n            var index = data._providers.length;\n            data._def.providersByKey[depDef.tokenKey] = {\n                flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                value: injectableDef.factory,\n                deps: [], index: index,\n                token: depDef.token,\n            };\n            data._providers[index] = UNDEFINED_VALUE;\n            return (data._providers[index] =\n                _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n        }\n        else if (depDef.flags & 4 /* Self */) {\n            return notFoundValue;\n        }\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    finally {\n        setCurrentInjector(former);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} scope\n * @return {?}\n */\nfunction moduleTransitivelyPresent(ngModule, scope) {\n    return ngModule._def.modules.indexOf(scope) > -1;\n}\n/**\n * @param {?} ngModule\n * @param {?} def\n * @return {?}\n */\nfunction targetsModule(ngModule, def) {\n    return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n        def.providedIn === 'root' && ngModule._def.isRoot);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance(ngModule, providerDef) {\n    /** @type {?} */\n    var injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n    // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n    // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n    // set (ngOnDestroy was detected statically).\n    if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n        !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n        providerDef.flags |= 131072 /* OnDestroy */;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n    /** @type {?} */\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            /** @type {?} */\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n    /** @type {?} */\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            /** @type {?} */\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nexport function callNgModuleLifecycle(ngModule, lifecycles) {\n    /** @type {?} */\n    var def = ngModule._def;\n    /** @type {?} */\n    var destroyed = new Set();\n    for (var i = 0; i < def.providers.length; i++) {\n        /** @type {?} */\n        var provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            /** @type {?} */\n            var instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                /** @type {?} */\n                var onDestroy = instance.ngOnDestroy;\n                if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                    onDestroy.apply(instance);\n                    destroyed.add(instance);\n                }\n            }\n        }\n    }\n}\n//# sourceMappingURL=ng_module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Services } from './types';\nimport { declaredViewContainer, renderNode, visitRootRenderNodes } from './util';\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nexport function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    /** @type {?} */\n    var embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    /** @type {?} */\n    var prevView = /** @type {?} */ ((viewIndex)) > 0 ? embeddedViews[/** @type {?} */ ((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n    /** @type {?} */\n    var dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even across component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    /** @type {?} */\n    var projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(/** @type {?} */ ((view.parent)).def, /** @type {?} */ ((view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    /** @type {?} */\n    var parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nexport function detachEmbeddedView(elementData, viewIndex) {\n    /** @type {?} */\n    var embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    /** @type {?} */\n    var view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    /** @type {?} */\n    var dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        /** @type {?} */\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nexport function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    /** @type {?} */\n    var embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    /** @type {?} */\n    var view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    /** @type {?} */\n    var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    /** @type {?} */\n    var prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    /** @type {?} */\n    var parentNode = view.renderer.parentNode(prevRenderNode);\n    /** @type {?} */\n    var nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n//# sourceMappingURL=view_attach.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Injector } from '../di/injector';\nimport { InjectFlags } from '../di/injector_compatibility';\nimport { ComponentFactory, ComponentRef } from '../linker/component_factory';\nimport { ComponentFactoryBoundToModule, ComponentFactoryResolver } from '../linker/component_factory_resolver';\nimport { ElementRef } from '../linker/element_ref';\nimport { NgModuleRef } from '../linker/ng_module_factory';\nimport { TemplateRef } from '../linker/template_ref';\nimport { stringify } from '../util';\nimport { VERSION } from '../version';\nimport { callNgModuleLifecycle, initNgModule, resolveNgModuleDep } from './ng_module';\nimport { Services, asElementData, asProviderData, asTextData } from './types';\nimport { markParentViewsForCheck, resolveDefinition, rootRenderNodes, splitNamespace, tokenKey, viewParentEl } from './util';\nimport { attachEmbeddedView, detachEmbeddedView, moveEmbeddedView, renderDetachView } from './view_attach';\n/** @type {?} */\nvar EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nexport function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nexport function getComponentViewDefinitionFactory(componentFactory) {\n    return (/** @type {?} */ (componentFactory)).viewDefFactory;\n}\nvar ComponentFactory_ = /** @class */ (function (_super) {\n    tslib_1.__extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var inputsArr = [];\n            /** @type {?} */\n            var inputs = /** @type {?} */ ((this._inputs));\n            for (var propName in inputs) {\n                /** @type {?} */\n                var templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var outputsArr = [];\n            for (var propName in this._outputs) {\n                /** @type {?} */\n                var templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory_.prototype.create = /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        /** @type {?} */\n        var viewDef = resolveDefinition(this.viewDefFactory);\n        /** @type {?} */\n        var componentNodeIndex = /** @type {?} */ ((/** @type {?} */ ((viewDef.nodes[0].element)).componentProvider)).nodeIndex;\n        /** @type {?} */\n        var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        /** @type {?} */\n        var component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ComponentFactory_.prototype.viewDefFactory;\n    /** @type {?} */\n    ComponentFactory_.prototype.selector;\n    /** @type {?} */\n    ComponentFactory_.prototype.componentType;\n    /** @type {?} */\n    ComponentFactory_.prototype._inputs;\n    /** @type {?} */\n    ComponentFactory_.prototype._outputs;\n    /** @type {?} */\n    ComponentFactory_.prototype.ngContentSelectors;\n}\nvar ComponentRef_ = /** @class */ (function (_super) {\n    tslib_1.__extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (this._component.constructor); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ComponentRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this._viewRef.destroy(); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\nif (false) {\n    /** @type {?} */\n    ComponentRef_.prototype.hostView;\n    /** @type {?} */\n    ComponentRef_.prototype.instance;\n    /** @type {?} */\n    ComponentRef_.prototype.changeDetectorRef;\n    /** @type {?} */\n    ComponentRef_.prototype._elDef;\n    /** @type {?} */\n    ComponentRef_.prototype._view;\n    /** @type {?} */\n    ComponentRef_.prototype._viewRef;\n    /** @type {?} */\n    ComponentRef_.prototype._component;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nexport function createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = /** @class */ (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        /** @deprecated No replacement */\n        get: /**\n         * @deprecated No replacement\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var view = this._view;\n            /** @type {?} */\n            var elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = /** @type {?} */ ((view.parent));\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.clear = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var len = this._embeddedViews.length;\n        for (var i = len - 1; i >= 0; i--) {\n            /** @type {?} */\n            var view = /** @type {?} */ ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.get = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        /** @type {?} */\n        var view = this._embeddedViews[index];\n        if (view) {\n            /** @type {?} */\n            var ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createEmbeddedView = /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    function (templateRef, context, index) {\n        /** @type {?} */\n        var viewRef = templateRef.createEmbeddedView(context || /** @type {?} */ ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createComponent = /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        /** @type {?} */\n        var contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        /** @type {?} */\n        var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.insert = /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        /** @type {?} */\n        var viewRef_ = /** @type {?} */ (viewRef);\n        /** @type {?} */\n        var viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.move = /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        /** @type {?} */\n        var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.indexOf = /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        return this._embeddedViews.indexOf((/** @type {?} */ (viewRef))._view);\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.remove = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        /** @type {?} */\n        var viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.detach = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        /** @type {?} */\n        var view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ViewContainerRef_.prototype._embeddedViews;\n    /** @type {?} */\n    ViewContainerRef_.prototype._view;\n    /** @type {?} */\n    ViewContainerRef_.prototype._elDef;\n    /** @type {?} */\n    ViewContainerRef_.prototype._data;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = /** @class */ (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.markForCheck = /**\n     * @return {?}\n     */\n    function () { markParentViewsForCheck(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detach = /**\n     * @return {?}\n     */\n    function () { this._view.state &= ~4 /* Attached */; };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        try {\n            Services.checkAndUpdateView(this._view);\n        }\n        finally {\n            if (fs.end) {\n                fs.end();\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.checkNoChanges = /**\n     * @return {?}\n     */\n    function () { Services.checkNoChangesView(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.reattach = /**\n     * @return {?}\n     */\n    function () { this._view.state |= 4 /* Attached */; };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detachFromAppRef = /**\n     * @return {?}\n     */\n    function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToAppRef = /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToViewContainerRef = /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\nexport { ViewRef_ };\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ViewRef_.prototype._view;\n    /** @type {?} */\n    ViewRef_.prototype._viewContainerRef;\n    /** @type {?} */\n    ViewRef_.prototype._appRef;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = /** @class */ (function (_super) {\n    tslib_1.__extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef_.prototype.createEmbeddedView = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */ ((/** @type {?} */ ((this._def.element)).template)), context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    TemplateRef_.prototype._projectedViews;\n    /** @type {?} */\n    TemplateRef_.prototype._parentView;\n    /** @type {?} */\n    TemplateRef_.prototype._def;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nexport function createInjector(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = /** @class */ (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        /** @type {?} */\n        var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\nif (false) {\n    /** @type {?} */\n    Injector_.prototype.view;\n    /** @type {?} */\n    Injector_.prototype.elDef;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function nodeValue(view, index) {\n    /** @type {?} */\n    var def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        /** @type {?} */\n        var elData = asElementData(view, def.nodeIndex);\n        return /** @type {?} */ ((def.element)).template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = /** @class */ (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    RendererAdapter.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    RendererAdapter.prototype.createElement = /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    function (parent, namespaceAndName) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        /** @type {?} */\n        var el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createViewRoot = /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (hostElement) { return hostElement; };\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createTemplateAnchor = /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (parentElement) {\n        /** @type {?} */\n        var comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    RendererAdapter.prototype.createText = /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    function (parentElement, value) {\n        /** @type {?} */\n        var node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.projectNodes = /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (parentElement, nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.attachViewAfter = /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (node, viewRootNodes) {\n        /** @type {?} */\n        var parentElement = this.delegate.parentNode(node);\n        /** @type {?} */\n        var nextSibling = this.delegate.nextSibling(node);\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.detachView = /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (viewRootNodes) {\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            /** @type {?} */\n            var node = viewRootNodes[i];\n            /** @type {?} */\n            var parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.destroyView = /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    function (hostElement, viewAllNodes) {\n        for (var i = 0; i < viewAllNodes.length; i++) {\n            /** @type {?} */ ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listen = /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listenGlobal = /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementProperty = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?=} attributeValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementAttribute = /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?=} attributeValue\n     * @return {?}\n     */\n    function (renderElement, namespaceAndName, attributeValue) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setBindingDebugInfo = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementClass = /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?=} styleValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementStyle = /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?=} styleValue\n     * @return {?}\n     */\n    function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    RendererAdapter.prototype.invokeElementMethod = /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    function (renderElement, methodName, args) {\n        (/** @type {?} */ (renderElement))[methodName].apply(renderElement, args);\n    };\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    RendererAdapter.prototype.setText = /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n    /**\n     * @return {?}\n     */\n    RendererAdapter.prototype.animate = /**\n     * @return {?}\n     */\n    function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\nif (false) {\n    /** @type {?} */\n    RendererAdapter.prototype.delegate;\n}\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nexport function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = /** @class */ (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        this.injector = this;\n        initNgModule(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} injectFlags\n     * @return {?}\n     */\n    NgModuleRef_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} injectFlags\n     * @return {?}\n     */\n    function (token, notFoundValue, injectFlags) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (injectFlags === void 0) { injectFlags = InjectFlags.Default; }\n        /** @type {?} */\n        var flags = 0 /* None */;\n        if (injectFlags & InjectFlags.SkipSelf) {\n            flags |= 1 /* SkipSelf */;\n        }\n        else if (injectFlags & InjectFlags.Self) {\n            flags |= 4 /* Self */;\n        }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgModuleRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\nif (false) {\n    /** @type {?} */\n    NgModuleRef_.prototype._destroyListeners;\n    /** @type {?} */\n    NgModuleRef_.prototype._destroyed;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    NgModuleRef_.prototype._providers;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    NgModuleRef_.prototype._modules;\n    /** @type {?} */\n    NgModuleRef_.prototype.injector;\n    /** @type {?} */\n    NgModuleRef_.prototype._moduleType;\n    /** @type {?} */\n    NgModuleRef_.prototype._parent;\n    /** @type {?} */\n    NgModuleRef_.prototype._bootstrapComponents;\n    /** @type {?} */\n    NgModuleRef_.prototype._def;\n}\n//# sourceMappingURL=refs.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectorRef, SimpleChange, WrappedValue } from '../change_detection/change_detection';\nimport { INJECTOR, Injector, resolveForwardRef } from '../di';\nimport { ElementRef } from '../linker/element_ref';\nimport { TemplateRef } from '../linker/template_ref';\nimport { ViewContainerRef } from '../linker/view_container_ref';\nimport { Renderer as RendererV1, Renderer2 } from '../render/api';\nimport { stringify } from '../util';\nimport { isObservable } from '../util/lang';\nimport { createChangeDetectorRef, createInjector, createRendererV1 } from './refs';\nimport { Services, asElementData, asProviderData, shouldCallLifecycleInitHook } from './types';\nimport { calcBindingFlags, checkBinding, dispatchEvent, isComponentView, splitDepsDsl, splitMatchedQueriesDsl, tokenKey, viewParentEl } from './util';\n/** @type {?} */\nvar RendererV1TokenKey = tokenKey(RendererV1);\n/** @type {?} */\nvar Renderer2TokenKey = tokenKey(Renderer2);\n/** @type {?} */\nvar ElementRefTokenKey = tokenKey(ElementRef);\n/** @type {?} */\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n/** @type {?} */\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\n/** @type {?} */\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n/** @type {?} */\nvar InjectorRefTokenKey = tokenKey(Injector);\n/** @type {?} */\nvar INJECTORRefTokenKey = tokenKey(INJECTOR);\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nexport function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    /** @type {?} */\n    var bindings = [];\n    if (props) {\n        for (var prop in props) {\n            var _a = props[prop], bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    /** @type {?} */\n    var outputDefs = [];\n    if (outputs) {\n        for (var propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nexport function pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nexport function providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nexport function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    /** @type {?} */\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createPipeInstance(view, def) {\n    /** @type {?} */\n    var compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    /** @type {?} */\n    var allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createDirectiveInstance(view, def) {\n    /** @type {?} */\n    var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    /** @type {?} */\n    var instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            /** @type {?} */\n            var output = def.outputs[i];\n            /** @type {?} */\n            var outputObservable = instance[/** @type {?} */ ((output.propName))];\n            if (isObservable(outputObservable)) {\n                /** @type {?} */\n                var subscription = outputObservable.subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).nodeIndex, output.eventName)); /** @type {?} */\n                ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n            }\n            else {\n                throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n            }\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    var providerData = asProviderData(view, def.nodeIndex);\n    /** @type {?} */\n    var directive = providerData.instance;\n    /** @type {?} */\n    var changed = false;\n    /** @type {?} */\n    var changes = /** @type {?} */ ((undefined));\n    /** @type {?} */\n    var bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateDirectiveDynamic(view, def, values) {\n    /** @type {?} */\n    var providerData = asProviderData(view, def.nodeIndex);\n    /** @type {?} */\n    var directive = providerData.instance;\n    /** @type {?} */\n    var changed = false;\n    /** @type {?} */\n    var changes = /** @type {?} */ ((undefined));\n    for (var i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view, def) {\n    /** @type {?} */\n    var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    /** @type {?} */\n    var providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n        case 256 /* TypeValueProvider */:\n            return /** @type {?} */ ((providerDef)).value;\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    /** @type {?} */\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            /** @type {?} */\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    /** @type {?} */\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            /** @type {?} */\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n/** @type {?} */\nexport var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nexport function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    /** @type {?} */\n    var startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    /** @type {?} */\n    var tokenKey = depDef.tokenKey;\n    if (tokenKey === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && /** @type {?} */ ((elDef.element)).componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = /** @type {?} */ ((elDef.parent));\n    }\n    /** @type {?} */\n    var searchView = view;\n    while (searchView) {\n        if (elDef) {\n            switch (tokenKey) {\n                case RendererV1TokenKey: {\n                    /** @type {?} */\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    /** @type {?} */\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (/** @type {?} */ ((elDef.element)).template) {\n                        return asElementData(searchView, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    /** @type {?} */\n                    var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                    return createInjector(searchView, elDef);\n                default:\n                    /** @type {?} */\n                    var providerDef_1 = /** @type {?} */ (((allowPrivateServices ? /** @type {?} */ ((elDef.element)).allProviders : /** @type {?} */ ((elDef.element)).publicProviders)))[tokenKey];\n                    if (providerDef_1) {\n                        /** @type {?} */\n                        var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(searchView, providerDef_1) };\n                            searchView.nodes[providerDef_1.nodeIndex] = /** @type {?} */ (providerData);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(searchView);\n        elDef = /** @type {?} */ ((viewParentEl(searchView)));\n        searchView = /** @type {?} */ ((searchView.parent));\n        if (depDef.flags & 4 /* Self */) {\n            searchView = null;\n        }\n    }\n    /** @type {?} */\n    var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    /** @type {?} */\n    var compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        /** @type {?} */\n        var compView = asElementData(view, /** @type {?} */ ((def.parent)).nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    /** @type {?} */\n    var binding = def.bindings[bindingIdx];\n    /** @type {?} */\n    var propName = /** @type {?} */ ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        /** @type {?} */\n        var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n        /** @type {?} */\n        var binding_1 = def.bindings[bindingIdx];\n        changes[/** @type {?} */ ((binding_1.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nexport function callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    /** @type {?} */\n    var nodes = view.def.nodes;\n    /** @type {?} */\n    var initIndex = 0;\n    for (var i = 0; i < nodes.length; i++) {\n        /** @type {?} */\n        var nodeDef = nodes[i];\n        /** @type {?} */\n        var parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @param {?} initIndex\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n    for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        /** @type {?} */\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n    return initIndex;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @param {?} initIndex\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles, initIndex) {\n    /** @type {?} */\n    var providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    /** @type {?} */\n    var provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */ &&\n        shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */ &&\n        shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n//# sourceMappingURL=provider.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef } from '../linker/element_ref';\nimport { QueryList } from '../linker/query_list';\nimport { asElementData, asProviderData, asQueryList } from './types';\nimport { declaredViewContainer, filterQueryId, isEmbeddedView } from './util';\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nexport function queryDef(flags, id, bindings) {\n    /** @type {?} */\n    var bindingDefs = [];\n    for (var propName in bindings) {\n        /** @type {?} */\n        var bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\n/**\n * @return {?}\n */\nexport function createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function dirtyParentQueries(view) {\n    /** @type {?} */\n    var queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        /** @type {?} */\n        var tplDef = /** @type {?} */ ((view.parentNodeDef));\n        view = view.parent;\n        /** @type {?} */\n        var end = tplDef.nodeIndex + tplDef.childCount;\n        for (var i = 0; i <= end; i++) {\n            /** @type {?} */\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (/** @type {?} */ ((nodeDef.query)).filterId & queryIds) === /** @type {?} */ ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var i = 0; i < view.def.nodes.length; i++) {\n            /** @type {?} */\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nexport function checkAndUpdateQuery(view, nodeDef) {\n    /** @type {?} */\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    /** @type {?} */\n    var directiveInstance;\n    /** @type {?} */\n    var newValues = /** @type {?} */ ((undefined));\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        /** @type {?} */\n        var elementDef = /** @type {?} */ ((/** @type {?} */ ((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    /** @type {?} */\n    var bindings = /** @type {?} */ ((nodeDef.query)).bindings;\n    /** @type {?} */\n    var notify = false;\n    for (var i = 0; i < bindings.length; i++) {\n        /** @type {?} */\n        var binding = bindings[i];\n        /** @type {?} */\n        var boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        /** @type {?} */\n        var nodeDef = view.def.nodes[i];\n        /** @type {?} */\n        var valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && /** @type {?} */ ((nodeDef.element)).template &&\n            (/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            /** @type {?} */\n            var elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                /** @type {?} */\n                var embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    /** @type {?} */\n                    var embeddedView = embeddedViews[k];\n                    /** @type {?} */\n                    var dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            /** @type {?} */\n            var projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var k = 0; k < projectedViews.length; k++) {\n                    /** @type {?} */\n                    var projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nexport function getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n//# sourceMappingURL=query.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { getParentRenderElement, visitProjectedRenderNodes } from './util';\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nexport function ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function appendNgContent(view, renderHost, def) {\n    /** @type {?} */\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    /** @type {?} */\n    var ngContentIndex = /** @type {?} */ ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n//# sourceMappingURL=ng_content.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { asPureExpressionData } from './types';\nimport { calcBindingFlags, checkAndUpdateBinding } from './util';\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nexport function purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nexport function pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\n/**\n * @param {?} checkIndex\n * @param {?} propToIndex\n * @return {?}\n */\nexport function pureObjectDef(checkIndex, propToIndex) {\n    /** @type {?} */\n    var keys = Object.keys(propToIndex);\n    /** @type {?} */\n    var nbKeys = keys.length;\n    /** @type {?} */\n    var propertyNames = new Array(nbKeys);\n    for (var i = 0; i < nbKeys; i++) {\n        /** @type {?} */\n        var key = keys[i];\n        /** @type {?} */\n        var index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} checkIndex\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    /** @type {?} */\n    var bindings = new Array(propertyNames.length);\n    for (var i = 0; i < propertyNames.length; i++) {\n        /** @type {?} */\n        var prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    var bindings = def.bindings;\n    /** @type {?} */\n    var changed = false;\n    /** @type {?} */\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        /** @type {?} */\n        var data = asPureExpressionData(view, def.nodeIndex);\n        /** @type {?} */\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[/** @type {?} */ ((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[/** @type {?} */ ((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[/** @type {?} */ ((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[/** @type {?} */ ((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[/** @type {?} */ ((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[/** @type {?} */ ((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[/** @type {?} */ ((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[/** @type {?} */ ((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[/** @type {?} */ ((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[/** @type {?} */ ((bindings[9].name))] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                /** @type {?} */\n                var pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdatePureExpressionDynamic(view, def, values) {\n    /** @type {?} */\n    var bindings = def.bindings;\n    /** @type {?} */\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        /** @type {?} */\n        var data = asPureExpressionData(view, def.nodeIndex);\n        /** @type {?} */\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var i = 0; i < values.length; i++) {\n                    value[/** @type {?} */ ((bindings[i].name))] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                /** @type {?} */\n                var pipe = values[0];\n                /** @type {?} */\n                var params = values.slice(1);\n                value = pipe.transform.apply(pipe, params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n//# sourceMappingURL=pure_expression.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { asTextData } from './types';\nimport { checkAndUpdateBinding, getParentRenderElement } from './util';\n/**\n * @param {?} checkIndex\n * @param {?} ngContentIndex\n * @param {?} staticText\n * @return {?}\n */\nexport function textDef(checkIndex, ngContentIndex, staticText) {\n    /** @type {?} */\n    var bindings = new Array(staticText.length - 1);\n    for (var i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function createText(view, renderHost, def) {\n    /** @type {?} */\n    var renderNode;\n    /** @type {?} */\n    var renderer = view.renderer;\n    renderNode = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    /** @type {?} */\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode);\n    }\n    return { renderText: renderNode };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    var changed = false;\n    /** @type {?} */\n    var bindings = def.bindings;\n    /** @type {?} */\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        /** @type {?} */\n        var value = /** @type {?} */ ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        /** @type {?} */\n        var renderNode = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateTextDynamic(view, def, values) {\n    /** @type {?} */\n    var bindings = def.bindings;\n    /** @type {?} */\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        /** @type {?} */\n        var value = '';\n        for (var i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = /** @type {?} */ ((def.text)).prefix + value;\n        /** @type {?} */\n        var renderNode = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    /** @type {?} */\n    var valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n//# sourceMappingURL=text.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { checkAndUpdateElementDynamic, checkAndUpdateElementInline, createElement, listenToElementOutputs } from './element';\nimport { expressionChangedAfterItHasBeenCheckedError } from './errors';\nimport { appendNgContent } from './ng_content';\nimport { callLifecycleHooksChildrenFirst, checkAndUpdateDirectiveDynamic, checkAndUpdateDirectiveInline, createDirectiveInstance, createPipeInstance, createProviderInstance } from './provider';\nimport { checkAndUpdatePureExpressionDynamic, checkAndUpdatePureExpressionInline, createPureExpression } from './pure_expression';\nimport { checkAndUpdateQuery, createQuery } from './query';\nimport { createTemplateData, createViewContainerData } from './refs';\nimport { checkAndUpdateTextDynamic, checkAndUpdateTextInline, createText } from './text';\nimport { Services, asElementData, asQueryList, asTextData, shiftInitState } from './types';\nimport { NOOP, checkBindingNoChanges, isComponentView, markParentViewsForCheckProjectedViews, resolveDefinition, tokenKey } from './util';\nimport { detachProjectedView } from './view_attach';\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nexport function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    /** @type {?} */\n    var viewBindingCount = 0;\n    /** @type {?} */\n    var viewDisposableCount = 0;\n    /** @type {?} */\n    var viewNodeFlags = 0;\n    /** @type {?} */\n    var viewRootNodeFlags = 0;\n    /** @type {?} */\n    var viewMatchedQueries = 0;\n    /** @type {?} */\n    var currentParent = null;\n    /** @type {?} */\n    var currentRenderParent = null;\n    /** @type {?} */\n    var currentElementHasPublicProviders = false;\n    /** @type {?} */\n    var currentElementHasPrivateProviders = false;\n    /** @type {?} */\n    var lastRenderRootNode = null;\n    for (var i = 0; i < nodes.length; i++) {\n        /** @type {?} */\n        var node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            /** @type {?} */\n            var elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? /** @type {?} */ ((currentParent.element)).publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true; /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).publicProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders); /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).allProviders = /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders;\n            }\n            /** @type {?} */\n            var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            /** @type {?} */\n            var isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true; /** @type {?} */\n                    ((/** @type {?} */ ((currentParent)).element)).allProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders);\n                } /** @type {?} */\n                ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).allProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            if (isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                /** @type {?} */\n                var newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    /** @type {?} */\n    var handleEvent = function (view, nodeIndex, eventName, event) { return ((/** @type {?} */ ((nodes[nodeIndex].element)).handleEvent))(view, eventName, event); };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && /** @type {?} */ ((node.element)).name === null;\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent, node, nodeCount) {\n    /** @type {?} */\n    var template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        /** @type {?} */\n        var parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.childCount) {\n        /** @type {?} */\n        var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nexport function createEmbeddedView(parent, anchorDef, viewDef, context) {\n    /** @type {?} */\n    var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nexport function createRootView(root, def, context) {\n    /** @type {?} */\n    var view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nexport function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    /** @type {?} */\n    var rendererType = /** @type {?} */ ((nodeDef.element)).componentRendererType;\n    /** @type {?} */\n    var compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, /** @type {?} */ ((nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    /** @type {?} */\n    var nodes = new Array(def.nodes.length);\n    /** @type {?} */\n    var disposables = def.outputCount ? new Array(def.outputCount) : null;\n    /** @type {?} */\n    var view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables,\n        initIndex: -1\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    /** @type {?} */\n    var renderHost;\n    if (isComponentView(view)) {\n        /** @type {?} */\n        var hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((/** @type {?} */ ((hostDef)).parent)).nodeIndex).renderElement;\n    }\n    /** @type {?} */\n    var def = view.def;\n    /** @type {?} */\n    var nodes = view.nodes;\n    for (var i = 0; i < def.nodes.length; i++) {\n        /** @type {?} */\n        var nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        /** @type {?} */\n        var nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                /** @type {?} */\n                var el = /** @type {?} */ (createElement(view, renderHost, nodeDef));\n                /** @type {?} */\n                var componentView = /** @type {?} */ ((undefined));\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    /** @type {?} */\n                    var compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentView)));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = /** @type {?} */ ({\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = /** @type {?} */ (createText(view, renderHost, nodeDef));\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    /** @type {?} */\n                    var instance = createProviderInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                /** @type {?} */\n                var instance = createPipeInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    /** @type {?} */\n                    var instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    /** @type {?} */\n                    var compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = /** @type {?} */ (createPureExpression(view, nodeDef));\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = /** @type {?} */ (createQuery());\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    /** @type {?} */\n    var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nexport function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n    /** @type {?} */\n    var def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        /** @type {?} */\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            /** @type {?} */\n            var projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    /** @type {?} */\n                    var projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nexport function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    var bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    /** @type {?} */\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" not dirty\", \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    /** @type {?} */\n    var len = view.def.nodes.length;\n    for (var i = 0; i < len; i++) {\n        /** @type {?} */\n        var def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\n/** @enum {number} */\nvar ViewAction = {\n    CreateViewNodes: 0,\n    CheckNoChanges: 1,\n    CheckNoChangesProjectedViews: 2,\n    CheckAndUpdate: 3,\n    CheckAndUpdateProjectedViews: 4,\n    Destroy: 5,\n};\nViewAction[ViewAction.CreateViewNodes] = 'CreateViewNodes';\nViewAction[ViewAction.CheckNoChanges] = 'CheckNoChanges';\nViewAction[ViewAction.CheckNoChangesProjectedViews] = 'CheckNoChangesProjectedViews';\nViewAction[ViewAction.CheckAndUpdate] = 'CheckAndUpdate';\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = 'CheckAndUpdateProjectedViews';\nViewAction[ViewAction.Destroy] = 'Destroy';\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    /** @type {?} */\n    var def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        /** @type {?} */\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    /** @type {?} */\n    var def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        /** @type {?} */\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            /** @type {?} */\n            var embeddedViews = /** @type {?} */ ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    /** @type {?} */\n    var viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    /** @type {?} */\n    var nodeCount = view.def.nodes.length;\n    for (var i = 0; i < nodeCount; i++) {\n        /** @type {?} */\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n//# sourceMappingURL=view.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DebugElement__PRE_R3__, DebugNode__PRE_R3__, EventListener, getDebugNode, indexDebugNode, removeDebugNodeFromIndex } from '../debug/debug_node';\nimport { getInjectableDef } from '../di/defs';\nimport { ErrorHandler } from '../error_handler';\nimport { isDevMode } from '../is_dev_mode';\nimport { RendererFactory2 } from '../render/api';\nimport { Sanitizer } from '../sanitization/security';\nimport { normalizeDebugBindingName, normalizeDebugBindingValue } from '../util/ng_reflect';\nimport { isViewDebugError, viewDestroyedError, viewWrappedDebugError } from './errors';\nimport { resolveDep } from './provider';\nimport { dirtyParentQueries, getQueryValue } from './query';\nimport { createInjector, createNgModuleRef, getComponentViewDefinitionFactory } from './refs';\nimport { Services, asElementData, asPureExpressionData } from './types';\nimport { NOOP, isComponentView, renderNode, resolveDefinition, splitDepsDsl, tokenKey, viewParentEl } from './util';\nimport { checkAndUpdateNode, checkAndUpdateView, checkNoChangesNode, checkNoChangesView, createComponentView, createEmbeddedView, createRootView, destroyView } from './view';\n/** @type {?} */\nvar initialized = false;\n/**\n * @return {?}\n */\nexport function initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    /** @type {?} */\n    var services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.overrideComponentView = services.overrideComponentView;\n    Services.clearOverrides = services.clearOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        overrideComponentView: NOOP,\n        clearOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n        updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        overrideComponentView: debugOverrideComponentView,\n        clearOverrides: debugClearOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    /** @type {?} */\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    /** @type {?} */\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    /** @type {?} */\n    var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    /** @type {?} */\n    var defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    /** @type {?} */\n    var sanitizer = ngModule.injector.get(Sanitizer);\n    /** @type {?} */\n    var errorHandler = ngModule.injector.get(ErrorHandler);\n    /** @type {?} */\n    var renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n    /** @type {?} */\n    var defWithOverride = applyProviderOverridesToView(viewDef);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n    /** @type {?} */\n    var overrideComponentView = viewDefOverrides.get(/** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentProvider)).provider)).token);\n    if (overrideComponentView) {\n        viewDef = overrideComponentView;\n    }\n    else {\n        viewDef = applyProviderOverridesToView(viewDef);\n    }\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    /** @type {?} */\n    var defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\n/** @type {?} */\nvar providerOverrides = new Map();\n/** @type {?} */\nvar providerOverridesWithScope = new Map();\n/** @type {?} */\nvar viewDefOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n    /** @type {?} */\n    var injectableDef;\n    if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n        typeof injectableDef.providedIn === 'function') {\n        providerOverridesWithScope.set(/** @type {?} */ (override.token), override);\n    }\n}\n/**\n * @param {?} comp\n * @param {?} compFactory\n * @return {?}\n */\nfunction debugOverrideComponentView(comp, compFactory) {\n    /** @type {?} */\n    var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n    /** @type {?} */\n    var compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((hostViewDef.nodes[0].element)).componentView)));\n    viewDefOverrides.set(comp, compViewDef);\n}\n/**\n * @return {?}\n */\nfunction debugClearOverrides() {\n    providerOverrides.clear();\n    providerOverridesWithScope.clear();\n    viewDefOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    /** @type {?} */\n    var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function findElementIndicesWithOverwrittenProviders(def) {\n        /** @type {?} */\n        var elIndicesWithOverwrittenProviders = [];\n        /** @type {?} */\n        var lastElementDef = null;\n        for (var i = 0; i < def.nodes.length; i++) {\n            /** @type {?} */\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(/** @type {?} */ ((nodeDef.provider)).token)) {\n                elIndicesWithOverwrittenProviders.push(/** @type {?} */ ((lastElementDef)).nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    /**\n     * @param {?} viewDef\n     * @param {?} elIndex\n     * @return {?}\n     */\n    function applyProviderOverridesToElement(viewDef, elIndex) {\n        for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n            /** @type {?} */\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                /** @type {?} */\n                var provider = /** @type {?} */ ((nodeDef.provider));\n                /** @type {?} */\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function calcHasOverrides(def) {\n        /** @type {?} */\n        var hasOverrides = false;\n        /** @type {?} */\n        var hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            /** @type {?} */\n            var override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        def.modules.forEach(function (module) {\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (/** @type {?} */ ((getInjectableDef(token))).providedIn === module) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function applyProviderOverrides(def) {\n        for (var i = 0; i < def.providers.length; i++) {\n            /** @type {?} */\n            var provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            /** @type {?} */\n            var override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n        if (providerOverridesWithScope.size > 0) {\n            /** @type {?} */\n            var moduleSet_1 = new Set(def.modules);\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (moduleSet_1.has(/** @type {?} */ ((getInjectableDef(token))).providedIn)) {\n                    /** @type {?} */\n                    var provider = {\n                        token: token,\n                        flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                        deps: splitDepsDsl(override.deps),\n                        value: override.value,\n                        index: def.providers.length,\n                    };\n                    def.providers.push(provider);\n                    def.providersByKey[tokenKey(token)] = provider;\n                }\n            });\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    var nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    var nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n/** @enum {number} */\nvar DebugAction = {\n    create: 0,\n    detectChanges: 1,\n    checkNoChanges: 2,\n    destroy: 3,\n    handleEvent: 4,\n};\nDebugAction[DebugAction.create] = 'create';\nDebugAction[DebugAction.detectChanges] = 'detectChanges';\nDebugAction[DebugAction.checkNoChanges] = 'checkNoChanges';\nDebugAction[DebugAction.destroy] = 'destroy';\nDebugAction[DebugAction.handleEvent] = 'handleEvent';\n/** @type {?} */\nvar _currentAction;\n/** @type {?} */\nvar _currentView;\n/** @type {?} */\nvar _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        /** @type {?} */\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        /** @type {?} */\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    /** @type {?} */\n    var changed = (/** @type {?} */ (checkAndUpdateNode)).apply(void 0, [view, nodeDef, argStyle].concat(givenValues));\n    if (changed) {\n        /** @type {?} */\n        var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            /** @type {?} */\n            var bindingValues = {};\n            for (var i = 0; i < nodeDef.bindings.length; i++) {\n                /** @type {?} */\n                var binding = nodeDef.bindings[i];\n                /** @type {?} */\n                var value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            /** @type {?} */\n            var elDef = /** @type {?} */ ((nodeDef.parent));\n            /** @type {?} */\n            var el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!/** @type {?} */ ((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var attr in bindingValues) {\n                    /** @type {?} */\n                    var value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    (/** @type {?} */ (checkNoChangesNode)).apply(void 0, [view, nodeDef, argStyle].concat(values));\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        /** @type {?} */\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        /** @type {?} */\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = /** @class */ (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        /** @type {?} */\n        var elDef = this.nodeDef;\n        /** @type {?} */\n        var elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = /** @type {?} */ ((elDef.parent));\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = /** @type {?} */ ((viewParentEl(elView)));\n                elView = /** @type {?} */ ((elView.parent));\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return createInjector(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var tokens = [];\n            if (this.elDef) {\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    /** @type {?} */\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    /** @type {?} */\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext_.prototype.logError = /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        /** @type {?} */\n        var logViewDef;\n        /** @type {?} */\n        var logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        /** @type {?} */\n        var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        /** @type {?} */\n        var currRenderNodeIndex = -1;\n        /** @type {?} */\n        var nodeLogger = function () {\n            var _a;\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, [console].concat(values));\n            }\n            else {\n                return NOOP;\n            }\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, values);\n        }\n    };\n    return DebugContext_;\n}());\nif (false) {\n    /** @type {?} */\n    DebugContext_.prototype.nodeDef;\n    /** @type {?} */\n    DebugContext_.prototype.elView;\n    /** @type {?} */\n    DebugContext_.prototype.elDef;\n    /** @type {?} */\n    DebugContext_.prototype.view;\n    /** @type {?} */\n    DebugContext_.prototype.nodeIndex;\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef, nodeIndex) {\n    /** @type {?} */\n    var renderNodeIndex = -1;\n    for (var i = 0; i <= nodeIndex; i++) {\n        /** @type {?} */\n        var nodeDef = viewDef.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = /** @type {?} */ ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).nodeIndex);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (var refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    /** @type {?} */\n    var oldAction = _currentAction;\n    /** @type {?} */\n    var oldView = _currentView;\n    /** @type {?} */\n    var oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        /** @type {?} */\n        var result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nexport function getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = /** @class */ (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.createRenderer = /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.begin = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.end = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nexport { DebugRendererFactory2 };\nif (false) {\n    /** @type {?} */\n    DebugRendererFactory2.prototype.delegate;\n}\nvar DebugRenderer2 = /** @class */ (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n        /**\n         * Factory function used to create a `DebugContext` when a node is created.\n         *\n         * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n         *\n         * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n         * or a Render context.\n         */\n        this.debugContextFactory = getCurrentDebugContext;\n        this.data = this.delegate.data;\n    }\n    /**\n     * @param {?} nativeElement\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createDebugContext = /**\n     * @param {?} nativeElement\n     * @return {?}\n     */\n    function (nativeElement) { return this.debugContextFactory(nativeElement); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroyNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this.delegate.destroy(); };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createElement = /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (name, namespace) {\n        /** @type {?} */\n        var el = this.delegate.createElement(name, namespace);\n        /** @type {?} */\n        var debugCtx = this.createDebugContext(el);\n        if (debugCtx) {\n            /** @type {?} */\n            var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n            (/** @type {?} */ (debugEl)).name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createComment = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        /** @type {?} */\n        var comment = this.delegate.createComment(value);\n        /** @type {?} */\n        var debugCtx = this.createDebugContext(comment);\n        if (debugCtx) {\n            indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createText = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        /** @type {?} */\n        var text = this.delegate.createText(value);\n        /** @type {?} */\n        var debugCtx = this.createDebugContext(text);\n        if (debugCtx) {\n            indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n        }\n        return text;\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.appendChild = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (parent, newChild) {\n        /** @type {?} */\n        var debugEl = getDebugNode(parent);\n        /** @type {?} */\n        var debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.insertBefore = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    function (parent, newChild, refChild) {\n        /** @type {?} */\n        var debugEl = getDebugNode(parent);\n        /** @type {?} */\n        var debugChildEl = getDebugNode(newChild);\n        /** @type {?} */\n        var debugRefEl = /** @type {?} */ ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeChild = /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    function (parent, oldChild) {\n        /** @type {?} */\n        var debugEl = getDebugNode(parent);\n        /** @type {?} */\n        var debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @param {?=} preserveContent\n     * @return {?}\n     */\n    DebugRenderer2.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @param {?=} preserveContent\n     * @return {?}\n     */\n    function (selectorOrNode, preserveContent) {\n        /** @type {?} */\n        var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n        /** @type {?} */\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n        }\n        return el;\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, value, namespace) {\n        /** @type {?} */\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            /** @type {?} */\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, namespace) {\n        /** @type {?} */\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            /** @type {?} */\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.addClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        /** @type {?} */\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        /** @type {?} */\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, value, flags) {\n        /** @type {?} */\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, flags) {\n        /** @type {?} */\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) {\n        /** @type {?} */\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    DebugRenderer2.prototype.listen = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            /** @type {?} */\n            var debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.parentNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.nextSibling = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setValue = /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\nexport { DebugRenderer2 };\nif (false) {\n    /** @type {?} */\n    DebugRenderer2.prototype.data;\n    /**\n     * Factory function used to create a `DebugContext` when a node is created.\n     *\n     * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n     *\n     * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n     * or a Render context.\n     * @type {?}\n     */\n    DebugRenderer2.prototype.debugContextFactory;\n    /** @type {?} */\n    DebugRenderer2.prototype.delegate;\n}\n//# sourceMappingURL=services.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Injector } from '../di/injector';\nimport { NgModuleFactory } from '../linker/ng_module_factory';\nimport { initServicesIfNeeded } from './services';\nimport { Services } from './types';\nimport { resolveDefinition } from './util';\n/**\n * @param {?} override\n * @return {?}\n */\nexport function overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\n/**\n * @param {?} comp\n * @param {?} componentFactory\n * @return {?}\n */\nexport function overrideComponentView(comp, componentFactory) {\n    initServicesIfNeeded();\n    return Services.overrideComponentView(comp, componentFactory);\n}\n/**\n * @return {?}\n */\nexport function clearOverrides() {\n    initServicesIfNeeded();\n    return Services.clearOverrides();\n}\n/**\n * @param {?} ngModuleType\n * @param {?} bootstrapComponents\n * @param {?} defFactory\n * @return {?}\n */\nexport function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction cloneNgModuleDefinition(def) {\n    /** @type {?} */\n    var providers = Array.from(def.providers);\n    /** @type {?} */\n    var modules = Array.from(def.modules);\n    /** @type {?} */\n    var providersByKey = {};\n    for (var key in def.providersByKey) {\n        providersByKey[key] = def.providersByKey[key];\n    }\n    return {\n        factory: def.factory,\n        isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n    };\n}\nvar NgModuleFactory_ = /** @class */ (function (_super) {\n    tslib_1.__extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory_.prototype.create = /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    function (parentInjector) {\n        initServicesIfNeeded();\n        /** @type {?} */\n        var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\nif (false) {\n    /** @type {?} */\n    NgModuleFactory_.prototype.moduleType;\n    /** @type {?} */\n    NgModuleFactory_.prototype._bootstrapComponents;\n    /** @type {?} */\n    NgModuleFactory_.prototype._ngModuleDefFactory;\n}\n//# sourceMappingURL=entrypoint.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { anchorDef, elementDef } from './element';\nexport { clearOverrides, createNgModuleFactory, overrideComponentView, overrideProvider } from './entrypoint';\nexport { ngContentDef } from './ng_content';\nexport { moduleDef, moduleProvideDef } from './ng_module';\nexport { directiveDef, pipeDef, providerDef } from './provider';\nexport { pureArrayDef, pureObjectDef, purePipeDef } from './pure_expression';\nexport { queryDef } from './query';\nexport { ViewRef_, createComponentFactory, getComponentViewDefinitionFactory, nodeValue } from './refs';\nexport { initServicesIfNeeded } from './services';\nexport { textDef } from './text';\nexport { EMPTY_ARRAY, EMPTY_MAP, createRendererType2, elementEventFullName, inlineInterpolate, interpolate, rootRenderNodes, tokenKey, unwrapValue } from './util';\nexport { viewDef } from './view';\nexport { attachEmbeddedView, detachEmbeddedView, moveEmbeddedView } from './view_attach';\nexport { shiftInitState, shouldCallLifecycleInitHook, asTextData, asElementData, asProviderData, asPureExpressionData, asQueryList, NodeData, DebugContext, Services } from './types';\n//# sourceMappingURL=index.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { ALLOW_MULTIPLE_PLATFORMS as ɵALLOW_MULTIPLE_PLATFORMS } from './application_ref';\nexport { APP_ID_RANDOM_PROVIDER as ɵAPP_ID_RANDOM_PROVIDER } from './application_tokens';\nexport { defaultIterableDiffers as ɵdefaultIterableDiffers, defaultKeyValueDiffers as ɵdefaultKeyValueDiffers } from './change_detection/change_detection';\nexport { devModeEqual as ɵdevModeEqual } from './change_detection/change_detection_util';\nexport { isListLikeIterable as ɵisListLikeIterable } from './change_detection/change_detection_util';\nexport { ChangeDetectorStatus as ɵChangeDetectorStatus, isDefaultChangeDetectionStrategy as ɵisDefaultChangeDetectionStrategy } from './change_detection/constants';\nexport { Console as ɵConsole } from './console';\nexport { getInjectableDef as ɵgetInjectableDef } from './di/defs';\nexport { inject as ɵinject, setCurrentInjector as ɵsetCurrentInjector } from './di/injector_compatibility';\nexport { APP_ROOT as ɵAPP_ROOT } from './di/scope';\nexport { ivyEnabled as ɵivyEnabled } from './ivy_switch';\nexport { ComponentFactory as ɵComponentFactory } from './linker/component_factory';\nexport { CodegenComponentFactoryResolver as ɵCodegenComponentFactoryResolver } from './linker/component_factory_resolver';\nexport { resolveComponentResources as ɵresolveComponentResources } from './metadata/resource_loading';\nexport { ReflectionCapabilities as ɵReflectionCapabilities } from './reflection/reflection_capabilities';\nexport { RenderDebugInfo as ɵRenderDebugInfo } from './render/api';\nexport { _sanitizeHtml as ɵ_sanitizeHtml } from './sanitization/html_sanitizer';\nexport { _sanitizeStyle as ɵ_sanitizeStyle } from './sanitization/style_sanitizer';\nexport { _sanitizeUrl as ɵ_sanitizeUrl } from './sanitization/url_sanitizer';\nexport { global as ɵglobal, looseIdentical as ɵlooseIdentical, stringify as ɵstringify } from './util';\nexport { makeDecorator as ɵmakeDecorator } from './util/decorators';\nexport { isObservable as ɵisObservable, isPromise as ɵisPromise } from './util/lang';\nexport { clearOverrides as ɵclearOverrides, initServicesIfNeeded as ɵinitServicesIfNeeded, overrideComponentView as ɵoverrideComponentView, overrideProvider as ɵoverrideProvider } from './view/index';\nexport { NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR as ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR } from './view/provider';\n//# sourceMappingURL=core_private_export.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { defineBase as ɵdefineBase, defineComponent as ɵdefineComponent, defineDirective as ɵdefineDirective, definePipe as ɵdefinePipe, defineNgModule as ɵdefineNgModule, detectChanges as ɵdetectChanges, renderComponent as ɵrenderComponent, ComponentFactory as ɵRender3ComponentFactory, ComponentRef as ɵRender3ComponentRef, directiveInject as ɵdirectiveInject, injectAttribute as ɵinjectAttribute, getFactoryOf as ɵgetFactoryOf, getInheritedFactory as ɵgetInheritedFactory, templateRefExtractor as ɵtemplateRefExtractor, ProvidersFeature as ɵProvidersFeature, InheritDefinitionFeature as ɵInheritDefinitionFeature, NgOnChangesFeature as ɵNgOnChangesFeature, LifecycleHooksFeature as ɵLifecycleHooksFeature, NgModuleRef as ɵRender3NgModuleRef, markDirty as ɵmarkDirty, NgModuleFactory as ɵNgModuleFactory, NO_CHANGE as ɵNO_CHANGE, container as ɵcontainer, nextContext as ɵnextContext, elementStart as ɵelementStart, namespaceHTML as ɵnamespaceHTML, namespaceMathML as ɵnamespaceMathML, namespaceSVG as ɵnamespaceSVG, element as ɵelement, listener as ɵlistener, text as ɵtext, embeddedViewStart as ɵembeddedViewStart, query as ɵquery, registerContentQuery as ɵregisterContentQuery, projection as ɵprojection, bind as ɵbind, interpolation1 as ɵinterpolation1, interpolation2 as ɵinterpolation2, interpolation3 as ɵinterpolation3, interpolation4 as ɵinterpolation4, interpolation5 as ɵinterpolation5, interpolation6 as ɵinterpolation6, interpolation7 as ɵinterpolation7, interpolation8 as ɵinterpolation8, interpolationV as ɵinterpolationV, pipeBind1 as ɵpipeBind1, pipeBind2 as ɵpipeBind2, pipeBind3 as ɵpipeBind3, pipeBind4 as ɵpipeBind4, pipeBindV as ɵpipeBindV, pureFunction0 as ɵpureFunction0, pureFunction1 as ɵpureFunction1, pureFunction2 as ɵpureFunction2, pureFunction3 as ɵpureFunction3, pureFunction4 as ɵpureFunction4, pureFunction5 as ɵpureFunction5, pureFunction6 as ɵpureFunction6, pureFunction7 as ɵpureFunction7, pureFunction8 as ɵpureFunction8, pureFunctionV as ɵpureFunctionV, getCurrentView as ɵgetCurrentView, restoreView as ɵrestoreView, containerRefreshStart as ɵcontainerRefreshStart, containerRefreshEnd as ɵcontainerRefreshEnd, queryRefresh as ɵqueryRefresh, loadQueryList as ɵloadQueryList, elementEnd as ɵelementEnd, elementProperty as ɵelementProperty, projectionDef as ɵprojectionDef, reference as ɵreference, enableBindings as ɵenableBindings, disableBindings as ɵdisableBindings, allocHostVars as ɵallocHostVars, elementAttribute as ɵelementAttribute, elementContainerStart as ɵelementContainerStart, elementContainerEnd as ɵelementContainerEnd, elementStyling as ɵelementStyling, elementStylingMap as ɵelementStylingMap, elementStyleProp as ɵelementStyleProp, elementStylingApply as ɵelementStylingApply, elementClassProp as ɵelementClassProp, textBinding as ɵtextBinding, template as ɵtemplate, embeddedViewEnd as ɵembeddedViewEnd, store as ɵstore, load as ɵload, pipe as ɵpipe, whenRendered as ɵwhenRendered, i18n as ɵi18n, i18nAttributes as ɵi18nAttributes, i18nExp as ɵi18nExp, i18nStart as ɵi18nStart, i18nEnd as ɵi18nEnd, i18nApply as ɵi18nApply, i18nPostprocess as ɵi18nPostprocess, setClassMetadata as ɵsetClassMetadata, } from './render3/index';\nexport { compileComponent as ɵcompileComponent, compileDirective as ɵcompileDirective, } from './render3/jit/directive';\nexport { compileNgModule as ɵcompileNgModule, compileNgModuleDefs as ɵcompileNgModuleDefs, patchComponentDefWithScope as ɵpatchComponentDefWithScope, } from './render3/jit/module';\nexport { compilePipe as ɵcompilePipe, } from './render3/jit/pipe';\nexport { sanitizeHtml as ɵsanitizeHtml, sanitizeStyle as ɵsanitizeStyle, sanitizeUrl as ɵsanitizeUrl, sanitizeResourceUrl as ɵsanitizeResourceUrl, } from './sanitization/sanitization';\nexport { bypassSanitizationTrustHtml as ɵbypassSanitizationTrustHtml, bypassSanitizationTrustStyle as ɵbypassSanitizationTrustStyle, bypassSanitizationTrustScript as ɵbypassSanitizationTrustScript, bypassSanitizationTrustUrl as ɵbypassSanitizationTrustUrl, bypassSanitizationTrustResourceUrl as ɵbypassSanitizationTrustResourceUrl, } from './sanitization/bypass';\nexport { getContext as ɵgetContext } from './render3/context_discovery';\nexport { bindPlayerFactory as ɵbindPlayerFactory, } from './render3/styling/player_factory';\nexport { addPlayer as ɵaddPlayer, getPlayers as ɵgetPlayers, } from './render3/players';\nexport { compileNgModuleFactory__POST_R3__ as ɵcompileNgModuleFactory__POST_R3__ } from './application_ref';\nexport { SWITCH_COMPILE_COMPONENT__POST_R3__ as ɵSWITCH_COMPILE_COMPONENT__POST_R3__, SWITCH_COMPILE_DIRECTIVE__POST_R3__ as ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__, SWITCH_COMPILE_PIPE__POST_R3__ as ɵSWITCH_COMPILE_PIPE__POST_R3__, } from './metadata/directives';\nexport { SWITCH_COMPILE_NGMODULE__POST_R3__ as ɵSWITCH_COMPILE_NGMODULE__POST_R3__, } from './metadata/ng_module';\nexport { SWITCH_COMPILE_INJECTABLE__POST_R3__ as ɵSWITCH_COMPILE_INJECTABLE__POST_R3__, } from './di/injectable';\nexport { SWITCH_IVY_ENABLED__POST_R3__ as ɵSWITCH_IVY_ENABLED__POST_R3__, } from './ivy_switch';\nexport { SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ as ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__, } from './change_detection/change_detector_ref';\nexport { SWITCH_ELEMENT_REF_FACTORY__POST_R3__ as ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__, } from './linker/element_ref';\nexport { SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ as ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__, } from './linker/template_ref';\nexport { SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ as ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__, } from './linker/view_container_ref';\nexport { SWITCH_RENDERER2_FACTORY__POST_R3__ as ɵSWITCH_RENDERER2_FACTORY__POST_R3__, } from './render/api';\nexport { publishGlobalUtil as ɵpublishGlobalUtil, publishDefaultGlobalUtils as ɵpublishDefaultGlobalUtils } from './render3/global_utils';\nexport { SWITCH_INJECTOR_FACTORY__POST_R3__ as ɵSWITCH_INJECTOR_FACTORY__POST_R3__, } from './di/injector';\n// clang-format on\n//# sourceMappingURL=core_render3_private_export.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { CodegenComponentFactoryResolver as ɵCodegenComponentFactoryResolver } from './linker/component_factory_resolver';\nexport { registerModuleFactory as ɵregisterModuleFactory } from './linker/ng_module_factory_loader';\nexport { EMPTY_ARRAY as ɵEMPTY_ARRAY, EMPTY_MAP as ɵEMPTY_MAP, anchorDef as ɵand, createComponentFactory as ɵccf, createNgModuleFactory as ɵcmf, createRendererType2 as ɵcrt, directiveDef as ɵdid, elementDef as ɵeld, elementEventFullName as ɵelementEventFullName, getComponentViewDefinitionFactory as ɵgetComponentViewDefinitionFactory, inlineInterpolate as ɵinlineInterpolate, interpolate as ɵinterpolate, moduleDef as ɵmod, moduleProvideDef as ɵmpd, ngContentDef as ɵncd, nodeValue as ɵnov, pipeDef as ɵpid, providerDef as ɵprd, pureArrayDef as ɵpad, pureObjectDef as ɵpod, purePipeDef as ɵppd, queryDef as ɵqud, textDef as ɵted, unwrapValue as ɵunv, viewDef as ɵvid } from './view/index';\n//# sourceMappingURL=codegen_private_exports.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point from which you should import all public core APIs.\n */\nexport { ANALYZE_FOR_ENTRY_COMPONENTS, Attribute, ContentChild, ContentChildren, Query, ViewChild, ViewChildren, Component, Directive, HostBinding, HostListener, Input, Output, Pipe, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule, ViewEncapsulation } from './metadata';\nexport { Version, VERSION } from './version';\nexport { defineInjectable, defineInjector, forwardRef, resolveForwardRef, Injectable, INJECTOR, Injector, inject, InjectFlags, ReflectiveInjector, createInjector, ResolvedReflectiveFactory, ReflectiveKey, InjectionToken, Inject, Optional, Self, SkipSelf, Host } from './di';\nexport { createPlatform, assertPlatform, destroyPlatform, getPlatform, PlatformRef, ApplicationRef, createPlatformFactory, NgProbeToken } from './application_ref';\nexport { enableProdMode, isDevMode } from './is_dev_mode';\nexport { APP_ID, PACKAGE_ROOT_URL, PLATFORM_INITIALIZER, PLATFORM_ID, APP_BOOTSTRAP_LISTENER } from './application_tokens';\nexport { APP_INITIALIZER, ApplicationInitStatus } from './application_init';\nexport { NgZone, ɵNoopNgZone } from './zone';\nexport { RenderComponentType, Renderer, Renderer2, RendererFactory2, RendererStyleFlags2, RootRenderer } from './render';\nexport { COMPILER_OPTIONS, Compiler, CompilerFactory, ModuleWithComponentFactories, ComponentFactory, ComponentRef, ComponentFactoryResolver, ElementRef, NgModuleFactory, NgModuleRef, NgModuleFactoryLoader, getModuleFactory, QueryList, SystemJsNgModuleLoader, SystemJsNgModuleLoaderConfig, TemplateRef, ViewContainerRef, EmbeddedViewRef, ViewRef } from './linker';\nexport { DebugElement, DebugNode, asNativeElements, getDebugNode } from './debug/debug_node';\nexport { Testability, TestabilityRegistry, setTestabilityGetter } from './testability/testability';\nexport { ChangeDetectionStrategy, ChangeDetectorRef, DefaultIterableDiffer, IterableDiffers, KeyValueDiffers, SimpleChange, WrappedValue } from './change_detection';\nexport { platformCore } from './platform_core_providers';\nexport { TRANSLATIONS, TRANSLATIONS_FORMAT, LOCALE_ID, MissingTranslationStrategy } from './i18n/tokens';\nexport { ApplicationModule } from './application_module';\nexport { wtfCreateScope, wtfLeave, wtfStartTimeRange, wtfEndTimeRange } from './profile/profile';\nexport { Type } from './type';\nexport { EventEmitter } from './event_emitter';\nexport { ErrorHandler } from './error_handler';\nexport { ɵALLOW_MULTIPLE_PLATFORMS, ɵAPP_ID_RANDOM_PROVIDER, ɵdefaultIterableDiffers, ɵdefaultKeyValueDiffers, ɵdevModeEqual, ɵisListLikeIterable, ɵChangeDetectorStatus, ɵisDefaultChangeDetectionStrategy, ɵConsole, ɵgetInjectableDef, ɵinject, ɵsetCurrentInjector, ɵAPP_ROOT, ɵivyEnabled, ɵComponentFactory, ɵCodegenComponentFactoryResolver, ɵresolveComponentResources, ɵReflectionCapabilities, ɵRenderDebugInfo, ɵ_sanitizeHtml, ɵ_sanitizeStyle, ɵ_sanitizeUrl, ɵglobal, ɵlooseIdentical, ɵstringify, ɵmakeDecorator, ɵisObservable, ɵisPromise, ɵclearOverrides, ɵinitServicesIfNeeded, ɵoverrideComponentView, ɵoverrideProvider, ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR } from './core_private_export';\nexport { ɵdefineBase, ɵdefineComponent, ɵdefineDirective, ɵdefinePipe, ɵdefineNgModule, ɵdetectChanges, ɵrenderComponent, ɵRender3ComponentFactory, ɵRender3ComponentRef, ɵdirectiveInject, ɵinjectAttribute, ɵgetFactoryOf, ɵgetInheritedFactory, ɵtemplateRefExtractor, ɵProvidersFeature, ɵInheritDefinitionFeature, ɵNgOnChangesFeature, ɵLifecycleHooksFeature, ɵRender3NgModuleRef, ɵmarkDirty, ɵNgModuleFactory, ɵNO_CHANGE, ɵcontainer, ɵnextContext, ɵelementStart, ɵnamespaceHTML, ɵnamespaceMathML, ɵnamespaceSVG, ɵelement, ɵlistener, ɵtext, ɵembeddedViewStart, ɵquery, ɵregisterContentQuery, ɵprojection, ɵbind, ɵinterpolation1, ɵinterpolation2, ɵinterpolation3, ɵinterpolation4, ɵinterpolation5, ɵinterpolation6, ɵinterpolation7, ɵinterpolation8, ɵinterpolationV, ɵpipeBind1, ɵpipeBind2, ɵpipeBind3, ɵpipeBind4, ɵpipeBindV, ɵpureFunction0, ɵpureFunction1, ɵpureFunction2, ɵpureFunction3, ɵpureFunction4, ɵpureFunction5, ɵpureFunction6, ɵpureFunction7, ɵpureFunction8, ɵpureFunctionV, ɵgetCurrentView, ɵrestoreView, ɵcontainerRefreshStart, ɵcontainerRefreshEnd, ɵqueryRefresh, ɵloadQueryList, ɵelementEnd, ɵelementProperty, ɵprojectionDef, ɵreference, ɵenableBindings, ɵdisableBindings, ɵallocHostVars, ɵelementAttribute, ɵelementContainerStart, ɵelementContainerEnd, ɵelementStyling, ɵelementStylingMap, ɵelementStyleProp, ɵelementStylingApply, ɵelementClassProp, ɵtextBinding, ɵtemplate, ɵembeddedViewEnd, ɵstore, ɵload, ɵpipe, ɵwhenRendered, ɵi18n, ɵi18nAttributes, ɵi18nExp, ɵi18nStart, ɵi18nEnd, ɵi18nApply, ɵi18nPostprocess, ɵsetClassMetadata, ɵcompileComponent, ɵcompileDirective, ɵcompileNgModule, ɵcompileNgModuleDefs, ɵpatchComponentDefWithScope, ɵcompilePipe, ɵsanitizeHtml, ɵsanitizeStyle, ɵsanitizeUrl, ɵsanitizeResourceUrl, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, ɵgetContext, ɵbindPlayerFactory, ɵaddPlayer, ɵgetPlayers, ɵcompileNgModuleFactory__POST_R3__, ɵSWITCH_COMPILE_COMPONENT__POST_R3__, ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__, ɵSWITCH_COMPILE_PIPE__POST_R3__, ɵSWITCH_COMPILE_NGMODULE__POST_R3__, ɵSWITCH_COMPILE_INJECTABLE__POST_R3__, ɵSWITCH_IVY_ENABLED__POST_R3__, ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__, ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__, ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__, ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__, ɵSWITCH_RENDERER2_FACTORY__POST_R3__, ɵpublishGlobalUtil, ɵpublishDefaultGlobalUtils, ɵSWITCH_INJECTOR_FACTORY__POST_R3__ } from './core_render3_private_export';\nexport { Sanitizer, SecurityContext } from './sanitization/security';\nexport { ɵregisterModuleFactory, ɵEMPTY_ARRAY, ɵEMPTY_MAP, ɵand, ɵccf, ɵcmf, ɵcrt, ɵdid, ɵeld, ɵelementEventFullName, ɵgetComponentViewDefinitionFactory, ɵinlineInterpolate, ɵinterpolate, ɵmod, ɵmpd, ɵncd, ɵnov, ɵpid, ɵprd, ɵpad, ɵpod, ɵppd, ɵqud, ɵted, ɵunv, ɵvid } from './codegen_private_exports';\n//# sourceMappingURL=core.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport { createPlatform, assertPlatform, destroyPlatform, getPlatform, PlatformRef, ApplicationRef, createPlatformFactory, NgProbeToken, enableProdMode, isDevMode, APP_ID, PACKAGE_ROOT_URL, PLATFORM_INITIALIZER, PLATFORM_ID, APP_BOOTSTRAP_LISTENER, APP_INITIALIZER, ApplicationInitStatus, DebugElement, DebugNode, asNativeElements, getDebugNode, Testability, TestabilityRegistry, setTestabilityGetter, TRANSLATIONS, TRANSLATIONS_FORMAT, LOCALE_ID, MissingTranslationStrategy, ApplicationModule, wtfCreateScope, wtfLeave, wtfStartTimeRange, wtfEndTimeRange, Type, EventEmitter, ErrorHandler, Sanitizer, SecurityContext, ANALYZE_FOR_ENTRY_COMPONENTS, Attribute, ContentChild, ContentChildren, Query, ViewChild, ViewChildren, Component, Directive, HostBinding, HostListener, Input, Output, Pipe, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule, ViewEncapsulation, Version, VERSION, defineInjectable, defineInjector, forwardRef, resolveForwardRef, Injectable, INJECTOR, Injector, inject, InjectFlags, ReflectiveInjector, createInjector, ResolvedReflectiveFactory, ReflectiveKey, InjectionToken, Inject, Optional, Self, SkipSelf, Host, NgZone, ɵNoopNgZone, RenderComponentType, Renderer, Renderer2, RendererFactory2, RendererStyleFlags2, RootRenderer, COMPILER_OPTIONS, Compiler, CompilerFactory, ModuleWithComponentFactories, ComponentFactory, ComponentRef, ComponentFactoryResolver, ElementRef, NgModuleFactory, NgModuleRef, NgModuleFactoryLoader, getModuleFactory, QueryList, SystemJsNgModuleLoader, SystemJsNgModuleLoaderConfig, TemplateRef, ViewContainerRef, EmbeddedViewRef, ViewRef, ChangeDetectionStrategy, ChangeDetectorRef, DefaultIterableDiffer, IterableDiffers, KeyValueDiffers, SimpleChange, WrappedValue, platformCore, ɵALLOW_MULTIPLE_PLATFORMS, ɵAPP_ID_RANDOM_PROVIDER, ɵdefaultIterableDiffers, ɵdefaultKeyValueDiffers, ɵdevModeEqual, ɵisListLikeIterable, ɵChangeDetectorStatus, ɵisDefaultChangeDetectionStrategy, ɵConsole, ɵgetInjectableDef, ɵinject, ɵsetCurrentInjector, ɵAPP_ROOT, ɵivyEnabled, ɵComponentFactory, ɵCodegenComponentFactoryResolver, ɵresolveComponentResources, ɵReflectionCapabilities, ɵRenderDebugInfo, ɵ_sanitizeHtml, ɵ_sanitizeStyle, ɵ_sanitizeUrl, ɵglobal, ɵlooseIdentical, ɵstringify, ɵmakeDecorator, ɵisObservable, ɵisPromise, ɵclearOverrides, ɵinitServicesIfNeeded, ɵoverrideComponentView, ɵoverrideProvider, ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, ɵdefineBase, ɵdefineComponent, ɵdefineDirective, ɵdefinePipe, ɵdefineNgModule, ɵdetectChanges, ɵrenderComponent, ɵRender3ComponentFactory, ɵRender3ComponentRef, ɵdirectiveInject, ɵinjectAttribute, ɵgetFactoryOf, ɵgetInheritedFactory, ɵtemplateRefExtractor, ɵProvidersFeature, ɵInheritDefinitionFeature, ɵNgOnChangesFeature, ɵLifecycleHooksFeature, ɵRender3NgModuleRef, ɵmarkDirty, ɵNgModuleFactory, ɵNO_CHANGE, ɵcontainer, ɵnextContext, ɵelementStart, ɵnamespaceHTML, ɵnamespaceMathML, ɵnamespaceSVG, ɵelement, ɵlistener, ɵtext, ɵembeddedViewStart, ɵquery, ɵregisterContentQuery, ɵprojection, ɵbind, ɵinterpolation1, ɵinterpolation2, ɵinterpolation3, ɵinterpolation4, ɵinterpolation5, ɵinterpolation6, ɵinterpolation7, ɵinterpolation8, ɵinterpolationV, ɵpipeBind1, ɵpipeBind2, ɵpipeBind3, ɵpipeBind4, ɵpipeBindV, ɵpureFunction0, ɵpureFunction1, ɵpureFunction2, ɵpureFunction3, ɵpureFunction4, ɵpureFunction5, ɵpureFunction6, ɵpureFunction7, ɵpureFunction8, ɵpureFunctionV, ɵgetCurrentView, ɵrestoreView, ɵcontainerRefreshStart, ɵcontainerRefreshEnd, ɵqueryRefresh, ɵloadQueryList, ɵelementEnd, ɵelementProperty, ɵprojectionDef, ɵreference, ɵenableBindings, ɵdisableBindings, ɵallocHostVars, ɵelementAttribute, ɵelementContainerStart, ɵelementContainerEnd, ɵelementStyling, ɵelementStylingMap, ɵelementStyleProp, ɵelementStylingApply, ɵelementClassProp, ɵtextBinding, ɵtemplate, ɵembeddedViewEnd, ɵstore, ɵload, ɵpipe, ɵwhenRendered, ɵi18n, ɵi18nAttributes, ɵi18nExp, ɵi18nStart, ɵi18nEnd, ɵi18nApply, ɵi18nPostprocess, ɵsetClassMetadata, ɵcompileComponent, ɵcompileDirective, ɵcompileNgModule, ɵcompileNgModuleDefs, ɵpatchComponentDefWithScope, ɵcompilePipe, ɵsanitizeHtml, ɵsanitizeStyle, ɵsanitizeUrl, ɵsanitizeResourceUrl, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, ɵgetContext, ɵbindPlayerFactory, ɵaddPlayer, ɵgetPlayers, ɵcompileNgModuleFactory__POST_R3__, ɵSWITCH_COMPILE_COMPONENT__POST_R3__, ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__, ɵSWITCH_COMPILE_PIPE__POST_R3__, ɵSWITCH_COMPILE_NGMODULE__POST_R3__, ɵSWITCH_COMPILE_INJECTABLE__POST_R3__, ɵSWITCH_IVY_ENABLED__POST_R3__, ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__, ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__, ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__, ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__, ɵSWITCH_RENDERER2_FACTORY__POST_R3__, ɵpublishGlobalUtil, ɵpublishDefaultGlobalUtils, ɵSWITCH_INJECTOR_FACTORY__POST_R3__, ɵregisterModuleFactory, ɵEMPTY_ARRAY, ɵEMPTY_MAP, ɵand, ɵccf, ɵcmf, ɵcrt, ɵdid, ɵeld, ɵelementEventFullName, ɵgetComponentViewDefinitionFactory, ɵinlineInterpolate, ɵinterpolate, ɵmod, ɵmpd, ɵncd, ɵnov, ɵpid, ɵprd, ɵpad, ɵpod, ɵppd, ɵqud, ɵted, ɵunv, ɵvid } from './src/core';\n// This file only reexports content of the `src` folder. Keep it that way.\n//# sourceMappingURL=public_api.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { createPlatform, assertPlatform, destroyPlatform, getPlatform, PlatformRef, ApplicationRef, createPlatformFactory, NgProbeToken, enableProdMode, isDevMode, APP_ID, PACKAGE_ROOT_URL, PLATFORM_INITIALIZER, PLATFORM_ID, APP_BOOTSTRAP_LISTENER, APP_INITIALIZER, ApplicationInitStatus, DebugElement, DebugNode, asNativeElements, getDebugNode, Testability, TestabilityRegistry, setTestabilityGetter, TRANSLATIONS, TRANSLATIONS_FORMAT, LOCALE_ID, MissingTranslationStrategy, ApplicationModule, wtfCreateScope, wtfLeave, wtfStartTimeRange, wtfEndTimeRange, Type, EventEmitter, ErrorHandler, Sanitizer, SecurityContext, ANALYZE_FOR_ENTRY_COMPONENTS, Attribute, ContentChild, ContentChildren, Query, ViewChild, ViewChildren, Component, Directive, HostBinding, HostListener, Input, Output, Pipe, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule, ViewEncapsulation, Version, VERSION, defineInjectable, defineInjector, forwardRef, resolveForwardRef, Injectable, INJECTOR, Injector, inject, InjectFlags, ReflectiveInjector, createInjector, ResolvedReflectiveFactory, ReflectiveKey, InjectionToken, Inject, Optional, Self, SkipSelf, Host, NgZone, ɵNoopNgZone, RenderComponentType, Renderer, Renderer2, RendererFactory2, RendererStyleFlags2, RootRenderer, COMPILER_OPTIONS, Compiler, CompilerFactory, ModuleWithComponentFactories, ComponentFactory, ComponentRef, ComponentFactoryResolver, ElementRef, NgModuleFactory, NgModuleRef, NgModuleFactoryLoader, getModuleFactory, QueryList, SystemJsNgModuleLoader, SystemJsNgModuleLoaderConfig, TemplateRef, ViewContainerRef, EmbeddedViewRef, ViewRef, ChangeDetectionStrategy, ChangeDetectorRef, DefaultIterableDiffer, IterableDiffers, KeyValueDiffers, SimpleChange, WrappedValue, platformCore, ɵALLOW_MULTIPLE_PLATFORMS, ɵAPP_ID_RANDOM_PROVIDER, ɵdefaultIterableDiffers, ɵdefaultKeyValueDiffers, ɵdevModeEqual, ɵisListLikeIterable, ɵChangeDetectorStatus, ɵisDefaultChangeDetectionStrategy, ɵConsole, ɵgetInjectableDef, ɵinject, ɵsetCurrentInjector, ɵAPP_ROOT, ɵivyEnabled, ɵComponentFactory, ɵCodegenComponentFactoryResolver, ɵresolveComponentResources, ɵReflectionCapabilities, ɵRenderDebugInfo, ɵ_sanitizeHtml, ɵ_sanitizeStyle, ɵ_sanitizeUrl, ɵglobal, ɵlooseIdentical, ɵstringify, ɵmakeDecorator, ɵisObservable, ɵisPromise, ɵclearOverrides, ɵinitServicesIfNeeded, ɵoverrideComponentView, ɵoverrideProvider, ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, ɵdefineBase, ɵdefineComponent, ɵdefineDirective, ɵdefinePipe, ɵdefineNgModule, ɵdetectChanges, ɵrenderComponent, ɵRender3ComponentFactory, ɵRender3ComponentRef, ɵdirectiveInject, ɵinjectAttribute, ɵgetFactoryOf, ɵgetInheritedFactory, ɵtemplateRefExtractor, ɵProvidersFeature, ɵInheritDefinitionFeature, ɵNgOnChangesFeature, ɵLifecycleHooksFeature, ɵRender3NgModuleRef, ɵmarkDirty, ɵNgModuleFactory, ɵNO_CHANGE, ɵcontainer, ɵnextContext, ɵelementStart, ɵnamespaceHTML, ɵnamespaceMathML, ɵnamespaceSVG, ɵelement, ɵlistener, ɵtext, ɵembeddedViewStart, ɵquery, ɵregisterContentQuery, ɵprojection, ɵbind, ɵinterpolation1, ɵinterpolation2, ɵinterpolation3, ɵinterpolation4, ɵinterpolation5, ɵinterpolation6, ɵinterpolation7, ɵinterpolation8, ɵinterpolationV, ɵpipeBind1, ɵpipeBind2, ɵpipeBind3, ɵpipeBind4, ɵpipeBindV, ɵpureFunction0, ɵpureFunction1, ɵpureFunction2, ɵpureFunction3, ɵpureFunction4, ɵpureFunction5, ɵpureFunction6, ɵpureFunction7, ɵpureFunction8, ɵpureFunctionV, ɵgetCurrentView, ɵrestoreView, ɵcontainerRefreshStart, ɵcontainerRefreshEnd, ɵqueryRefresh, ɵloadQueryList, ɵelementEnd, ɵelementProperty, ɵprojectionDef, ɵreference, ɵenableBindings, ɵdisableBindings, ɵallocHostVars, ɵelementAttribute, ɵelementContainerStart, ɵelementContainerEnd, ɵelementStyling, ɵelementStylingMap, ɵelementStyleProp, ɵelementStylingApply, ɵelementClassProp, ɵtextBinding, ɵtemplate, ɵembeddedViewEnd, ɵstore, ɵload, ɵpipe, ɵwhenRendered, ɵi18n, ɵi18nAttributes, ɵi18nExp, ɵi18nStart, ɵi18nEnd, ɵi18nApply, ɵi18nPostprocess, ɵsetClassMetadata, ɵcompileComponent, ɵcompileDirective, ɵcompileNgModule, ɵcompileNgModuleDefs, ɵpatchComponentDefWithScope, ɵcompilePipe, ɵsanitizeHtml, ɵsanitizeStyle, ɵsanitizeUrl, ɵsanitizeResourceUrl, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, ɵgetContext, ɵbindPlayerFactory, ɵaddPlayer, ɵgetPlayers, ɵcompileNgModuleFactory__POST_R3__, ɵSWITCH_COMPILE_COMPONENT__POST_R3__, ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__, ɵSWITCH_COMPILE_PIPE__POST_R3__, ɵSWITCH_COMPILE_NGMODULE__POST_R3__, ɵSWITCH_COMPILE_INJECTABLE__POST_R3__, ɵSWITCH_IVY_ENABLED__POST_R3__, ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__, ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__, ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__, ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__, ɵSWITCH_RENDERER2_FACTORY__POST_R3__, ɵpublishGlobalUtil, ɵpublishDefaultGlobalUtils, ɵSWITCH_INJECTOR_FACTORY__POST_R3__, ɵregisterModuleFactory, ɵEMPTY_ARRAY, ɵEMPTY_MAP, ɵand, ɵccf, ɵcmf, ɵcrt, ɵdid, ɵeld, ɵelementEventFullName, ɵgetComponentViewDefinitionFactory, ɵinlineInterpolate, ɵinterpolate, ɵmod, ɵmpd, ɵncd, ɵnov, ɵpid, ɵprd, ɵpad, ɵpod, ɵppd, ɵqud, ɵted, ɵunv, ɵvid } from './public_api';\nexport { APPLICATION_MODULE_PROVIDERS as ɵr, _iterableDiffersFactory as ɵo, _keyValueDiffersFactory as ɵp, _localeFactory as ɵq } from './src/application_module';\nexport { _appIdRandomProviderFactory as ɵg } from './src/application_tokens';\nexport { DefaultIterableDifferFactory as ɵm } from './src/change_detection/differs/default_iterable_differ';\nexport { DefaultKeyValueDifferFactory as ɵn } from './src/change_detection/differs/default_keyvalue_differ';\nexport { DebugElement__PRE_R3__ as ɵl, DebugNode__PRE_R3__ as ɵk } from './src/debug/debug_node';\nexport { injectInjectorOnly as ɵc } from './src/di/injector_compatibility';\nexport { ReflectiveInjector_ as ɵd } from './src/di/reflective_injector';\nexport { ReflectiveDependency as ɵe, resolveReflectiveProviders as ɵf } from './src/di/reflective_provider';\nexport { wtfEnabled as ɵs } from './src/profile/profile';\nexport { createScope as ɵu, detectWTF as ɵt, endTimeRange as ɵx, leave as ɵv, startTimeRange as ɵw } from './src/profile/wtf_impl';\nexport { injectAttributeImpl as ɵba } from './src/render3/di';\nexport { NG_INJECTABLE_DEF as ɵbh } from './src/render3/fields';\nexport { getLView as ɵbb, getPreviousOrParentTNode as ɵbc, nextContextImpl as ɵbd } from './src/render3/state';\nexport { BoundPlayerFactory as ɵbg } from './src/render3/styling/player_factory';\nexport { loadInternal as ɵbk } from './src/render3/util';\nexport { createElementRef as ɵh, createTemplateRef as ɵi, createViewRef as ɵj } from './src/render3/view_engine_compatibility';\nexport { makeParamDecorator as ɵa, makePropDecorator as ɵb } from './src/util/decorators';\nexport { getClosureSafeProperty as ɵbi } from './src/util/property';\nexport { _def as ɵy } from './src/view/provider';\nexport { DebugContext as ɵz } from './src/view/types';\n//# sourceMappingURL=core.js.map"],"names":["tslib_1.__assign","ViewEncapsulation","global","unusedValueExportToPlacateAjd","stringify","getRootContext","INJECTOR","ɵ0","EMPTY","ɵ1","NULL_INJECTOR","unused1","unused2","unused3","unused4","unused5","projectionNodeStack","unusedValueToPlacateAjd","EMPTY_OBJ","updateElementClassProp","updateElementStyleProp","tslib_1.__extends","container","NodeInjector","viewEngine_NgModuleRef","getRootView","element","isComponentDef","CIRCULAR","EMPTY_ARRAY","isComponent","resolveProvider","ComponentRef","ComponentFactory","ComponentFactoryResolver","render3InjectElementRef","render3InjectRenderer2","viewEngine_ComponentFactoryResolver","projection","viewEngine_ElementRef","viewEngine_ComponentFactory","viewEngine_ComponentRef","merge","NgModuleRef","NgModuleFactory","viewEngine_NgModuleFactory","getPipeDef","render3InjectTemplateRef","insertView","removeView","ViewEngine_ElementRef","ViewEngine_TemplateRef","r3.defineBase","r3.defineComponent","r3.defineDirective","r3.defineNgModule","r3.definePipe","r3.directiveInject","r3.getFactoryOf","r3.getInheritedFactory","r3.injectAttribute","r3.templateRefExtractor","r3.NgOnChangesFeature","r3.ProvidersFeature","r3.InheritDefinitionFeature","r3.elementAttribute","r3.bind","r3.container","r3.nextContext","r3.containerRefreshStart","r3.containerRefreshEnd","r3.loadQueryList","r3.namespaceHTML","r3.namespaceMathML","r3.namespaceSVG","r3.enableBindings","r3.disableBindings","r3.allocHostVars","r3.elementStart","r3.elementEnd","r3.element","r3.elementContainerStart","r3.elementContainerEnd","r3.pureFunction0","r3.pureFunction1","r3.pureFunction2","r3.pureFunction3","r3.pureFunction4","r3.pureFunction5","r3.pureFunction6","r3.pureFunction7","r3.pureFunction8","r3.pureFunctionV","r3.getCurrentView","r3.restoreView","r3.interpolation1","r3.interpolation2","r3.interpolation3","r3.interpolation4","r3.interpolation5","r3.interpolation6","r3.interpolation7","r3.interpolation8","r3.interpolationV","r3.elementClassProp","r3.listener","r3.load","r3.projection","r3.elementProperty","r3.pipeBind1","r3.pipeBind2","r3.pipeBind3","r3.pipeBind4","r3.pipeBindV","r3.projectionDef","r3.pipe","r3.query","r3.queryRefresh","r3.registerContentQuery","r3.reference","r3.elementStyling","r3.elementStylingMap","r3.elementStyleProp","r3.elementStylingApply","r3.template","r3.text","r3.textBinding","r3.embeddedViewStart","r3.embeddedViewEnd","r3.i18n","r3.i18nAttributes","r3.i18nExp","r3.i18nStart","r3.i18nEnd","r3.i18nApply","r3.i18nPostprocess","sanitization.sanitizeHtml","sanitization.sanitizeStyle","sanitization.defaultStyleSanitizer","sanitization.sanitizeResourceUrl","sanitization.sanitizeScript","sanitization.sanitizeUrl","flatten","render3CompileComponent","render3CompileDirective","render3CompilePipe","USE_VALUE","render3CompileNgModule","render3CompileInjectable","ResolvedReflectiveFactory","noop","R3NgModuleFactory","QueryList","render3InjectViewContainerRef","render3InjectChangeDetectorRef","ViewRef","_renderCompCount","renderNode","InjectorRefTokenKey","INJECTORRefTokenKey","_createProviderInstance","createInjector","RendererV1","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey","createQuery","anchorDef","viewDef"],"mappings":"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"}